/* DO NOT EDIT THIS FILE - it is machine generated (JCGO_116) */

#ifdef JCGO_116

JCGO_NOSEP_INLINE void CFASTCALL
java_nio_ByteBuffer__void( java_nio_ByteBuffer This );

JCGO_NOSEP_INLINE jint CFASTCALL
java_nio_ByteBuffer__compareTo__Lo( java_nio_ByteBuffer This, java_lang_Object
 obj );

JCGO_NOSEP_INLINE java_nio_ByteBuffer CFASTCALL
java_nio_ByteBuffer__this__IIIIL8d4dvBAI( java_nio_ByteBuffer This,
 java_lang_Object address, jbyteArr backing_buffer, jint capacity,
 jint limit, jint position, jint mark, jint array_offset );

JCGO_NOSEP_INLINE java_nio_ByteBuffer CFASTCALL
java_nio_ByteBuffer__allocate__I( jint capacity );

JCGO_NOSEP_FRWINL java_nio_ByteBuffer CFASTCALL
java_nio_ByteBuffer__wrap__BAII( jbyteArr array_7w5, jint offset,
 jint length );
JCGO_NOSEP_STATIC java_nio_ByteBuffer CFASTCALL
java_nio_ByteBuffer__wrap__BAIIX( jbyteArr array_7w5, jint offset,
 jint length, java_nio_ByteBufferImpl jcgo_stackparam );

JCGO_NOSEP_INLINE java_nio_ByteBuffer CFASTCALL
java_nio_ByteBuffer__wrap__BA( jbyteArr array_7w5 );

JCGO_NOSEP_FRWINL java_nio_ByteBuffer CFASTCALL
java_nio_ByteBuffer__get__BA( java_nio_ByteBuffer This, jbyteArr dst
 );

JCGO_NOSEP_INLINE java_nio_ByteBuffer CFASTCALL
java_nio_ByteBuffer__put__BA( java_nio_ByteBuffer This, jbyteArr src
 );

JCGO_NOSEP_FRWINL jboolean CFASTCALL
java_nio_ByteBuffer__hasArray__( java_nio_ByteBuffer This );

JCGO_NOSEP_STATIC jbyteArr CFASTCALL
java_nio_ByteBuffer__array__( java_nio_ByteBuffer This );

JCGO_NOSEP_STATIC jint CFASTCALL
java_nio_ByteBuffer__arrayOffset__( java_nio_ByteBuffer This );

JCGO_NOSEP_STATIC jint CFASTCALL
java_nio_ByteBuffer__hashCode__( java_nio_ByteBuffer This );

JCGO_NOSEP_STATIC jboolean CFASTCALL
java_nio_ByteBuffer__equals__Lo( java_nio_ByteBuffer This, java_lang_Object
 obj );

JCGO_NOSEP_INLINE java_nio_ByteOrder CFASTCALL
java_nio_ByteBuffer__order__( java_nio_ByteBuffer This );

JCGO_NOSEP_STATIC java_nio_ByteBuffer CFASTCALL
java_nio_ByteBuffer__order__L14v1d( java_nio_ByteBuffer This, java_nio_ByteOrder
 endian );

JCGO_NOSEP_STATIC java_lang_String CFASTCALL
java_nio_ByteBuffer__toString__( java_nio_ByteBuffer This );

struct java_nio_ByteBuffer_methods_s
{
 java_lang_Class jcgo_class;
 JCGO_GCJDESCR_DEFN
 JCGO_TYPEID_T jcgo_typeid;
 JCGO_OBJSIZE_T jcgo_objsize;
 CONST struct jcgo_reflect_s *jcgo_reflect;
 JCGO_CLINIT_DEFN
 java_nio_ByteBuffer (CFASTCALL *jcgo_thisRtn)( java_nio_ByteBuffer
  This );
 jboolean (CFASTCALL *equals__Lo)( java_nio_ByteBuffer This, java_lang_Object
  obj );
 jint (CFASTCALL *hashCode__)( java_nio_ByteBuffer This );
 java_lang_String (CFASTCALL *toString__)( java_nio_ByteBuffer This
  );
 void (CFASTCALL *finalize__)( java_lang_Object This );
 jboolean (CFASTCALL *isReadOnly__)( java_nio_Buffer This );
};

struct java_nio_ByteBuffer_class_s
{
 struct java_lang_Class_s jcgo_class;
};

JCGO_SEP_EXTERN CONST struct jcgo_methods_s java_nio_ByteBuffer_methods;
JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_nio_ByteBuffer_class_s
 java_nio_ByteBuffer__class;

struct java_nio_ByteBuffer_s
{
 CONST struct java_nio_ByteBuffer_methods_s *JCGO_IMMFLD_CONST jcgo_methods;
 JCGO_MON_DEFN
 jint cap;
 jint limit;
 jint pos;
 jint mark;
 java_nio_ByteOrder endian;
 jbyteArr backing_buffer;
 jint array_offset;
};

JCGO_SEP_EXTERN CONST jcgo_arrtype91_GmCnnctn jcgo_array6_ByteBffr;

JCGO_SEP_EXTERN CONST jcgo_arrtype30_Object jcgo_array7_ByteBffr;

JCGO_SEP_EXTERN CONST jcgo_arrtype30_Object jcgo_array8_ByteBffr;

JCGO_SEP_EXTERN CONST jcgo_arrtype30_Object jcgo_array9_ByteBffr;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string1_ByteBffr;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string2_ByteBffr;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string3_ByteBffr;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string4_ByteBffr;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string5_ByteBffr;

#endif
