/* DO NOT EDIT THIS FILE - it is machine generated (JCGO_116) */

#ifdef JCGO_116

JCGO_NOSEP_STATIC java_nio_CharBufferImpl CFASTCALL
java_nio_CharBufferImpl__this__CAIIIIIZ( java_nio_CharBufferImpl This,
 jcharArr buffer, jint offset, jint capacity, jint limit, jint position,
 jint mark, jboolean readOnly );
JCGO_NOSEP_INLINE java_nio_CharBufferImpl CFASTCALL
java_nio_CharBufferImpl__new__CAIIIIIZ( jcharArr buffer, jint offset,
 jint capacity, jint limit, jint position, jint mark, jboolean readOnly
 );

JCGO_NOSEP_STATIC java_nio_CharBufferImpl CFASTCALL
java_nio_CharBufferImpl__this__I( java_nio_CharBufferImpl This, jint
 capacity );
JCGO_NOSEP_FRWINL java_nio_CharBufferImpl CFASTCALL
java_nio_CharBufferImpl__new__I( jint capacity );

JCGO_NOSEP_FRWINL jboolean CFASTCALL
java_nio_CharBufferImpl__isReadOnly__( java_nio_CharBufferImpl This
 );

JCGO_NOSEP_STATIC jchar CFASTCALL
java_nio_CharBufferImpl__get__( java_nio_CharBufferImpl This );

JCGO_NOSEP_FRWINL java_nio_CharBuffer CFASTCALL
java_nio_CharBufferImpl__put__C( java_nio_CharBufferImpl This, jchar
 value );

JCGO_NOSEP_STATIC jchar CFASTCALL
java_nio_CharBufferImpl__get__I( java_nio_CharBufferImpl This, jint
 index );

JCGO_NOSEP_STATIC java_nio_CharBuffer CFASTCALL
java_nio_CharBufferImpl__get__CAII( java_nio_CharBufferImpl This,
 jcharArr dst, jint offset, jint length );

JCGO_NOSEP_STATIC java_nio_CharBuffer CFASTCALL
java_nio_CharBufferImpl__put__CAII( java_nio_CharBufferImpl This,
 jcharArr src, jint offset, jint length );

struct java_nio_CharBufferImpl_methods_s
{
 java_lang_Class jcgo_class;
 JCGO_GCJDESCR_DEFN
 JCGO_TYPEID_T jcgo_typeid;
 JCGO_OBJSIZE_T jcgo_objsize;
 CONST struct jcgo_reflect_s *jcgo_reflect;
 JCGO_CLINIT_DEFN
 java_nio_CharBufferImpl (CFASTCALL *jcgo_thisRtn)( java_nio_CharBufferImpl
  This );
 jboolean (CFASTCALL *equals__Lo)( java_nio_CharBuffer This, java_lang_Object
  obj );
 jint (CFASTCALL *hashCode__)( java_nio_CharBuffer This );
 java_lang_String (CFASTCALL *toString__)( java_nio_CharBuffer This
  );
 void (CFASTCALL *finalize__)( java_lang_Object This );
 jboolean (CFASTCALL *isReadOnly__)( java_nio_CharBufferImpl This );
};

struct java_nio_CharBufferImpl_class_s
{
 struct java_lang_Class_s jcgo_class;
};

JCGO_SEP_EXTERN CONST struct java_nio_CharBufferImpl_methods_s java_nio_CharBufferImpl_methods;
JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_nio_CharBufferImpl_class_s
 java_nio_CharBufferImpl__class;

struct java_nio_CharBufferImpl_s
{
 CONST struct java_nio_CharBufferImpl_methods_s *JCGO_IMMFLD_CONST
  jcgo_methods;
 JCGO_MON_DEFN
 jint cap;
 jint limit;
 jint pos;
 jint mark;
 jcharArr backing_buffer;
 jint array_offset;
 jboolean readOnly;
};

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string1_ChrBffIm;

#endif
