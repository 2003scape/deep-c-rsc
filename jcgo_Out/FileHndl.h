/* DO NOT EDIT THIS FILE - it is machine generated (JCGO_116) */

#ifdef JCGO_116

JCGO_NOSEP_INLINE void CFASTCALL
gnu_java_nio_VMChannel_FileHandle__void( gnu_java_nio_VMChannel_FileHandle
 This );

JCGO_NOSEP_INLINE gnu_java_nio_VMChannel_FileHandle CFASTCALL
gnu_java_nio_VMChannel_FileHandle__this__I( gnu_java_nio_VMChannel_FileHandle
 This, jint mode );
JCGO_NOSEP_FRWINL gnu_java_nio_VMChannel_FileHandle CFASTCALL
gnu_java_nio_VMChannel_FileHandle__new__I( jint mode );

JCGO_NOSEP_STATIC jint CFASTCALL
gnu_java_nio_VMChannel_FileHandle__getNativeFD__( gnu_java_nio_VMChannel_FileHandle
 This );

JCGO_NOSEP_STATIC void CFASTCALL
gnu_java_nio_VMChannel_FileHandle__setNonBlocking__Z( gnu_java_nio_VMChannel_FileHandle
 This, jboolean on );

JCGO_NOSEP_STATIC jint CFASTCALL
gnu_java_nio_VMChannel_FileHandle__available__( gnu_java_nio_VMChannel_FileHandle
 This );

JCGO_NOSEP_STATIC jint CFASTCALL
gnu_java_nio_VMChannel_FileHandle__read__BAII( gnu_java_nio_VMChannel_FileHandle
 This, jbyteArr buffer, jint off, jint len );

JCGO_NOSEP_STATIC void CFASTCALL
gnu_java_nio_VMChannel_FileHandle__write__BAIAI( gnu_java_nio_VMChannel_FileHandle
 This, jbyteArr buffer, jintArr offArr, jint len );

JCGO_NOSEP_STATIC void CFASTCALL
gnu_java_nio_VMChannel_FileHandle__close__( gnu_java_nio_VMChannel_FileHandle
 This );

JCGO_NOSEP_INLINE jboolean CFASTCALL
gnu_java_nio_VMChannel_FileHandle__needsCloseOnFinalize__( gnu_java_nio_VMChannel_FileHandle
 This );

JCGO_NOSEP_FRWINL void CFASTCALL
gnu_java_nio_VMChannel_FileHandle__setNativeFD__I( gnu_java_nio_VMChannel_FileHandle
 This, jint fd );

struct gnu_java_nio_VMChannel_FileHandle_methods_s
{
 java_lang_Class jcgo_class;
 JCGO_GCJDESCR_DEFN
 JCGO_TYPEID_T jcgo_typeid;
 JCGO_OBJSIZE_T jcgo_objsize;
 CONST struct jcgo_reflect_s *jcgo_reflect;
 JCGO_CLINIT_DEFN
 gnu_java_nio_VMChannel_FileHandle (CFASTCALL *jcgo_thisRtn)( gnu_java_nio_VMChannel_FileHandle
  This );
 jboolean (CFASTCALL *equals__Lo)( java_lang_Object This, java_lang_Object
  obj );
 jint (CFASTCALL *hashCode__)( java_lang_Object This );
 java_lang_String (CFASTCALL *toString__)( java_lang_Object This );
 void (CFASTCALL *finalize__)( java_lang_Object This );
 jint (CFASTCALL *getNativeFD__)( gnu_java_nio_VMChannel_FileHandle
  This );
 void (CFASTCALL *setNonBlocking__Z)( gnu_java_nio_VMChannel_FileHandle
  This, jboolean on );
 jint (CFASTCALL *available__)( gnu_java_nio_VMChannel_FileHandle This
  );
 jint (CFASTCALL *read__BAII)( gnu_java_nio_VMChannel_FileHandle This,
  jbyteArr buffer, jint off, jint len );
 void (CFASTCALL *write__BAIAI)( gnu_java_nio_VMChannel_FileHandle
  This, jbyteArr buffer, jintArr offArr, jint len );
 void (CFASTCALL *close__)( gnu_java_nio_VMChannel_FileHandle This
  );
 jboolean (CFASTCALL *needsCloseOnFinalize__)( gnu_java_nio_VMChannel_FileHandle
  This );
};

struct gnu_java_nio_VMChannel_FileHandle_class_s
{
 struct java_lang_Class_s jcgo_class;
};

JCGO_SEP_EXTERN CONST struct gnu_java_nio_VMChannel_FileHandle_methods_s
 gnu_java_nio_VMChannel_FileHandle_methods;
JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct gnu_java_nio_VMChannel_FileHandle_class_s
 gnu_java_nio_VMChannel_FileHandle__class;

struct gnu_java_nio_VMChannel_FileHandle_s
{
 CONST struct gnu_java_nio_VMChannel_FileHandle_methods_s *JCGO_IMMFLD_CONST
  jcgo_methods;
 JCGO_MON_DEFN
 jint fd;
 jint mode;
 jboolean isNonBlocking;
};

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string1_FileHndl;

#endif
