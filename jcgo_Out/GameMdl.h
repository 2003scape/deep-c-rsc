/* DO NOT EDIT THIS FILE - it is machine generated (JCGO_116) */

#ifdef JCGO_116

JCGO_NOSEP_INLINE package_GameModel CFASTCALL
package_GameModel__this__L98u34AI( package_GameModel This, jObjectArr
 pieces, jint count );
JCGO_NOSEP_INLINE package_GameModel CFASTCALL
package_GameModel__new__L98u34AI( jObjectArr pieces, jint count );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__applyRotation__III( package_GameModel This, jint
 yaw, jint roll, jint pitch );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__applyScale__III( package_GameModel This, jint fx,
 jint fy, jint fz );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__applyShear__IIIIII( package_GameModel This, jint
 xy, jint xz, jint yx, jint yz, jint zx, jint zy );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__applyTranslate__III( package_GameModel This, jint
 dx, jint dy, jint dz );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__computeBounds__( package_GameModel This );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__relight__( package_GameModel This );

JCGO_NOSEP_INLINE package_GameModel CFASTCALL
package_GameModel__this__L98u34AIZZZZ( package_GameModel This, jObjectArr
 pieces, jint count, jboolean autocommit, jboolean isolated, jboolean
 unlit, jboolean unpickable );
JCGO_NOSEP_INLINE package_GameModel CFASTCALL
package_GameModel__new__L98u34AIZZZZ( jObjectArr pieces, jint count,
 jboolean autocommit, jboolean isolated, jboolean unlit, jboolean unpickable
 );

JCGO_NOSEP_STATIC package_GameModel CFASTCALL
package_GameModel__this__IIZZZZZ( package_GameModel This, jint numVertices,
 jint numFaces, jboolean autocommit, jboolean isolated, jboolean unlit,
 jboolean unpickable, jboolean projected );
JCGO_NOSEP_INLINE package_GameModel CFASTCALL
package_GameModel__new__IIZZZZZ( jint numVertices, jint numFaces,
 jboolean autocommit, jboolean isolated, jboolean unlit, jboolean unpickable,
 jboolean projected );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__copyLighting__L98u34IAII( package_GameModel This,
 package_GameModel model, jintArr srcVs, jint nV, jint inF );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__projectionPrepare__( package_GameModel This );

JCGO_NOSEP_STATIC package_GameModel CFASTCALL
package_GameModel__this__II( package_GameModel This, jint numVertices,
 jint numFaces );
JCGO_NOSEP_FRWINL package_GameModel CFASTCALL
package_GameModel__new__II( jint numVertices, jint numFaces );

JCGO_NOSEP_INLINE package_GameModel CFASTCALL
package_GameModel__this__BAIZ( package_GameModel This, jbyteArr data,
 jint offset, jboolean unused );
JCGO_NOSEP_FRWINL package_GameModel CFASTCALL
package_GameModel__new__BAIZ( jbyteArr data, jint offset, jboolean
 unused );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__allocate__II( package_GameModel This, jint numV,
 jint numF );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__clear__( package_GameModel This );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__reduce__II( package_GameModel This, jint df, jint
 dz );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__merge__L98u34AIZ( package_GameModel This, jObjectArr
 pieces, jint count, jboolean transState );

JCGO_NOSEP_STATIC jint CFASTCALL
package_GameModel__vertexAt__III( package_GameModel This, jint x,
 jint y, jint z );

JCGO_NOSEP_STATIC jint CFASTCALL
package_GameModel__createVertex__III( package_GameModel This, jint
 i, jint j, jint k );

JCGO_NOSEP_STATIC jint CFASTCALL
package_GameModel__createFace__IIAII( package_GameModel This, jintArr
 vs, jint n, jint front, jint back );

JCGO_NOSEP_STATIC jObjectArr CFASTCALL
package_GameModel__split__IIIIIIIZ( package_GameModel This, jint unused1,
 jint unused2, jint pieceDx, jint pieceDz, jint rows, jint count, jint
 pieceMaxVertices, jboolean pickable );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__setLight__ZIIIII( package_GameModel This, jint
 ambient, jint diffuse, jint x, jint y, jint z, jboolean gouraud );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__setLight__IIIII( package_GameModel This, jint ambience,
 jint diffuse, jint x, jint y, jint z );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__setLight__III( package_GameModel This, jint x,
 jint y, jint z );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__setVertexAmbience__II( package_GameModel This,
 jint v, jint ambience );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__rotate__III( package_GameModel This, jint yaw,
 jint pitch, jint roll );

JCGO_NOSEP_INLINE void CFASTCALL
package_GameModel__orient__III( package_GameModel This, jint yaw,
 jint pitch, jint roll );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__translate__III( package_GameModel This, jint x,
 jint y, jint z );

JCGO_NOSEP_FRWINL void CFASTCALL
package_GameModel__place__III( package_GameModel This, jint x, jint
 y, jint z );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__determineTransformKind__( package_GameModel This
 );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__light__( package_GameModel This );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__apply__( package_GameModel This );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__project__IIIIIIII( package_GameModel This, jint
 cameraX, jint cameraY, jint cameraZ, jint cameraPitch, jint cameraRoll,
 jint cameraYaw, jint viewDist, jint clipNear );

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__commit__( package_GameModel This );

JCGO_NOSEP_STATIC package_GameModel CFASTCALL
package_GameModel__copy__( package_GameModel This );

JCGO_NOSEP_INLINE package_GameModel CFASTCALL
package_GameModel__copy__ZZZZ( package_GameModel This, jboolean autocommit,
 jboolean isolated, jboolean unlit, jboolean pickable );

JCGO_NOSEP_FRWINL void CFASTCALL
package_GameModel__copyPosition__L98u34( package_GameModel This, package_GameModel
 model );

struct package_GameModel_methods_s
{
 java_lang_Class jcgo_class;
 JCGO_GCJDESCR_DEFN
 JCGO_TYPEID_T jcgo_typeid;
 JCGO_OBJSIZE_T jcgo_objsize;
 CONST struct jcgo_reflect_s *jcgo_reflect;
 JCGO_CLINIT_DEFN
 package_GameModel (CFASTCALL *jcgo_thisRtn)( package_GameModel This
  );
 jboolean (CFASTCALL *equals__Lo)( java_lang_Object This, java_lang_Object
  obj );
 jint (CFASTCALL *hashCode__)( java_lang_Object This );
 java_lang_String (CFASTCALL *toString__)( java_lang_Object This );
 void (CFASTCALL *finalize__)( java_lang_Object This );
};

struct package_GameModel_class_s
{
 struct java_lang_Class_s jcgo_class;
};

JCGO_SEP_EXTERN CONST struct package_GameModel_methods_s package_GameModel_methods;
JCGO_SEP_EXTERN struct package_GameModel_class_s package_GameModel__class;

JCGO_NOSEP_STATIC void CFASTCALL
package_GameModel__class__0( void );

JCGO_SEP_GCEXTERN jintArr package_GameModel__sine9;
JCGO_SEP_GCEXTERN jintArr package_GameModel__sine11;
JCGO_SEP_GCEXTERN jintArr package_GameModel__base64Alphabet;

struct package_GameModel_s
{
 CONST struct package_GameModel_methods_s *JCGO_IMMFLD_CONST jcgo_methods;
 JCGO_MON_DEFN
 jintArr projectVertexX;
 jintArr projectVertexY;
 jintArr projectVertexZ;
 jintArr vertexViewX;
 jintArr vertexViewY;
 jintArr vertexIntensity;
 jbyteArr vertexAmbience;
 jintArr faceNumVertices;
 jObjectArr faceVertices;
 jintArr faceFillFront;
 jintArr faceFillBack;
 jintArr normalMagnitude;
 jintArr normalScale;
 jintArr faceIntensity;
 jintArr faceNormalX;
 jintArr faceNormalY;
 jintArr faceNormalZ;
 jintArr faceTag;
 jbyteArr isLocalPlayer;
 jintArr vertexX;
 jintArr vertexY;
 jintArr vertexZ;
 jintArr vertexTransformedX;
 jintArr vertexTransformedY;
 jintArr vertexTransformedZ;
 jObjectArr faceTransStateThing;
 jintArr faceBoundLeft;
 jintArr faceBoundRight;
 jintArr faceBoundBottom;
 jintArr faceBoundTop;
 jintArr faceBoundNear;
 jintArr faceBoundFar;
 jint numVertices;
 jint numFaces;
 jint depth;
 jint transformState;
 jint x1;
 jint x2;
 jint y1;
 jint y2;
 jint z1;
 jint z2;
 jint key;
 jint maxVerts;
 jint lightDiffuse;
 jint lightAmbience;
 jint magic;
 jint maxFaces;
 jint baseX;
 jint baseY;
 jint baseZ;
 jint orientationYaw;
 jint orientationPitch;
 jint orientationRoll;
 jint scaleFx;
 jint scaleFy;
 jint scaleFz;
 jint shearXy;
 jint shearXz;
 jint shearYx;
 jint shearYz;
 jint shearZx;
 jint shearZy;
 jint transformKind;
 jint diameter;
 jint lightDirectionX;
 jint lightDirectionY;
 jint lightDirectionZ;
 jint lightDirectionMagnitude;
 jboolean visible;
 jboolean textureTranslucent;
 jboolean transparent;
 jboolean isolated;
 jboolean unlit;
 jboolean unpickable;
 jboolean projected;
 jboolean autocommit;
};

JCGO_SEP_EXTERN CONST jcgo_arrtype28_GameShll jcgo_array3_GameMdl;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string1_GameMdl;

#endif
