/* DO NOT EDIT THIS FILE - it is machine generated (JCGO_116) */

#ifdef JCGO_116

#define java_lang_VMThread__STATE_RUNNABLE (jint)1

#define java_lang_VMThread__STATE_TERMINATED (jint)5

#define java_lang_VMThread__PARKFLAGS_PARKED (jint)1

#define java_lang_VMThread__PARKFLAGS_UNPARKPERMIT (jint)2

#define java_lang_VMThread__threadStartLock ((jObjectArr)JCGO_OBJREF_OF(jcgo_array2_VMThread))

JCGO_NOSEP_STATIC java_lang_VMThread CFASTCALL
java_lang_VMThread__this__L20uxk( java_lang_VMThread This, java_lang_Thread
 thread );
JCGO_NOSEP_INLINE java_lang_VMThread CFASTCALL
java_lang_VMThread__new__L20uxk( java_lang_Thread thread );

JCGO_NOSEP_INLINE jboolean CFASTCALL
java_lang_VMThread__isStartRetryNeededOnce__( void );

JCGO_NOSEP_INLINE java_lang_String CFASTCALL
java_lang_VMThread__getName__( java_lang_VMThread This );

JCGO_NOSEP_INLINE void CFASTCALL
java_lang_VMThread__start__J( java_lang_VMThread This, jlong stacksize
 );

JCGO_NOSEP_INLINE jint CFASTCALL
java_lang_VMThread__getPriority__( java_lang_VMThread This );

JCGO_NOSEP_INLINE void CFASTCALL
java_lang_VMThread__setupMainThread__( void );

JCGO_NOSEP_INLINE void CFASTCALL
java_lang_VMThread__run__( java_lang_VMThread This );

JCGO_NOSEP_INLINE void CFASTCALL
java_lang_VMThread__create__L20uxkJ( java_lang_Thread thread, jlong
 stacksize );

JCGO_NOSEP_INLINE void CFASTCALL
java_lang_VMThread__setName__Ls( java_lang_VMThread This, java_lang_String
 name );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__setPriority__I( java_lang_VMThread This, jint
 priority );

JCGO_NOSEP_INLINE void CFASTCALL
java_lang_VMThread__join__JI( java_lang_VMThread This, jlong ms, jint
 ns );

JCGO_NOSEP_INLINE void CFASTCALL
java_lang_VMThread__interrupt__( java_lang_VMThread This );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__nativeSetPriority__I( java_lang_VMThread This,
 jint priority );

JCGO_NOSEP_STATIC java_lang_Thread CFASTCALL
java_lang_VMThread__currentThread__( void );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__yield__( void );

JCGO_NOSEP_STATIC jboolean CFASTCALL
java_lang_VMThread__interrupted__( void );

JCGO_NOSEP_INLINE void CFASTCALL
java_lang_VMThread__sleep__JI( jlong ms, jint ns );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__notify__LoZ( java_lang_Object obj, jboolean all
 );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__wait__LoJI( java_lang_Object obj, jlong ms, jint
 ns );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__initSystemErr__( void );

JCGO_NOSEP_FRWINL void CFASTCALL
java_lang_VMThread__setSystemOut__L18p1o( java_io_PrintStream out
 );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__flushSystemOut__( void );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__printUncaughtException__L20uxkLt( java_lang_Thread
 thread, java_lang_Throwable throwable );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__rootGroupAdd__L20uxk( java_lang_Thread thread
 );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__throwIllegalMonitorStateException0X__( void );

JCGO_NOSEP_STATIC jint CFASTCALL
java_lang_VMThread__jniExceptionDescribe0X__Lo( java_lang_Object throwableObj
 );

JCGO_NOSEP_STATIC jint CFASTCALL
java_lang_VMThread__run0X__Lo( java_lang_Object vmdata );

JCGO_NOSEP_STATIC java_lang_Object CFASTCALL
java_lang_VMThread__createAttachedThread0X__LoLsLoI( java_lang_Object
 groupObj, java_lang_String name, java_lang_Object vmdata, jint daemon
 );

JCGO_NOSEP_STATIC jint CFASTCALL
java_lang_VMThread__detachThread0X__Lo( java_lang_Object throwableObj
 );

JCGO_NOSEP_STATIC jint CFASTCALL
java_lang_VMThread__destroyJavaVM0X__LoI( java_lang_Object throwableObj,
 jint isInInitializer );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__attachInner__( java_lang_VMThread This );

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__detachInner__( java_lang_VMThread This );

JCGO_NOSEP_STATIC jint CFASTCALL
java_lang_VMThread__notify0__LoI( java_lang_Object obj, jint all );

JCGO_NOSEP_STATIC jint CFASTCALL
java_lang_VMThread__wait0__LoJI( java_lang_Object obj, jlong ms, jint
 ns );

JCGO_NOSEP_STATIC java_lang_Object CFASTCALL
java_lang_VMThread__setupMainThread0__Lo( java_lang_Object thread
 );

JCGO_NOSEP_STATIC java_lang_Object CFASTCALL
java_lang_VMThread__currentThread0__( void );

JCGO_NOSEP_STATIC java_lang_Object CFASTCALL
java_lang_VMThread__start0__LoJ( java_lang_Object thread, jlong stacksize
 );

JCGO_NOSEP_STATIC jint CFASTCALL
java_lang_VMThread__nativeSetPriority0__LoI( java_lang_Object vmdata,
 jint priority );

JCGO_NOSEP_STATIC jint CFASTCALL
java_lang_VMThread__interrupt0__LoI( java_lang_Object vmdata, jint
 set );

#define JCGO_NATCLASS_java_lang_VMThread

struct java_lang_VMThread_methods_s
{
 java_lang_Class jcgo_class;
 JCGO_GCJDESCR_DEFN
 JCGO_TYPEID_T jcgo_typeid;
 JCGO_OBJSIZE_T jcgo_objsize;
 CONST struct jcgo_reflect_s *jcgo_reflect;
 JCGO_CLINIT_DEFN
 java_lang_VMThread (CFASTCALL *jcgo_thisRtn)( java_lang_VMThread This
  );
 jboolean (CFASTCALL *equals__Lo)( java_lang_Object This, java_lang_Object
  obj );
 jint (CFASTCALL *hashCode__)( java_lang_Object This );
 java_lang_String (CFASTCALL *toString__)( java_lang_Object This );
 void (CFASTCALL *finalize__)( java_lang_Object This );
};

struct java_lang_VMThread_class_s
{
 struct java_lang_Class_s jcgo_class;
};

JCGO_SEP_EXTERN CONST struct java_lang_VMThread_methods_s java_lang_VMThread_methods;
JCGO_SEP_EXTERN struct java_lang_VMThread_class_s java_lang_VMThread__class;

JCGO_NOSEP_STATIC void CFASTCALL
java_lang_VMThread__class__0( void );

JCGO_SEP_GCEXTERN java_lang_Object java_lang_VMThread__nonDaemonLock;
JCGO_SEP_GCEXTERN java_lang_VMThread java_lang_VMThread__mainVMThread;
JCGO_SEP_GCEXTERN java_io_PrintStream JCGO_THRD_VOLATILE java_lang_VMThread__sysOut;
JCGO_SEP_GCEXTERN java_lang_VMThread_UncaughtHandler JCGO_THRD_VOLATILE
 java_lang_VMThread__uncaughtHandler;
JCGO_SEP_EXTERN jlong java_lang_VMThread__totalStartedCnt;
JCGO_SEP_EXTERN jint java_lang_VMThread__nonDaemonCnt;
JCGO_SEP_EXTERN jint java_lang_VMThread__liveThreadCnt;
JCGO_SEP_EXTERN jint java_lang_VMThread__maxLiveThreadCnt;
JCGO_SEP_EXTERN jboolean java_lang_VMThread__hasThreads;

struct java_lang_VMThread_s
{
 CONST struct java_lang_VMThread_methods_s *JCGO_IMMFLD_CONST jcgo_methods;
 JCGO_MON_DEFN
 java_lang_Thread thread;
 java_lang_Object JCGO_THRD_VOLATILE vmdata;
 JCGO_THRD_VOLATILE jint threadStatus;
 jint parkFlags;
};

JCGO_SEP_EXTERN JCGO_NOTHR_CONST jcgo_arrtype2_GameMdl jcgo_array2_VMThread;

JCGO_SEP_EXTERN CONST jcgo_arrtype23_Object jcgo_array9_VMThread;

JCGO_SEP_EXTERN CONST jcgo_arrtype80_GmCnnctn jcgo_array10_VMThread;

JCGO_SEP_EXTERN CONST jcgo_arrtype4_IntAddrs jcgo_array11_VMThread;

JCGO_SEP_EXTERN CONST jcgo_arrtype77_GmCnnctn jcgo_array12_VMThread;

JCGO_SEP_EXTERN CONST jcgo_arrtype44_GameShll jcgo_array13_VMThread;

JCGO_SEP_EXTERN CONST jcgo_arrtype32_GameShll jcgo_array14_VMThread;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string1_VMThread;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string3_VMThread;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string4_VMThread;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string5_VMThread;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string6_VMThread;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string7_VMThread;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string8_VMThread;

#endif
