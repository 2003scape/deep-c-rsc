/* DO NOT EDIT THIS FILE - it is machine generated (JCGO_116) */

#ifdef JCGO_116

#define java_util_HashMap__DEFAULT_CAPACITY (jint)16

#define java_util_HashMap__MAXIMUM_CAPACITY JCGO_SHL_F((jint)1, (jint)30)

JCGO_NOSEP_STATIC java_util_HashMap CFASTCALL
java_util_HashMap__this__I( java_util_HashMap This, jint initialCapacity
 );
JCGO_NOSEP_INLINE java_util_HashMap CFASTCALL
java_util_HashMap__new__I( jint initialCapacity );

JCGO_NOSEP_INLINE jint CFASTCALL
java_util_HashMap__indexFor__I( java_util_HashMap This, jint hash
 );

JCGO_NOSEP_INLINE void CFASTCALL
java_util_HashMap__addEntry__LoLoIZI( java_util_HashMap This, java_lang_Object
 key, java_lang_Object value, jint idx, jint hash, jboolean callRemove
 );

JCGO_NOSEP_INLINE void CFASTCALL
java_util_HashMap__rehash__( java_util_HashMap This );

JCGO_NOSEP_INLINE java_util_HashMap CFASTCALL
java_util_HashMap__this__( java_util_HashMap This );
JCGO_NOSEP_FRWINL java_util_HashMap CFASTCALL
java_util_HashMap__new__( void );

JCGO_NOSEP_INLINE jint CFASTCALL
java_util_HashMap__size__( java_util_HashMap This );

JCGO_NOSEP_INLINE jboolean CFASTCALL
java_util_HashMap__isEmpty__( java_util_HashMap This );

JCGO_NOSEP_STATIC java_lang_Object CFASTCALL
java_util_HashMap__get__Lo( java_util_HashMap This, java_lang_Object
 key );

JCGO_NOSEP_STATIC java_util_HashMap_HashEntry CFASTCALL
java_util_HashMap__getHashEntryByKey__Lo( java_util_HashMap This,
 java_lang_Object key );

JCGO_NOSEP_INLINE jboolean CFASTCALL
java_util_HashMap__containsKey__Lo( java_util_HashMap This, java_lang_Object
 key );

JCGO_NOSEP_STATIC java_lang_Object CFASTCALL
java_util_HashMap__put__LoLo( java_util_HashMap This, java_lang_Object
 key, java_lang_Object value );

JCGO_NOSEP_STATIC java_lang_Object CFASTCALL
java_util_HashMap__remove__Lo( java_util_HashMap This, java_lang_Object
 key );

JCGO_NOSEP_STATIC java_util_Set CFASTCALL
java_util_HashMap__entrySet__( java_util_HashMap This );

JCGO_NOSEP_STATIC java_util_HashMap_HashEntry CFASTCALL
java_util_HashMap__getEntry__Lo( java_util_HashMap This, java_lang_Object
 o );

JCGO_NOSEP_STATIC jint CFASTCALL
java_util_HashMap__hashOf__Lo( java_util_HashMap This, java_lang_Object
 key );

JCGO_NOSEP_INLINE java_util_Iterator CFASTCALL
java_util_HashMap__iterator__I( java_util_HashMap This, jint type
 );

struct java_util_HashMap_methods_s
{
 java_lang_Class jcgo_class;
 JCGO_GCJDESCR_DEFN
 JCGO_TYPEID_T jcgo_typeid;
 JCGO_OBJSIZE_T jcgo_objsize;
 CONST struct jcgo_reflect_s *jcgo_reflect;
 JCGO_CLINIT_DEFN
 java_util_HashMap (CFASTCALL *jcgo_thisRtn)( java_util_HashMap This
  );
 jboolean (CFASTCALL *equals__Lo)( java_util_AbstractMap This, java_lang_Object
  o );
 jint (CFASTCALL *hashCode__)( java_util_AbstractMap This );
 java_lang_String (CFASTCALL *toString__)( java_util_AbstractMap This
  );
 void (CFASTCALL *finalize__)( java_lang_Object This );
 java_util_Set (CFASTCALL *entrySet__)( java_util_HashMap This );
 jboolean (CFASTCALL *isEmpty__)( java_util_HashMap This );
 jint (CFASTCALL *size__)( java_util_HashMap This );
};

struct java_util_HashMap_class_s
{
 struct java_lang_Class_s jcgo_class;
};

JCGO_SEP_EXTERN CONST struct java_util_HashMap_methods_s java_util_HashMap_methods;
JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_util_HashMap_class_s java_util_HashMap__class;

struct java_util_HashMap_s
{
 CONST struct java_util_HashMap_methods_s *JCGO_IMMFLD_CONST jcgo_methods;
 JCGO_MON_DEFN
 jObjectArr buckets;
 java_util_Set entries;
 jfloat loadFactor;
 jint threshold;
 JCGO_THRD_VOLATILE jint modCount;
 jint size;
 jint loadFactorPercent;
};

JCGO_SEP_EXTERN CONST jcgo_arrtype42_GameShll jcgo_array2_HashMap;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string1_HashMap;

#endif
