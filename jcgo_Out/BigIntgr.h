/* DO NOT EDIT THIS FILE - it is machine generated (JCGO_116) */

#ifdef JCGO_116

#define java_math_BigInteger__minFixNum (-(jint)100)

#define java_math_BigInteger__maxFixNum (jint)1024

#define java_math_BigInteger__numFixNum (java_math_BigInteger__maxFixNum - java_math_BigInteger__minFixNum + (jint)1)

JCGO_NOSEP_INLINE void CFASTCALL
java_math_BigInteger__void( java_math_BigInteger This );

JCGO_NOSEP_STATIC java_math_BigInteger CFASTCALL
java_math_BigInteger__this__LsI( java_math_BigInteger This, java_lang_String
 val, jint radix );

JCGO_NOSEP_STATIC java_math_BigInteger CFASTCALL
java_math_BigInteger__this__I( java_math_BigInteger This, jint value
 );
JCGO_NOSEP_INLINE java_math_BigInteger CFASTCALL
java_math_BigInteger__new__I( jint value );

JCGO_NOSEP_STATIC java_math_BigInteger CFASTCALL
java_math_BigInteger__this__( java_math_BigInteger This );
JCGO_NOSEP_INLINE java_math_BigInteger CFASTCALL
java_math_BigInteger__new__( void );

JCGO_NOSEP_INLINE java_math_BigInteger CFASTCALL
java_math_BigInteger__alloc__I( jint nwords );

JCGO_NOSEP_INLINE jint CFASTCALL
java_math_BigInteger__wordsNeeded__IAI( jintArr words, jint len );

JCGO_NOSEP_INLINE java_math_BigInteger CFASTCALL
java_math_BigInteger__make__IAI( jintArr words, jint len );

JCGO_NOSEP_INLINE java_math_BigInteger CFASTCALL
java_math_BigInteger__valueOf__BAIZI( jbyteArr digits, jint byte_len,
 jint radix, jboolean negative );

JCGO_NOSEP_FRWINL java_math_BigInteger CFASTCALL
java_math_BigInteger__valueOf__LsI( java_lang_String s, jint radix
 );

JCGO_NOSEP_INLINE jboolean CFASTCALL
java_math_BigInteger__equals__L03o76L03o76( java_math_BigInteger x,
 java_math_BigInteger y );

JCGO_NOSEP_INLINE jboolean CFASTCALL
java_math_BigInteger__isNegative__( java_math_BigInteger This );

JCGO_NOSEP_INLINE void CFASTCALL
java_math_BigInteger__getAbsolute__IA( java_math_BigInteger This,
 jintArr words );

JCGO_NOSEP_INLINE void CFASTCALL
java_math_BigInteger__format__IL8whtv( java_math_BigInteger This,
 java_lang_StringBuffer buffer, jint radix );

JCGO_NOSEP_INLINE java_math_BigInteger CFASTCALL
java_math_BigInteger__this__Ls( java_math_BigInteger This, java_lang_String
 val );
JCGO_NOSEP_FRWINL java_math_BigInteger CFASTCALL
java_math_BigInteger__new__Ls( java_lang_String val );

JCGO_NOSEP_STATIC java_math_BigInteger CFASTCALL
java_math_BigInteger__valueOf__J( jlong val );

JCGO_NOSEP_INLINE java_lang_String CFASTCALL
java_math_BigInteger__toString__( java_math_BigInteger This );

JCGO_NOSEP_STATIC java_lang_String CFASTCALL
java_math_BigInteger__toString__I( java_math_BigInteger This, jint
 radix );

JCGO_NOSEP_STATIC jlong CFASTCALL
java_math_BigInteger__longValue__( java_math_BigInteger This );

JCGO_NOSEP_STATIC jint CFASTCALL
java_math_BigInteger__hashCode__( java_math_BigInteger This );

JCGO_NOSEP_STATIC jboolean CFASTCALL
java_math_BigInteger__equals__Lo( java_math_BigInteger This, java_lang_Object
 obj );

JCGO_NOSEP_STATIC jboolean CFASTCALL
java_math_BigInteger__negate__IAIAI( jintArr dest, jintArr src, jint
 len );

struct java_math_BigInteger_methods_s
{
 java_lang_Class jcgo_class;
 JCGO_GCJDESCR_DEFN
 JCGO_TYPEID_T jcgo_typeid;
 JCGO_OBJSIZE_T jcgo_objsize;
 CONST struct jcgo_reflect_s *jcgo_reflect;
 JCGO_CLINIT_DEFN
 java_math_BigInteger (CFASTCALL *jcgo_thisRtn)( java_math_BigInteger
  This );
 jboolean (CFASTCALL *equals__Lo)( java_math_BigInteger This, java_lang_Object
  obj );
 jint (CFASTCALL *hashCode__)( java_math_BigInteger This );
 java_lang_String (CFASTCALL *toString__)( java_math_BigInteger This
  );
 void (CFASTCALL *finalize__)( java_lang_Object This );
};

struct java_math_BigInteger_class_s
{
 struct java_lang_Class_s jcgo_class;
};

JCGO_SEP_EXTERN CONST struct java_math_BigInteger_methods_s java_math_BigInteger_methods;
JCGO_SEP_EXTERN struct java_math_BigInteger_class_s java_math_BigInteger__class;

JCGO_NOSEP_STATIC void CFASTCALL
java_math_BigInteger__class__0( void );

JCGO_SEP_GCEXTERN jObjectArr java_math_BigInteger__smallFixNums;
JCGO_SEP_GCEXTERN java_math_BigInteger java_math_BigInteger__ZERO;

struct java_math_BigInteger_s
{
 CONST struct java_math_BigInteger_methods_s *JCGO_IMMFLD_CONST jcgo_methods;
 JCGO_MON_DEFN
 jintArr words;
 jint ival;
};

JCGO_SEP_EXTERN CONST jcgo_arrtype23_Object jcgo_array2_BigIntgr;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string1_BigIntgr;

#endif
