/* DO NOT EDIT THIS FILE - it is machine generated (JCGO_116) */

#ifdef JCGO_116

#define java_lang_Integer__MIN_VALUE (~JCGO_USHR_F((-(jint)1), (jint)1))

#define java_lang_Integer__MAX_VALUE JCGO_USHR_F((-(jint)1), (jint)1)

#define java_lang_Integer__SIZE (jint)32

JCGO_NOSEP_INLINE java_lang_NumberFormatException CFASTCALL
java_lang_Integer__numberFormatExceptionForInputString__Ls( java_lang_String
 str );

JCGO_NOSEP_STATIC java_lang_Integer CFASTCALL
java_lang_Integer__this__I( java_lang_Integer This, jint value );
JCGO_NOSEP_INLINE java_lang_Integer CFASTCALL
java_lang_Integer__new__I( jint value );

JCGO_NOSEP_INLINE java_lang_Integer CFASTCALL
java_lang_Integer__decode__Ls( java_lang_String str );

JCGO_NOSEP_INLINE java_lang_Integer CFASTCALL
java_lang_Integer__getInteger__LsL37kke( java_lang_String nm, java_lang_Integer
 def );

JCGO_NOSEP_FRWINL java_lang_String CFASTCALL
java_lang_Integer__toString__II( jint num, jint radix );
JCGO_NOSEP_STATIC java_lang_String CFASTCALL
java_lang_Integer__toString__IIX( jint num, jint radix, java_lang_String
 jcgo_stackparam );

JCGO_NOSEP_FRWINL java_lang_String CFASTCALL
java_lang_Integer__toHexString__I( jint i );
JCGO_NOSEP_FRWINL java_lang_String CFASTCALL
java_lang_Integer__toHexString__IX( jint i, java_lang_String jcgo_stackparam
 );

JCGO_NOSEP_INLINE java_lang_String CFASTCALL
java_lang_Integer__toOctalString__I( jint i );
JCGO_NOSEP_INLINE java_lang_String CFASTCALL
java_lang_Integer__toOctalString__IX( jint i, java_lang_String jcgo_stackparam
 );

JCGO_NOSEP_FRWINL jint CFASTCALL
java_lang_Integer__parseInt__Ls( java_lang_String s );

JCGO_NOSEP_INLINE jint CFASTCALL
java_lang_Integer__intValue__( java_lang_Integer This );

JCGO_NOSEP_INLINE java_lang_String CFASTCALL
java_lang_Integer__toString__( java_lang_Integer This );

JCGO_NOSEP_INLINE jint CFASTCALL
java_lang_Integer__hashCode__( java_lang_Integer This );

JCGO_NOSEP_INLINE jboolean CFASTCALL
java_lang_Integer__equals__Lo( java_lang_Integer This, java_lang_Object
 obj );

JCGO_NOSEP_INLINE java_lang_Integer CFASTCALL
java_lang_Integer__getInteger__LsI( java_lang_String nm, jint val
 );

JCGO_NOSEP_FRWINL java_lang_String CFASTCALL
java_lang_Integer__toUnsignedString__II( jint num, jint exp );
JCGO_NOSEP_STATIC java_lang_String CFASTCALL
java_lang_Integer__toUnsignedString__IIX( jint num, jint exp, java_lang_String
 jcgo_stackparam );

JCGO_NOSEP_STATIC jint CFASTCALL
java_lang_Integer__parseInt__LsIZ( java_lang_String str, jint radix,
 jboolean decode );

struct java_lang_Integer_methods_s
{
 java_lang_Class jcgo_class;
 JCGO_GCJDESCR_DEFN
 JCGO_TYPEID_T jcgo_typeid;
 JCGO_OBJSIZE_T jcgo_objsize;
 CONST struct jcgo_reflect_s *jcgo_reflect;
 JCGO_CLINIT_DEFN
 java_lang_Integer (CFASTCALL *jcgo_thisRtn)( java_lang_Integer This
  );
 jboolean (CFASTCALL *equals__Lo)( java_lang_Integer This, java_lang_Object
  obj );
 jint (CFASTCALL *hashCode__)( java_lang_Integer This );
 java_lang_String (CFASTCALL *toString__)( java_lang_Integer This );
 void (CFASTCALL *finalize__)( java_lang_Object This );
};

struct java_lang_Integer_class_s
{
 struct java_lang_Class_s jcgo_class;
};

JCGO_SEP_EXTERN CONST struct java_lang_Integer_methods_s java_lang_Integer_methods;
JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_Integer_class_s java_lang_Integer__class;

struct java_lang_Integer_s
{
 CONST struct java_lang_Integer_methods_s *JCGO_IMMFLD_CONST jcgo_methods;
 JCGO_MON_DEFN
 jint value;
};

JCGO_SEP_EXTERN CONST jcgo_arrtype492_Mdclnt jcgo_array2_Integer;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string1_Integer;

#endif
