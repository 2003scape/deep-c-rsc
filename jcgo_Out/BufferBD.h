/* DO NOT EDIT THIS FILE - it is machine generated (JCGO_116) */

#ifdef JCGO_116

JCGO_NOSEP_INLINE java_nio_Buffer CFASTCALL
java_nio_Buffer__limit__I( java_nio_Buffer This, jint newLimit );

JCGO_NOSEP_FRWINL jint CFASTCALL
java_nio_Buffer__remaining__( java_nio_Buffer This );

JCGO_NOSEP_INLINE jint CFASTCALL
java_nio_Buffer__limit__( java_nio_Buffer This );

JCGO_NOSEP_STATIC java_nio_Buffer CFASTCALL
java_nio_Buffer__this__IIIIL8d4dv( java_nio_Buffer This, java_lang_Object
 address, jint capacity, jint limit, jint position, jint mark );

JCGO_NOSEP_FRWINL jint CFASTCALL
java_nio_Buffer__capacity__( java_nio_Buffer This );

JCGO_NOSEP_STATIC java_nio_Buffer CFASTCALL
java_nio_Buffer__clear__( java_nio_Buffer This );

JCGO_NOSEP_STATIC java_nio_Buffer CFASTCALL
java_nio_Buffer__flip__( java_nio_Buffer This );

JCGO_NOSEP_FRWINL jboolean CFASTCALL
java_nio_Buffer__hasRemaining__( java_nio_Buffer This );

JCGO_NOSEP_FRWINL jint CFASTCALL
java_nio_Buffer__position__( java_nio_Buffer This );

JCGO_NOSEP_STATIC java_nio_Buffer CFASTCALL
java_nio_Buffer__position__I( java_nio_Buffer This, jint newPosition
 );

JCGO_NOSEP_INLINE void CFASTCALL
java_nio_Buffer__checkForUnderflow__I( java_nio_Buffer This, jint
 length );

JCGO_NOSEP_INLINE void CFASTCALL
java_nio_Buffer__checkForOverflow__I( java_nio_Buffer This, jint length
 );

JCGO_NOSEP_INLINE void CFASTCALL
java_nio_Buffer__checkIndex__I( java_nio_Buffer This, jint index );

JCGO_NOSEP_INLINE void CFASTCALL
java_nio_Buffer__checkIfReadOnly__( java_nio_Buffer This );

JCGO_NOSEP_STATIC void CFASTCALL
java_nio_Buffer__checkArraySize__III( jint arraylength, jint offset,
 jint length );

struct java_nio_Buffer_methods_s
{
 java_lang_Class jcgo_class;
 JCGO_GCJDESCR_DEFN
 JCGO_TYPEID_T jcgo_typeid;
 JCGO_OBJSIZE_T jcgo_objsize;
 CONST struct jcgo_reflect_s *jcgo_reflect;
 JCGO_CLINIT_DEFN
 java_nio_Buffer (CFASTCALL *jcgo_thisRtn)( java_nio_Buffer This );
 jboolean (CFASTCALL *equals__Lo)( java_lang_Object This, java_lang_Object
  obj );
 jint (CFASTCALL *hashCode__)( java_lang_Object This );
 java_lang_String (CFASTCALL *toString__)( java_lang_Object This );
 void (CFASTCALL *finalize__)( java_lang_Object This );
 jboolean (CFASTCALL *isReadOnly__)( java_nio_Buffer This );
};

struct java_nio_Buffer_class_s
{
 struct java_lang_Class_s jcgo_class;
};

JCGO_SEP_EXTERN CONST struct jcgo_methods_s java_nio_Buffer_methods;
JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_nio_Buffer_class_s java_nio_Buffer__class;

struct java_nio_Buffer_s
{
 CONST struct java_nio_Buffer_methods_s *JCGO_IMMFLD_CONST jcgo_methods;
 JCGO_MON_DEFN
 jint cap;
 jint limit;
 jint pos;
 jint mark;
};

JCGO_SEP_EXTERN CONST jcgo_arrtype98_GmCnnctn jcgo_array2_BufferBD;

JCGO_SEP_EXTERN JCGO_NOTHR_CONST struct java_lang_String_s jcgo_string1_BufferBD;

#endif
