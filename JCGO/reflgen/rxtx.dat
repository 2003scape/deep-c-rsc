# @(#) $(JCGO)/reflgen/rxtx.dat --
# JNI method/field reflection dependency for GNU "rxtx" Communication library
# (data file for JCGO "GenRefl" utility).
##
# Project: JCGO (http://www.ivmaisoft.com/jcgo/)
# Copyright (C) 2001-2009 Ivan Maidanski <ivmai@ivmaisoft.com>
# Use is subject to license terms. No warranties. All rights reserved.
##

# Initial supported version: 2.1-7
# Last revised for version: 2.2pre2

# Note 1: it is allowed not to call "rxtx" JNI_OnLoad() and JNI_OnUnload().

# Note 2: use -DNOJAVA_gnu_io_RXTXCommDriver_nativeGetVersion compiler option.

# Note 3: gnu.javax.comm.wce.* is from Mysaifu-javaxcomm v0.0.3.

gnu.io.I2C.NativeEnableReceiveTimeoutThreshold(*):fd
gnu.io.I2C.NativeEnableReceiveTimeoutThreshold(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.I2C.NativegetReceiveTimeout(*):fd
gnu.io.I2C.NativegetReceiveTimeout(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.I2C.NativeisReceiveTimeoutEnabled(*):fd
gnu.io.I2C.NativeisReceiveTimeoutEnabled(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.I2C.drain(*):fd
gnu.io.I2C.drain(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.I2C.eventLoop(*):fd
gnu.io.I2C.eventLoop(*):java.lang.Thread.interrupted()
gnu.io.I2C.eventLoop(*):sendEvent(IZ)
gnu.io.I2C.isCD(*):fd
gnu.io.I2C.isCTS(*):fd
gnu.io.I2C.isDSR(*):fd
gnu.io.I2C.isDTR(*):fd
gnu.io.I2C.isRI(*):fd
gnu.io.I2C.isRTS(*):fd
gnu.io.I2C.nativeClose(*):fd
gnu.io.I2C.nativeSetI2CPortParams(*):fd
gnu.io.I2C.nativeSetI2CPortParams(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.I2C.nativeSetI2CPortParams(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.I2C.nativeavailable(*):fd
gnu.io.I2C.nativeavailable(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.I2C.open(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.I2C.readArray(*):fd
gnu.io.I2C.readArray(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.I2C.readArray(*):java.lang.ArrayIndexOutOfBoundsException.<init>(Ljava/lang/String;)
gnu.io.I2C.readArray(*):java.lang.OutOfMemoryError.<init>(Ljava/lang/String;)
gnu.io.I2C.readArray(*):timeout
gnu.io.I2C.readByte(*):fd
gnu.io.I2C.readByte(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.I2C.readByte(*):timeout
gnu.io.I2C.sendBreak(*):fd
gnu.io.I2C.setDSR(*):fd
gnu.io.I2C.setDTR(*):fd
gnu.io.I2C.setRTS(*):fd
gnu.io.I2C.setflowcontrol(*):fd
gnu.io.I2C.setflowcontrol(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.I2C.writeArray(*):fd
gnu.io.I2C.writeArray(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.I2C.writeByte(*):fd
gnu.io.I2C.writeByte(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.eventLoop(*):checkMonitorThread()
gnu.io.LPRPort.eventLoop(*):fd
gnu.io.LPRPort.eventLoop(*):sendEvent(IZ)
gnu.io.LPRPort.isPaperOut(*):fd
gnu.io.LPRPort.isPrinterBusy(*):fd
gnu.io.LPRPort.isPrinterError(*):fd
gnu.io.LPRPort.isPrinterSelected(*):fd
gnu.io.LPRPort.isPrinterTimedOut(*):fd
gnu.io.LPRPort.nativeClose(*):fd
gnu.io.LPRPort.nativeavailable(*):fd
gnu.io.LPRPort.nativeavailable(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.open(*):gnu.io.PortInUseException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.open(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.open(*):javax.comm.PortInUseException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.open(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.readArray(*):fd
gnu.io.LPRPort.readArray(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.readArray(*):threshold
gnu.io.LPRPort.readArray(*):timeout
gnu.io.LPRPort.readByte(*):fd
gnu.io.LPRPort.readByte(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.readByte(*):timeout
gnu.io.LPRPort.setHWFC(*):fd
gnu.io.LPRPort.setLPRMode(*):gnu.io.PortInUseException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.setLPRMode(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.setLPRMode(*):javax.comm.PortInUseException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.setLPRMode(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.writeArray(*):fd
gnu.io.LPRPort.writeArray(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.LPRPort.writeByte(*):fd
gnu.io.LPRPort.writeByte(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RS485.NativeEnableReceiveTimeoutThreshold(*):fd
gnu.io.RS485.NativeEnableReceiveTimeoutThreshold(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RS485.NativegetReceiveTimeout(*):fd
gnu.io.RS485.NativegetReceiveTimeout(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RS485.NativeisReceiveTimeoutEnabled(*):fd
gnu.io.RS485.NativeisReceiveTimeoutEnabled(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RS485.drain(*):fd
gnu.io.RS485.drain(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RS485.eventLoop(*):fd
gnu.io.RS485.eventLoop(*):java.lang.Thread.interrupted()
gnu.io.RS485.eventLoop(*):sendEvent(IZ)
gnu.io.RS485.isCD(*):fd
gnu.io.RS485.isCTS(*):fd
gnu.io.RS485.isDSR(*):fd
gnu.io.RS485.isDTR(*):fd
gnu.io.RS485.isRI(*):fd
gnu.io.RS485.isRTS(*):fd
gnu.io.RS485.nativeClose(*):fd
gnu.io.RS485.nativeSetRS485PortParams(*):fd
gnu.io.RS485.nativeSetRS485PortParams(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RS485.nativeSetRS485PortParams(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RS485.nativeavailable(*):fd
gnu.io.RS485.nativeavailable(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RS485.open(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RS485.readArray(*):fd
gnu.io.RS485.readArray(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RS485.readArray(*):java.lang.ArrayIndexOutOfBoundsException.<init>(Ljava/lang/String;)
gnu.io.RS485.readArray(*):java.lang.OutOfMemoryError.<init>(Ljava/lang/String;)
gnu.io.RS485.readArray(*):timeout
gnu.io.RS485.readByte(*):fd
gnu.io.RS485.readByte(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RS485.readByte(*):timeout
gnu.io.RS485.sendBreak(*):fd
gnu.io.RS485.setDSR(*):fd
gnu.io.RS485.setDTR(*):fd
gnu.io.RS485.setRTS(*):fd
gnu.io.RS485.setflowcontrol(*):fd
gnu.io.RS485.setflowcontrol(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RS485.writeArray(*):fd
gnu.io.RS485.writeArray(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RS485.writeByte(*):fd
gnu.io.RS485.writeByte(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXCommDriver.registerKnownPorts(*):gnu.io.CommPortIdentifier.addPortName(Ljava/lang/String;ILgnu/io/CommDriver;)
gnu.io.RXTXCommDriver.registerKnownPorts(*):java.io.PrintStream.print(Ljava/lang/String;)
gnu.io.RXTXCommDriver.registerKnownPorts(*):java.lang.System.out
gnu.io.RXTXCommDriver.registerKnownPorts(*):javax.comm.CommPortIdentifier.addPortName(Ljava/lang/String;ILjavax/comm/CommDriver;)
gnu.io.RXTXPort.NativeEnableReceiveTimeoutThreshold(*):fd
gnu.io.RXTXPort.NativeEnableReceiveTimeoutThreshold(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.NativegetReceiveTimeout(*):fd
gnu.io.RXTXPort.NativegetReceiveTimeout(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.NativeisReceiveTimeoutEnabled(*):fd
gnu.io.RXTXPort.NativeisReceiveTimeoutEnabled(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.drain(*):fd
gnu.io.RXTXPort.eventLoop(*):MonitorThreadCloseLock
gnu.io.RXTXPort.eventLoop(*):MonitorThreadLock
gnu.io.RXTXPort.eventLoop(*):checkMonitorThread()
gnu.io.RXTXPort.eventLoop(*):eis
gnu.io.RXTXPort.eventLoop(*):fd
gnu.io.RXTXPort.eventLoop(*):java.io.PrintStream.print(Ljava/lang/String;)
gnu.io.RXTXPort.eventLoop(*):java.lang.System.out
gnu.io.RXTXPort.eventLoop(*):java.lang.Thread.interrupted()
gnu.io.RXTXPort.eventLoop(*):monThreadisInterrupted
gnu.io.RXTXPort.eventLoop(*):sendEvent(IZ)
gnu.io.RXTXPort.interruptEventLoop(*):fd
gnu.io.RXTXPort.interruptEventLoop(*):monThreadisInterrupted
gnu.io.RXTXPort.isCD(*):fd
gnu.io.RXTXPort.isCTS(*):fd
gnu.io.RXTXPort.isDSR(*):fd
gnu.io.RXTXPort.isDTR(*):fd
gnu.io.RXTXPort.isRI(*):fd
gnu.io.RXTXPort.isRTS(*):fd
gnu.io.RXTXPort.nativeClearCommInput(*):fd
gnu.io.RXTXPort.nativeClose(*):fd
gnu.io.RXTXPort.nativeClose(*):pid
gnu.io.RXTXPort.nativeDrain(*):eis
gnu.io.RXTXPort.nativeDrain(*):fd
gnu.io.RXTXPort.nativeDrain(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeDrain(*):sendEvent(IZ)
gnu.io.RXTXPort.nativeGetBaudBase(*):fd
gnu.io.RXTXPort.nativeGetBaudBase(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeGetBaudBase(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeGetBaudBase(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeGetCallOutHangup(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeGetDivisor(*):fd
gnu.io.RXTXPort.nativeGetDivisor(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeGetDivisor(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeGetDivisor(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeGetEndOfInputChar(*):fd
gnu.io.RXTXPort.nativeGetLowLatency(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeGetParityErrorChar(*):fd
gnu.io.RXTXPort.nativeGetUartType(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetBaudBase(*):fd
gnu.io.RXTXPort.nativeSetBaudBase(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetBaudBase(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetBaudBase(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetCallOutHangup(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetDivisor(*):fd
gnu.io.RXTXPort.nativeSetDivisor(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetDivisor(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetDivisor(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetEndOfInputChar(*):fd
gnu.io.RXTXPort.nativeSetEndOfInputChar(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetEndOfInputChar(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetEventFlag(*):eis
gnu.io.RXTXPort.nativeSetLowLatency(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetParityErrorChar(*):fd
gnu.io.RXTXPort.nativeSetParityErrorChar(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetParityErrorChar(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetSerialPortParams(*):fd
gnu.io.RXTXPort.nativeSetSerialPortParams(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetSerialPortParams(*):java.io.PrintStream.print(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetSerialPortParams(*):java.lang.System.out
gnu.io.RXTXPort.nativeSetSerialPortParams(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeSetUartType(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeStaticSetSerialPortParams(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeStaticSetSerialPortParams(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.nativeavailable(*):fd
gnu.io.RXTXPort.nativeavailable(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.open(*):dataBits
gnu.io.RXTXPort.open(*):eis
gnu.io.RXTXPort.open(*):gnu.io.PortInUseException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.open(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.open(*):javax.comm.PortInUseException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.open(*):parity
gnu.io.RXTXPort.open(*):pid
gnu.io.RXTXPort.open(*):speed
gnu.io.RXTXPort.open(*):stopBits
gnu.io.RXTXPort.readArray(*):eis
gnu.io.RXTXPort.readArray(*):fd
gnu.io.RXTXPort.readArray(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.readArray(*):java.lang.ArrayIndexOutOfBoundsException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.readArray(*):java.lang.OutOfMemoryError.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.readArray(*):threshold
gnu.io.RXTXPort.readArray(*):timeout
gnu.io.RXTXPort.readByte(*):eis
gnu.io.RXTXPort.readByte(*):fd
gnu.io.RXTXPort.readByte(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.readByte(*):timeout
gnu.io.RXTXPort.readTerminatedArray(*):fd
gnu.io.RXTXPort.sendBreak(*):fd
gnu.io.RXTXPort.setDSR(*):fd
gnu.io.RXTXPort.setDTR(*):fd
gnu.io.RXTXPort.setRTS(*):fd
gnu.io.RXTXPort.setflowcontrol(*):fd
gnu.io.RXTXPort.setflowcontrol(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.setflowcontrol(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.setflowcontrol(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.writeArray(*):fd
gnu.io.RXTXPort.writeArray(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.RXTXPort.writeByte(*):fd
gnu.io.RXTXPort.writeByte(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.NativeEnableReceiveTimeoutThreshold(*):fd
gnu.io.Raw.NativeEnableReceiveTimeoutThreshold(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.NativegetReceiveTimeout(*):fd
gnu.io.Raw.NativegetReceiveTimeout(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.NativeisReceiveTimeoutEnabled(*):fd
gnu.io.Raw.NativeisReceiveTimeoutEnabled(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.drain(*):fd
gnu.io.Raw.drain(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.eventLoop(*):fd
gnu.io.Raw.eventLoop(*):java.lang.Thread.interrupted()
gnu.io.Raw.eventLoop(*):sendEvent(IZ)
gnu.io.Raw.isCD(*):fd
gnu.io.Raw.isCTS(*):fd
gnu.io.Raw.isDSR(*):fd
gnu.io.Raw.isDTR(*):fd
gnu.io.Raw.isRI(*):fd
gnu.io.Raw.isRTS(*):fd
gnu.io.Raw.nativeClose(*):ciAddress
gnu.io.Raw.nativeClose(*):fd
gnu.io.Raw.nativeClose(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.nativeSetRawParams(*):fd
gnu.io.Raw.nativeSetRawParams(*):gnu.io.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.Raw.nativeSetRawParams(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.io.Raw.nativeavailable(*):fd
gnu.io.Raw.nativeavailable(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.open(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.readArray(*):fd
gnu.io.Raw.readArray(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.readArray(*):java.lang.ArrayIndexOutOfBoundsException.<init>(Ljava/lang/String;)
gnu.io.Raw.readArray(*):java.lang.OutOfMemoryError.<init>(Ljava/lang/String;)
gnu.io.Raw.readArray(*):timeout
gnu.io.Raw.readByte(*):fd
gnu.io.Raw.readByte(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.readByte(*):timeout
gnu.io.Raw.sendBreak(*):fd
gnu.io.Raw.setDSR(*):fd
gnu.io.Raw.setDTR(*):fd
gnu.io.Raw.setRTS(*):fd
gnu.io.Raw.setflowcontrol(*):fd
gnu.io.Raw.setflowcontrol(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.writeArray(*):fd
gnu.io.Raw.writeArray(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.io.Raw.writeByte(*):fd
gnu.io.Raw.writeByte(*):java.io.IOException.<init>(Ljava/lang/String;)

gnu.javax.comm.wce.WCESerialPort.disableNativeReceiveTimeout(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.javax.comm.wce.WCESerialPort.enableNativeReceiveTimeout(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.javax.comm.wce.WCESerialPort.nativeRead(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.javax.comm.wce.WCESerialPort.nativeRead(*):java.lang.IndexOutOfBoundsException.<init>(Ljava/lang/String;)
gnu.javax.comm.wce.WCESerialPort.nativeWrite(*):java.io.IOException.<init>(Ljava/lang/String;)
gnu.javax.comm.wce.WCESerialPort.nativeWrite(*):java.lang.IndexOutOfBoundsException.<init>(Ljava/lang/String;)
gnu.javax.comm.wce.WCESerialPort.setNativeFlowControlMode(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.javax.comm.wce.WCESerialPort.setNativeSerialPortParams(*):javax.comm.UnsupportedCommOperationException.<init>(Ljava/lang/String;)
gnu.javax.comm.wce.WCESerialPort.waitAndNotifyNativeEvents(*):notifyEvent(IZZ)
