/* DO NOT EDIT THIS FILE - it is machine generated (JCGO GenRefl v1.2) */$\n$\npackage com.sun.jna;$\n$\nfinal class VMReflector$\n{$\n$\n static final class _CallbackReference$\n {$\n$\n  void createNativeCallback()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("com.sun.jna.Callback$UncaughtExceptionHandler").$\n    getDeclaredMethod("uncaughtException", new java.lang.Class[]$\n    {$\n     java.lang.Class.forName("com.sun.jna.Callback", false, null),$\n     java.lang.Class.forName("java.lang.Throwable", false, null),$\n    });$\n   java.lang.Class.forName("com.sun.jna.Native").$\n    getDeclaredField("callbackExceptionHandler");$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsatisfiedLinkError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _Function$\n {$\n$\n  void invokeDouble()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("com.sun.jna.LastErrorException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalStateException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsupportedOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void invokeFloat()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("com.sun.jna.LastErrorException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalStateException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsupportedOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void invokeInt()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("com.sun.jna.LastErrorException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalStateException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsupportedOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void invokeLong()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("com.sun.jna.LastErrorException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalStateException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsupportedOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void invokeObject()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("com.sun.jna.LastErrorException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalStateException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsupportedOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void invokePointer()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("com.sun.jna.LastErrorException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalStateException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsupportedOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void invokeStructure()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("com.sun.jna.LastErrorException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalStateException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsupportedOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void invokeVoid()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("com.sun.jna.LastErrorException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalStateException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsupportedOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _Native$\n {$\n$\n  void ffi_prep_closure()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsatisfiedLinkError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void getDirectBufferPointer()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.nio.ByteBuffer").$\n    getDeclaredMethod("allocateDirect", new java.lang.Class[]$\n    {$\n     int.class,$\n    });$\n  }$\n$\n  void getWindowHandle0()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalStateException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.System").$\n    getDeclaredMethod("getProperty", new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsatisfiedLinkError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void initIDs()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("com.sun.jna.Callback").$\n    getDeclaredField("METHOD_NAME");$\n   java.lang.Class.forName("com.sun.jna.CallbackReference").$\n    getDeclaredMethod("getCallback", new java.lang.Class[]$\n    {$\n     java.lang.Class.class,$\n     java.lang.Class.forName("com.sun.jna.Pointer", false, null),$\n     boolean.class,$\n    });$\n   java.lang.Class.forName("com.sun.jna.CallbackReference").$\n    getDeclaredMethod("getFunctionPointer", new java.lang.Class[]$\n    {$\n     java.lang.Class.forName("com.sun.jna.Callback", false, null),$\n     boolean.class,$\n    });$\n   java.lang.Class.forName("com.sun.jna.CallbackReference").$\n    getDeclaredMethod("getNativeString", new java.lang.Class[]$\n    {$\n     java.lang.Object.class,$\n     boolean.class,$\n    });$\n   java.lang.Class.forName("com.sun.jna.IntegerType").$\n    getDeclaredField("value");$\n   java.lang.Class.forName("com.sun.jna.Native").$\n    getDeclaredMethod("fromNative", new java.lang.Class[]$\n    {$\n     java.lang.Class.forName("com.sun.jna.FromNativeConverter", false, null),$\n     java.lang.Object.class,$\n     java.lang.Class.class,$\n    });$\n   java.lang.Class.forName("com.sun.jna.Native").$\n    getDeclaredMethod("fromNative", new java.lang.Class[]$\n    {$\n     java.lang.Class.class,$\n     java.lang.Object.class,$\n    });$\n   java.lang.Class.forName("com.sun.jna.Native").$\n    getDeclaredMethod("nativeType", new java.lang.Class[]$\n    {$\n     java.lang.Class.class,$\n    });$\n   java.lang.Class.forName("com.sun.jna.Native").$\n    getDeclaredMethod("toNative", new java.lang.Class[]$\n    {$\n     java.lang.Class.forName("com.sun.jna.ToNativeConverter", false, null),$\n     java.lang.Object.class,$\n    });$\n   java.lang.Class.forName("com.sun.jna.Native").$\n    getDeclaredMethod("updateLastError", new java.lang.Class[]$\n    {$\n     int.class,$\n    });$\n   java.lang.Class.forName("com.sun.jna.Native$ffi_callback").$\n    getDeclaredMethod("invoke", new java.lang.Class[]$\n    {$\n     long.class,$\n     long.class,$\n     long.class,$\n    });$\n   java.lang.Class.forName("com.sun.jna.NativeMapped").$\n    getDeclaredMethod("toNative", new java.lang.Class[] {});$\n   java.lang.Class.forName("com.sun.jna.Pointer", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     long.class,$\n    });$\n   java.lang.Class.forName("com.sun.jna.Pointer").$\n    getDeclaredField("peer");$\n   java.lang.Class.forName("com.sun.jna.PointerType").$\n    getDeclaredField("pointer");$\n   java.lang.Class.forName("com.sun.jna.Structure").$\n    getDeclaredMethod("autoRead", new java.lang.Class[] {});$\n   java.lang.Class.forName("com.sun.jna.Structure").$\n    getDeclaredMethod("autoWrite", new java.lang.Class[] {});$\n   java.lang.Class.forName("com.sun.jna.Structure").$\n    getDeclaredMethod("getTypeInfo", new java.lang.Class[] {});$\n   java.lang.Class.forName("com.sun.jna.Structure").$\n    getDeclaredField("memory");$\n   java.lang.Class.forName("com.sun.jna.Structure").$\n    getDeclaredMethod("newInstance", new java.lang.Class[]$\n    {$\n     java.lang.Class.class,$\n    });$\n   java.lang.Class.forName("com.sun.jna.Structure").$\n    getDeclaredField("typeInfo");$\n   java.lang.Class.forName("com.sun.jna.Structure").$\n    getDeclaredMethod("useMemory", new java.lang.Class[]$\n    {$\n     java.lang.Class.forName("com.sun.jna.Pointer", false, null),$\n    });$\n   java.lang.Class.forName("com.sun.jna.Structure$ByValue").$\n    getDeclaredMethod("hashCode", new java.lang.Class[] {});$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_double");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_float");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_longdouble");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_pointer");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_sint16");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_sint32");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_sint64");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_sint8");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_uint16");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_uint32");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_uint64");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_uint8");$\n   java.lang.Class.forName("com.sun.jna.Structure$FFIType$FFITypes").$\n    getDeclaredField("ffi_type_void");$\n   java.lang.Class.forName("com.sun.jna.WString", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Boolean", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     boolean.class,$\n    });$\n   java.lang.Class.forName("java.lang.Boolean").$\n    getDeclaredField("TYPE");$\n   java.lang.Class.forName("java.lang.Boolean").$\n    getDeclaredField("value");$\n   java.lang.Class.forName("java.lang.Byte", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     byte.class,$\n    });$\n   java.lang.Class.forName("java.lang.Byte").$\n    getDeclaredField("TYPE");$\n   java.lang.Class.forName("java.lang.Byte").$\n    getDeclaredField("value");$\n   java.lang.Class.forName("java.lang.Character", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     char.class,$\n    });$\n   java.lang.Class.forName("java.lang.Character").$\n    getDeclaredField("TYPE");$\n   java.lang.Class.forName("java.lang.Character").$\n    getDeclaredField("value");$\n   java.lang.Class.class.$\n    getDeclaredMethod("getComponentType", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.lang.Double", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     double.class,$\n    });$\n   java.lang.Class.forName("java.lang.Double").$\n    getDeclaredField("TYPE");$\n   java.lang.Class.forName("java.lang.Double").$\n    getDeclaredField("value");$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Float", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     float.class,$\n    });$\n   java.lang.Class.forName("java.lang.Float").$\n    getDeclaredField("TYPE");$\n   java.lang.Class.forName("java.lang.Float").$\n    getDeclaredField("value");$\n   java.lang.Class.forName("java.lang.Integer", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     int.class,$\n    });$\n   java.lang.Class.forName("java.lang.Integer").$\n    getDeclaredField("TYPE");$\n   java.lang.Class.forName("java.lang.Integer").$\n    getDeclaredField("value");$\n   java.lang.Class.forName("java.lang.Long", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     long.class,$\n    });$\n   java.lang.Class.forName("java.lang.Long").$\n    getDeclaredField("TYPE");$\n   java.lang.Class.forName("java.lang.Long").$\n    getDeclaredField("value");$\n   java.lang.Object.class.$\n    getDeclaredMethod("toString", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.lang.Short", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     short.class,$\n    });$\n   java.lang.Class.forName("java.lang.Short").$\n    getDeclaredField("TYPE");$\n   java.lang.Class.forName("java.lang.Short").$\n    getDeclaredField("value");$\n   java.lang.String.class.$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     byte[].class,$\n    });$\n   java.lang.String.class.$\n    getDeclaredMethod("getBytes", new java.lang.Class[] {});$\n   java.lang.String.class.$\n    getDeclaredMethod("getBytes", new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.String.class.$\n    getDeclaredMethod("toCharArray", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.lang.System").$\n    getDeclaredMethod("getProperty", new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsatisfiedLinkError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Void").$\n    getDeclaredField("TYPE");$\n   java.lang.Class.forName("java.lang.reflect.Method").$\n    getDeclaredMethod("getParameterTypes", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.lang.reflect.Method").$\n    getDeclaredMethod("getReturnType", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.Buffer", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     int.class,$\n     int.class,$\n     int.class,$\n     int.class,$\n    });$\n   java.lang.Class.forName("java.nio.ByteBuffer").$\n    getDeclaredMethod("array", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.ByteBuffer").$\n    getDeclaredMethod("arrayOffset", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.CharBuffer").$\n    getDeclaredMethod("array", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.CharBuffer").$\n    getDeclaredMethod("arrayOffset", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.DoubleBuffer").$\n    getDeclaredMethod("array", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.DoubleBuffer").$\n    getDeclaredMethod("arrayOffset", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.FloatBuffer").$\n    getDeclaredMethod("array", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.FloatBuffer").$\n    getDeclaredMethod("arrayOffset", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.IntBuffer").$\n    getDeclaredMethod("array", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.IntBuffer").$\n    getDeclaredMethod("arrayOffset", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.LongBuffer").$\n    getDeclaredMethod("array", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.LongBuffer").$\n    getDeclaredMethod("arrayOffset", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.ShortBuffer").$\n    getDeclaredMethod("array", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.nio.ShortBuffer").$\n    getDeclaredMethod("arrayOffset", new java.lang.Class[] {});$\n  }$\n$\n  void initialize_ffi_type()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void registerMethod()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("com.sun.jna.LastErrorException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void sizeof()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _NativeLibrary$\n {$\n$\n  void close()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void findSymbol()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.UnsatisfiedLinkError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void open()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.UnsatisfiedLinkError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _Pointer$\n {$\n$\n  void _getByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _getChar()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _getDouble()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _getFloat()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _getInt()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _getLong()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _getPointer()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _getShort()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _getString()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _indexOf()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _read()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _setByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _setChar()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _setDouble()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _setFloat()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _setInt()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _setLong()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _setMemory()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _setPointer()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _setShort()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _setString()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void _write()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n}$\n