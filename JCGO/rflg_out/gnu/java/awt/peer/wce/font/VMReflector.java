/* DO NOT EDIT THIS FILE - it is machine generated (JCGO GenRefl v1.2) */$\n$\npackage gnu.java.awt.peer.wce.font;$\n$\nfinal class VMReflector$\n{$\n$\n static final class _FreeTypeFace$\n {$\n$\n  void createNativeFromFile()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.awt.FontFormatException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void createNativeFromStream()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.awt.FontFormatException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.io.InputStream").$\n    getDeclaredMethod("read", new java.lang.Class[]$\n    {$\n     byte[].class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void initNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.awt.AWTError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _FreeTypeGlyphVector$\n {$\n$\n  void getNativeGlyphLogicalBounds()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.awt.geom.GeneralPath", false, null).$\n    getDeclaredConstructor(new java.lang.Class[] {});$\n   java.lang.Class.forName("java.awt.geom.GeneralPath").$\n    getDeclaredMethod("closePath", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.awt.geom.GeneralPath").$\n    getDeclaredMethod("lineTo", new java.lang.Class[]$\n    {$\n     float.class,$\n     float.class,$\n    });$\n   java.lang.Class.forName("java.awt.geom.GeneralPath").$\n    getDeclaredMethod("moveTo", new java.lang.Class[]$\n    {$\n     float.class,$\n     float.class,$\n    });$\n  }$\n$\n  void getNativeGlyphVisualBounds()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.awt.geom.GeneralPath", false, null).$\n    getDeclaredConstructor(new java.lang.Class[] {});$\n   java.lang.Class.forName("java.awt.geom.GeneralPath").$\n    getDeclaredMethod("closePath", new java.lang.Class[] {});$\n   java.lang.Class.forName("java.awt.geom.GeneralPath").$\n    getDeclaredMethod("lineTo", new java.lang.Class[]$\n    {$\n     float.class,$\n     float.class,$\n    });$\n   java.lang.Class.forName("java.awt.geom.GeneralPath").$\n    getDeclaredMethod("moveTo", new java.lang.Class[]$\n    {$\n     float.class,$\n     float.class,$\n    });$\n  }$\n$\n  void getNativeLogicalBounds()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.awt.geom.Rectangle2D$Float", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     float.class,$\n     float.class,$\n     float.class,$\n     float.class,$\n    });$\n  }$\n$\n  void getNativeVisualBounds()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.awt.geom.Rectangle2D$Float", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     float.class,$\n     float.class,$\n     float.class,$\n     float.class,$\n    });$\n  }$\n }$\n$\n static final class _WCEFontMetrics$\n {$\n$\n  void getNativeStringWidth()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.NullPointerException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _WCEFontPeer$\n {$\n$\n  void getNativeStringBounds()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.awt.geom.Rectangle2D$Double", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     double.class,$\n     double.class,$\n     double.class,$\n     double.class,$\n    });$\n   java.lang.Class.forName("java.awt.geom.Rectangle2D$Float", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     float.class,$\n     float.class,$\n     float.class,$\n     float.class,$\n    });$\n  }$\n }$\n}$\n