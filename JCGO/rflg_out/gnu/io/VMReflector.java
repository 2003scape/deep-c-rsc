/* DO NOT EDIT THIS FILE - it is machine generated (JCGO GenRefl v1.2) */$\n$\npackage gnu.io;$\n$\nfinal class VMReflector$\n{$\n$\n static final class _I2C$\n {$\n$\n  void NativeEnableReceiveTimeoutThreshold()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void NativegetReceiveTimeout()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void NativeisReceiveTimeoutEnabled()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void drain()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void eventLoop()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredMethod("sendEvent", new java.lang.Class[]$\n    {$\n     int.class,$\n     boolean.class,$\n    });$\n   java.lang.Class.forName("java.lang.Thread").$\n    getDeclaredMethod("interrupted", new java.lang.Class[] {});$\n  }$\n$\n  void isCD()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isCTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isDSR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isDTR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isRI()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isRTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n  }$\n$\n  void nativeClose()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n  }$\n$\n  void nativeSetI2CPortParams()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeavailable()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void open()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readArray()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("timeout");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.ArrayIndexOutOfBoundsException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("timeout");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void sendBreak()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setDSR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setDTR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setRTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setflowcontrol()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void writeArray()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void writeByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.I2C").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _LPRPort$\n {$\n$\n  void eventLoop()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredMethod("checkMonitorThread", new java.lang.Class[] {});$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredMethod("sendEvent", new java.lang.Class[]$\n    {$\n     int.class,$\n     boolean.class,$\n    });$\n  }$\n$\n  void isPaperOut()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isPrinterBusy()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isPrinterError()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isPrinterSelected()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isPrinterTimedOut()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void nativeClose()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void nativeavailable()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void open()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.PortInUseException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.PortInUseException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readArray()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("threshold");$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("timeout");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("timeout");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void setHWFC()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setLPRMode()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.PortInUseException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.PortInUseException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void writeArray()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void writeByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.LPRPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _RS485$\n {$\n$\n  void NativeEnableReceiveTimeoutThreshold()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void NativegetReceiveTimeout()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void NativeisReceiveTimeoutEnabled()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void drain()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void eventLoop()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredMethod("sendEvent", new java.lang.Class[]$\n    {$\n     int.class,$\n     boolean.class,$\n    });$\n   java.lang.Class.forName("java.lang.Thread").$\n    getDeclaredMethod("interrupted", new java.lang.Class[] {});$\n  }$\n$\n  void isCD()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isCTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isDSR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isDTR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isRI()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isRTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n  }$\n$\n  void nativeClose()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n  }$\n$\n  void nativeSetRS485PortParams()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeavailable()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void open()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readArray()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("timeout");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.ArrayIndexOutOfBoundsException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("timeout");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void sendBreak()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setDSR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setDTR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setRTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setflowcontrol()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void writeArray()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void writeByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RS485").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _RXTXCommDriver$\n {$\n$\n  void registerKnownPorts()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.CommPortIdentifier").$\n    getDeclaredMethod("addPortName", new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n     int.class,$\n     java.lang.Class.forName("gnu.io.CommDriver", false, null),$\n    });$\n   java.lang.Class.forName("java.io.PrintStream").$\n    getDeclaredMethod("print", new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.System").$\n    getDeclaredField("out");$\n   java.lang.Class.forName("javax.comm.CommPortIdentifier").$\n    getDeclaredMethod("addPortName", new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n     int.class,$\n     java.lang.Class.forName("javax.comm.CommDriver", false, null),$\n    });$\n  }$\n }$\n$\n static final class _RXTXPort$\n {$\n$\n  void NativeEnableReceiveTimeoutThreshold()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void NativegetReceiveTimeout()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void NativeisReceiveTimeoutEnabled()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void drain()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void eventLoop()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("MonitorThreadCloseLock");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("MonitorThreadLock");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredMethod("checkMonitorThread", new java.lang.Class[] {});$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("eis");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("monThreadisInterrupted");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredMethod("sendEvent", new java.lang.Class[]$\n    {$\n     int.class,$\n     boolean.class,$\n    });$\n   java.lang.Class.forName("java.io.PrintStream").$\n    getDeclaredMethod("print", new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.System").$\n    getDeclaredField("out");$\n   java.lang.Class.forName("java.lang.Thread").$\n    getDeclaredMethod("interrupted", new java.lang.Class[] {});$\n  }$\n$\n  void interruptEventLoop()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("monThreadisInterrupted");$\n  }$\n$\n  void isCD()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isCTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isDSR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isDTR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isRI()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isRTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void nativeClearCommInput()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void nativeClose()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("pid");$\n  }$\n$\n  void nativeDrain()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("eis");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredMethod("sendEvent", new java.lang.Class[]$\n    {$\n     int.class,$\n     boolean.class,$\n    });$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeGetBaudBase()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeGetCallOutHangup()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeGetDivisor()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeGetEndOfInputChar()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void nativeGetLowLatency()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeGetParityErrorChar()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void nativeGetUartType()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeSetBaudBase()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeSetCallOutHangup()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeSetDivisor()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeSetEndOfInputChar()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeSetEventFlag()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("eis");$\n  }$\n$\n  void nativeSetLowLatency()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeSetParityErrorChar()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeSetSerialPortParams()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.io.PrintStream").$\n    getDeclaredMethod("print", new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.System").$\n    getDeclaredField("out");$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeSetUartType()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeStaticSetSerialPortParams()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeavailable()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void open()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.PortInUseException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("dataBits");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("eis");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("parity");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("pid");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("speed");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("stopBits");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.PortInUseException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readArray()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("eis");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("threshold");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("timeout");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.ArrayIndexOutOfBoundsException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("eis");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("timeout");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readTerminatedArray()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void sendBreak()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setDSR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setDTR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setRTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setflowcontrol()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void writeArray()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void writeByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.RXTXPort").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _Raw$\n {$\n$\n  void NativeEnableReceiveTimeoutThreshold()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void NativegetReceiveTimeout()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void NativeisReceiveTimeoutEnabled()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void drain()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void eventLoop()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredMethod("sendEvent", new java.lang.Class[]$\n    {$\n     int.class,$\n     boolean.class,$\n    });$\n   java.lang.Class.forName("java.lang.Thread").$\n    getDeclaredMethod("interrupted", new java.lang.Class[] {});$\n  }$\n$\n  void isCD()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isCTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isDSR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isDTR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isRI()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n  }$\n$\n  void isRTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n  }$\n$\n  void nativeClose()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("ciAddress");$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeSetRawParams()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.comm.UnsupportedCommOperationException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeavailable()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void open()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readArray()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("timeout");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.ArrayIndexOutOfBoundsException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("java.lang.OutOfMemoryError", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("timeout");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void sendBreak()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setDSR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setDTR()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setRTS()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n  }$\n$\n  void setflowcontrol()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void writeArray()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void writeByte()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.io.Raw").$\n    getDeclaredField("fd");$\n   java.lang.Class.forName("java.io.IOException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n}$\n