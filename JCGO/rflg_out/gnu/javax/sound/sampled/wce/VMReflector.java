/* DO NOT EDIT THIS FILE - it is machine generated (JCGO GenRefl v1.2) */$\n$\npackage gnu.javax.sound.sampled.wce;$\n$\nfinal class VMReflector$\n{$\n$\n static final class _WCECallbackWindowThread$\n {$\n$\n  void messageLoop()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("gnu.javax.sound.sampled.wce.WCEEventQueue").$\n    getDeclaredMethod("postEvent", new java.lang.Class[]$\n    {$\n     java.lang.Class.forName("javax.sound.sampled.Line", false, null),$\n     java.lang.Class.forName("javax.sound.sampled.LineEvent$Type", false, null),$\n     long.class,$\n    });$\n   java.lang.Class.forName("java.lang.RuntimeException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.sound.sampled.LineEvent$Type").$\n    getDeclaredField("CLOSE");$\n   java.lang.Class.forName("javax.sound.sampled.LineEvent$Type").$\n    getDeclaredField("OPEN");$\n   java.lang.Class.forName("javax.sound.sampled.LineEvent$Type").$\n    getDeclaredField("START");$\n   java.lang.Class.forName("javax.sound.sampled.LineEvent$Type").$\n    getDeclaredField("STOP");$\n   java.lang.Class.forName("javax.sound.sampled.LineUnavailableException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _WCEMidiOutputPort$\n {$\n$\n  void openNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.Error", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void startNativeMidiFile()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.IllegalArgumentException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _WCESourceDataLine$\n {$\n$\n  void drainNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.RuntimeException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void flushNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.RuntimeException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void nativeClose()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("javax.sound.sampled.LineUnavailableException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void openNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("javax.sound.sampled.LineUnavailableException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void startNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.RuntimeException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void stopNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.RuntimeException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void writeNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.RuntimeException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n$\n static final class _WCETargetDataLine$\n {$\n$\n  void closeNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("javax.sound.sampled.LineUnavailableException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void drainNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.RuntimeException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void openNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("javax.sound.sampled.LineUnavailableException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n$\n  void readNative()$\n   throws java.lang.Exception$\n  {$\n   java.lang.Class.forName("java.lang.RuntimeException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n   java.lang.Class.forName("javax.sound.sampled.LineUnavailableException", false, null).$\n    getDeclaredConstructor(new java.lang.Class[]$\n    {$\n     java.lang.String.class,$\n    });$\n  }$\n }$\n}$\n