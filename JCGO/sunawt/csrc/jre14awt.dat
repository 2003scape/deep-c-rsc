# @(#) jre14awt.dat --
# JNI method/field reflection dependency for "Sun J2SE v1.4.2 AWT" GUI
# (data file for JCGO "GenRefl" utility).
##
# Project: JCGO-SUNAWT (http://www.ivmaisoft.com/jcgo/)
# Copyright (C) 2001-2009 Ivan Maidanski <ivmai@ivmaisoft.com>
# Use is subject to license terms. No warranties. All rights reserved.
##

# Output base folder: $(JCGO)/sawt_out/rflg_out

# File per-line format:
# [package.]CallerClass.callerMethod(*):[[package.]Class.]field
# [package.]CallerClass.callerMethod(*):[[package.]Class.]method(signature)

com.sun.imageio.plugins.jpeg.JPEGImageReader.initReaderIDs(*):acceptPixels(IZ)
com.sun.imageio.plugins.jpeg.JPEGImageReader.initReaderIDs(*):javax.imageio.stream.ImageInputStream.read([BII)
com.sun.imageio.plugins.jpeg.JPEGImageReader.initReaderIDs(*):javax.imageio.stream.ImageInputStream.skipBytes(J)
com.sun.imageio.plugins.jpeg.JPEGImageReader.initReaderIDs(*):passComplete()
com.sun.imageio.plugins.jpeg.JPEGImageReader.initReaderIDs(*):passStarted(I)
com.sun.imageio.plugins.jpeg.JPEGImageReader.initReaderIDs(*):pushBack(I)
com.sun.imageio.plugins.jpeg.JPEGImageReader.initReaderIDs(*):setImageData(IIIII[B)
com.sun.imageio.plugins.jpeg.JPEGImageReader.initReaderIDs(*):warningOccurred(I)
com.sun.imageio.plugins.jpeg.JPEGImageReader.initReaderIDs(*):warningWithMessage(Ljava/lang/String;)
com.sun.imageio.plugins.jpeg.JPEGImageWriter.initWriterIDs(*):grabPixels(I)
com.sun.imageio.plugins.jpeg.JPEGImageWriter.initWriterIDs(*):javax.imageio.plugins.jpeg.JPEGHuffmanTable.lengths
com.sun.imageio.plugins.jpeg.JPEGImageWriter.initWriterIDs(*):javax.imageio.plugins.jpeg.JPEGHuffmanTable.values
com.sun.imageio.plugins.jpeg.JPEGImageWriter.initWriterIDs(*):javax.imageio.plugins.jpeg.JPEGQTable.table
com.sun.imageio.plugins.jpeg.JPEGImageWriter.initWriterIDs(*):javax.imageio.stream.ImageOutputStream.write([BII)
com.sun.imageio.plugins.jpeg.JPEGImageWriter.initWriterIDs(*):warningOccurred(I)
com.sun.imageio.plugins.jpeg.JPEGImageWriter.initWriterIDs(*):warningWithMessage(Ljava/lang/String;)
com.sun.imageio.plugins.jpeg.JPEGImageWriter.initWriterIDs(*):writeMetadata()

#sun.awt.windows.WToolkit.eventLoop(*):com.sun.java.swing.plaf.windows.WindowsPopupWindow.COMBOBOX_POPUP_WINDOW_TYPE
#sun.awt.windows.WToolkit.eventLoop(*):com.sun.java.swing.plaf.windows.WindowsPopupWindow.MENU_WINDOW_TYPE
#sun.awt.windows.WToolkit.eventLoop(*):com.sun.java.swing.plaf.windows.WindowsPopupWindow.POPUPMENU_WINDOW_TYPE
#sun.awt.windows.WToolkit.eventLoop(*):com.sun.java.swing.plaf.windows.WindowsPopupWindow.SUBMENU_WINDOW_TYPE
#sun.awt.windows.WToolkit.eventLoop(*):com.sun.java.swing.plaf.windows.WindowsPopupWindow.TOOLTIP_WINDOW_TYPE
#sun.awt.windows.WToolkit.eventLoop(*):com.sun.java.swing.plaf.windows.WindowsPopupWindow.UNDEFINED_WINDOW_TYPE
#sun.awt.windows.WToolkit.eventLoop(*):com.sun.java.swing.plaf.windows.WindowsPopupWindow.windowType
com.sun.java.swing.plaf.windows.WindowsPopupWindow.show(*):COMBOBOX_POPUP_WINDOW_TYPE
com.sun.java.swing.plaf.windows.WindowsPopupWindow.show(*):MENU_WINDOW_TYPE
com.sun.java.swing.plaf.windows.WindowsPopupWindow.show(*):POPUPMENU_WINDOW_TYPE
com.sun.java.swing.plaf.windows.WindowsPopupWindow.show(*):SUBMENU_WINDOW_TYPE
com.sun.java.swing.plaf.windows.WindowsPopupWindow.show(*):TOOLTIP_WINDOW_TYPE
com.sun.java.swing.plaf.windows.WindowsPopupWindow.show(*):UNDEFINED_WINDOW_TYPE
com.sun.java.swing.plaf.windows.WindowsPopupWindow.show(*):windowType

java.awt.AWTEvent.initIDs(*):bdata
java.awt.AWTEvent.initIDs(*):consumed
java.awt.AWTEvent.initIDs(*):data
java.awt.AWTEvent.initIDs(*):id
java.awt.AWTKeyStroke.allocateNewInstance(*):<init>()
java.awt.AWTKeyStroke.allocateNewInstance(*):javax.swing.KeyStroke.<init>()
java.awt.Button.initIDs(*):label
java.awt.Checkbox.initIDs(*):group
java.awt.Checkbox.initIDs(*):label
java.awt.Checkbox.initIDs(*):state
java.awt.CheckboxMenuItem.initIDs(*):state
java.awt.Color.initIDs(*):getRGB()
java.awt.Color.initIDs(*):value
java.awt.Component.initIDs(*):appContext
java.awt.Component.initIDs(*):background
java.awt.Component.initIDs(*):cursor
java.awt.Component.initIDs(*):enabled
java.awt.Component.initIDs(*):focusable
java.awt.Component.initIDs(*):foreground
java.awt.Component.initIDs(*):getFont_NoClientCode()
java.awt.Component.initIDs(*):getLocationOnScreen_NoTreeLock()
java.awt.Component.initIDs(*):getParent_NoClientCode()
java.awt.Component.initIDs(*):getToolkitImpl()
java.awt.Component.initIDs(*):graphicsConfig
java.awt.Component.initIDs(*):height
java.awt.Component.initIDs(*):isEnabledImpl()
java.awt.Component.initIDs(*):isPacked
java.awt.Component.initIDs(*):java.awt.event.KeyEvent.isProxyActive
java.awt.Component.initIDs(*):name
java.awt.Component.initIDs(*):parent
java.awt.Component.initIDs(*):peer
java.awt.Component.initIDs(*):privateKey
java.awt.Component.initIDs(*):resetGC()
java.awt.Component.initIDs(*):sun.awt.windows.WComponentPeer.getGraphicsConfiguration()
java.awt.Component.initIDs(*):sun.awt.windows.WComponentPeer.hwnd
java.awt.Component.initIDs(*):sun.awt.windows.WComponentPeer.replaceSurfaceData()
java.awt.Component.initIDs(*):sun.awt.windows.WComponentPeer.replaceSurfaceDataLater()
java.awt.Component.initIDs(*):sun.awt.windows.WComponentPeer.winGraphicsConfig
java.awt.Component.initIDs(*):visible
java.awt.Component.initIDs(*):width
java.awt.Component.initIDs(*):x
java.awt.Component.initIDs(*):y
java.awt.Container.initIDs(*):component
java.awt.Container.initIDs(*):findComponentAt(IIZ)
java.awt.Container.initIDs(*):findComponentAt(IIZZ)
java.awt.Container.initIDs(*):getComponents_NoClientCode()
java.awt.Container.initIDs(*):layoutMgr
java.awt.Container.initIDs(*):ncomponents
java.awt.Cursor.initIDs(*):java.awt.Point.x
java.awt.Cursor.initIDs(*):java.awt.Point.y
java.awt.Cursor.initIDs(*):pData
java.awt.Cursor.initIDs(*):setPData(J)
java.awt.Cursor.initIDs(*):sun.awt.GlobalCursorManager.updateCursorLater(Ljava/awt/Component;)
java.awt.Cursor.initIDs(*):sun.awt.motif.MGlobalCursorManager.nativeUpdateCursor(Ljava/awt/Component;)
java.awt.Cursor.initIDs(*):type
java.awt.Dialog.initIDs(*):modal
java.awt.Dialog.initIDs(*):resizable
java.awt.Dialog.initIDs(*):sun.awt.windows.WWindowPeer.getWindowHandles()
java.awt.Dialog.initIDs(*):title
java.awt.Dialog.initIDs(*):undecorated
java.awt.Dimension.initIDs(*):height
java.awt.Dimension.initIDs(*):width
java.awt.Event.initIDs(*):consumed
java.awt.Event.initIDs(*):data
java.awt.Event.initIDs(*):id
java.awt.Event.initIDs(*):target
java.awt.Event.initIDs(*):x
java.awt.Event.initIDs(*):y
java.awt.FileDialog.initIDs(*):file
java.awt.FileDialog.initIDs(*):mode
java.awt.Font.initIDs(*):getFamily_NoClientCode()
java.awt.Font.initIDs(*):getFont(Ljava/lang/String;)
java.awt.Font.initIDs(*):getPeer()
java.awt.Font.initIDs(*):getPeer_NoClientCode()
java.awt.Font.initIDs(*):name
java.awt.Font.initIDs(*):pData
java.awt.Font.initIDs(*):size
java.awt.Font.initIDs(*):style
java.awt.FontMetrics.initIDs(*):font
java.awt.FontMetrics.initIDs(*):getHeight()
java.awt.Frame.initIDs(*):resizable
java.awt.Frame.initIDs(*):state
java.awt.Frame.initIDs(*):undecorated
java.awt.Insets.initIDs(*):bottom
java.awt.Insets.initIDs(*):left
java.awt.Insets.initIDs(*):right
java.awt.Insets.initIDs(*):top
java.awt.KeyboardFocusManager._clearGlobalFocusOwner(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZLjava/awt/Component;)
java.awt.KeyboardFocusManager._clearGlobalFocusOwner(*):sun.awt.motif.MComponentPeer.postEvent(Ljava/awt/AWTEvent;)
java.awt.KeyboardFocusManager.initIDs(*):heavyweightButtonDown(Ljava/awt/Component;J)
java.awt.KeyboardFocusManager.initIDs(*):heavyweightButtonDown(Ljava/awt/Component;JZ)
java.awt.KeyboardFocusManager.initIDs(*):java.awt.event.KeyEvent.isProxyActive
java.awt.KeyboardFocusManager.initIDs(*):markClearGlobalFocusOwner()
java.awt.KeyboardFocusManager.initIDs(*):processSynchronousLightweightTransfer(Ljava/awt/Component;Ljava/awt/Component;ZZJ)
java.awt.KeyboardFocusManager.initIDs(*):removeLastFocusRequest(Ljava/awt/Component;)
java.awt.KeyboardFocusManager.initIDs(*):shouldNativelyFocusHeavyweight(Ljava/awt/Component;Ljava/awt/Component;ZZJ)
java.awt.KeyboardFocusManager.initIDs(*):shouldNativelyFocusHeavyweight(Ljava/awt/Component;Ljava/awt/Component;ZZJLsun/awt/CausedFocusEvent$Cause;)
java.awt.Label.initIDs(*):alignment
java.awt.Label.initIDs(*):text
java.awt.Menu.initIDs(*):countItemsImpl()
java.awt.Menu.initIDs(*):getItemImpl(I)
java.awt.Menu.initIDs(*):isHelpMenu
java.awt.Menu.initIDs(*):tearOff
java.awt.MenuBar.initIDs(*):getMenuCountImpl()
java.awt.MenuBar.initIDs(*):getMenuImpl(I)
java.awt.MenuComponent.initIDs(*):appContext
java.awt.MenuComponent.initIDs(*):font
java.awt.MenuComponent.initIDs(*):getFont_NoClientCode()
java.awt.MenuComponent.initIDs(*):getParent_NoClientCode()
java.awt.MenuComponent.initIDs(*):privateKey
java.awt.MenuItem.initIDs(*):enabled
java.awt.MenuItem.initIDs(*):label
java.awt.MenuItem.initIDs(*):shortcut
java.awt.Rectangle.initIDs(*):height
java.awt.Rectangle.initIDs(*):width
java.awt.Rectangle.initIDs(*):x
java.awt.Rectangle.initIDs(*):y
java.awt.ScrollPane.initIDs(*):hAdjustable
java.awt.ScrollPane.initIDs(*):scrollbarDisplayPolicy
java.awt.ScrollPane.initIDs(*):vAdjustable
java.awt.ScrollPaneAdjustable.initIDs(*):blockIncrement
java.awt.ScrollPaneAdjustable.initIDs(*):unitIncrement
java.awt.Scrollbar.initIDs(*):lineIncrement
java.awt.Scrollbar.initIDs(*):maximum
java.awt.Scrollbar.initIDs(*):minimum
java.awt.Scrollbar.initIDs(*):orientation
java.awt.Scrollbar.initIDs(*):pageIncrement
java.awt.Scrollbar.initIDs(*):value
java.awt.Scrollbar.initIDs(*):visibleAmount
java.awt.TextArea.initIDs(*):scrollbarVisibility
java.awt.TextField.initIDs(*):echoChar
java.awt.Toolkit.initIDs(*):getDefaultToolkit()
java.awt.Toolkit.initIDs(*):getFontMetrics(Ljava/awt/Font;)
java.awt.Toolkit.initIDs(*):java.awt.Insets.<init>(IIII)
java.awt.Window.initIDs(*):focusableWindowState
java.awt.Window.initIDs(*):getWarningString()
java.awt.Window.initIDs(*):isFocusableWindow()
java.awt.Window.initIDs(*):locationByPlatform
java.awt.Window.initIDs(*):resetGC()
java.awt.Window.initIDs(*):warningString

java.awt.event.InputEvent.initIDs(*):modifiers
java.awt.event.KeyEvent.initIDs(*):keyChar
java.awt.event.KeyEvent.initIDs(*):keyCode
java.awt.event.KeyEvent.initIDs(*):primaryLevelUnicode
java.awt.event.KeyEvent.initIDs(*):rawCode
java.awt.event.KeyEvent.initIDs(*):scancode
java.awt.event.MouseEvent.initIDs(*):button
java.awt.event.MouseEvent.initIDs(*):x
java.awt.event.MouseEvent.initIDs(*):y

java.awt.image.BufferedImage.initIDs(*):colorModel
java.awt.image.BufferedImage.initIDs(*):getRGB(IIII[III)
java.awt.image.BufferedImage.initIDs(*):imageType
java.awt.image.BufferedImage.initIDs(*):raster
java.awt.image.BufferedImage.initIDs(*):setRGB(IIII[III)
java.awt.image.ColorModel.initIDs(*):colorSpace
java.awt.image.ColorModel.initIDs(*):colorSpaceType
java.awt.image.ColorModel.initIDs(*):getRGB(Ljava/lang/Object;)
java.awt.image.ColorModel.initIDs(*):getRGBdefault()
java.awt.image.ColorModel.initIDs(*):isAlphaPremultiplied
java.awt.image.ColorModel.initIDs(*):is_sRGB
java.awt.image.ColorModel.initIDs(*):nBits
java.awt.image.ColorModel.initIDs(*):numComponents
java.awt.image.ColorModel.initIDs(*):pData
java.awt.image.ColorModel.initIDs(*):supportsAlpha
java.awt.image.ColorModel.initIDs(*):transparency
java.awt.image.ComponentSampleModel.initIDs(*):bandOffsets
java.awt.image.ComponentSampleModel.initIDs(*):pixelStride
java.awt.image.ComponentSampleModel.initIDs(*):scanlineStride
java.awt.image.DataBufferInt.initIDs(*):pData
java.awt.image.IndexColorModel.initIDs(*):map_size
java.awt.image.IndexColorModel.initIDs(*):rgb
java.awt.image.IndexColorModel.initIDs(*):transparent_index
java.awt.image.Kernel.initIDs(*):data
java.awt.image.Kernel.initIDs(*):height
java.awt.image.Kernel.initIDs(*):width
java.awt.image.Raster.initIDs(*):dataBuffer
java.awt.image.Raster.initIDs(*):getDataElements(IIIILjava/lang/Object;)
java.awt.image.Raster.initIDs(*):height
java.awt.image.Raster.initIDs(*):minX
java.awt.image.Raster.initIDs(*):minY
java.awt.image.Raster.initIDs(*):numBands
java.awt.image.Raster.initIDs(*):numDataElements
java.awt.image.Raster.initIDs(*):sampleModel
java.awt.image.Raster.initIDs(*):sampleModelTranslateX
java.awt.image.Raster.initIDs(*):sampleModelTranslateY
java.awt.image.Raster.initIDs(*):width
java.awt.image.SampleModel.initIDs(*):getPixels(IIII[ILjava/awt/image/DataBuffer;)
java.awt.image.SampleModel.initIDs(*):height
java.awt.image.SampleModel.initIDs(*):setPixels(IIII[ILjava/awt/image/DataBuffer;)
java.awt.image.SampleModel.initIDs(*):width
java.awt.image.SinglePixelPackedSampleModel.initIDs(*):bitMasks
java.awt.image.SinglePixelPackedSampleModel.initIDs(*):bitOffsets
java.awt.image.SinglePixelPackedSampleModel.initIDs(*):bitSizes
java.awt.image.SinglePixelPackedSampleModel.initIDs(*):maxBitSize

sun.awt.EmbeddedFrame.setPeer(*):java.awt.Component.peer
sun.awt.FontDescriptor.initIDs(*):fontCharset
sun.awt.FontDescriptor.initIDs(*):nativeName
sun.awt.FontDescriptor.initIDs(*):useUnicode
sun.awt.PlatformFont.initIDs(*):componentFonts
sun.awt.PlatformFont.initIDs(*):fontConfig
sun.awt.PlatformFont.initIDs(*):makeConvertedMultiFontChars([CII)
sun.awt.PlatformFont.initIDs(*):makeConvertedMultiFontString(Ljava/lang/String;)
sun.awt.PlatformFont.initIDs(*):props
sun.awt.SunToolkit.getPrivateKey(*):java.awt.MenuComponent.<init>()
sun.awt.SunToolkit.setLWRequestStatus(*):java.awt.Window.syncLWRequests
sun.awt.SunToolkit.setZOrder(*):java.awt.Container.setZOrder(Ljava/awt/Component;I)
sun.awt.SunToolkit.wakeupEventQueue(*):java.awt.EventQueue.wakeup(Z)
sun.awt.UNIXToolkit.load_stock_icon(*):loadIconCallback([BIIIIIZ)
sun.awt.Win32GraphicsConfig.getBounds(*):java.awt.Rectangle.<init>(IIII)
sun.awt.Win32GraphicsConfig.initIDs(*):screen
sun.awt.Win32GraphicsConfig.initIDs(*):visual
sun.awt.Win32GraphicsConfig.makeColorModel(*):java.awt.color.ColorSpace.getInstance(I)
sun.awt.Win32GraphicsConfig.makeColorModel(*):java.awt.image.ComponentColorModel.<init>(Ljava/awt/color/ColorSpace;[IZZII)
sun.awt.Win32GraphicsConfig.makeColorModel(*):java.awt.image.DirectColorModel.<init>(IIII)
sun.awt.Win32GraphicsConfig.makeColorModel(*):java.awt.image.DirectColorModel.<init>(IIIII)
sun.awt.Win32GraphicsConfig.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[IIILjava/math/BigInteger;)
sun.awt.Win32GraphicsConfig.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[IIZII)
sun.awt.Win32GraphicsConfig.makeColorModel(*):java.math.BigInteger.<init>([B)
sun.awt.Win32GraphicsConfig.makeColorModel(*):sun.awt.Win32ColorModel24.<init>()
sun.awt.Win32GraphicsDevice.enumDisplayModes(*):java.awt.DisplayMode.<init>(IIII)
sun.awt.Win32GraphicsDevice.enumDisplayModes(*):java.util.ArrayList.add(Ljava/lang/Object;)
sun.awt.Win32GraphicsDevice.getCurrentDisplayMode(*):java.awt.DisplayMode.<init>(IIII)
sun.awt.Win32GraphicsDevice.initIDs(*):dynamicColorModel
sun.awt.Win32GraphicsDevice.initIDs(*):java.awt.image.IndexColorModel.lookupcache
sun.awt.Win32GraphicsDevice.initIDs(*):java.awt.image.IndexColorModel.rgb
sun.awt.Win32GraphicsDevice.initIDs(*):offscreenAccelerationEnabled
sun.awt.Win32GraphicsDevice.initIDs(*):screen
sun.awt.Win32GraphicsDevice.initIDs(*):sun.awt.windows.WToolkit.paletteChanged()
sun.awt.Win32GraphicsDevice.makeColorModel(*):java.awt.color.ColorSpace.getInstance(I)
sun.awt.Win32GraphicsDevice.makeColorModel(*):java.awt.image.ComponentColorModel.<init>(Ljava/awt/color/ColorSpace;[IZZII)
sun.awt.Win32GraphicsDevice.makeColorModel(*):java.awt.image.DirectColorModel.<init>(IIII)
sun.awt.Win32GraphicsDevice.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[IIILjava/math/BigInteger;)
sun.awt.Win32GraphicsDevice.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[IIZII)
sun.awt.Win32GraphicsDevice.makeColorModel(*):java.math.BigInteger.<init>([B)
sun.awt.Win32GraphicsDevice.makeColorModel(*):sun.awt.Win32ColorModel24.<init>()
sun.awt.Win32GraphicsDevice.resetComponentGC(*):java.awt.Component.resetGC()
sun.awt.Win32GraphicsDevice.resetPeerGC(*):java.awt.ComponentPeer.resetLocalGC()
sun.awt.Win32GraphicsEnvironment.initDisplay(*):dwmCompositionChanged(Z)
sun.awt.WindowsFlags.initNativeFlags(*):accelReset
sun.awt.WindowsFlags.initNativeFlags(*):checkRegistry
sun.awt.WindowsFlags.initNativeFlags(*):d3dEnabled
sun.awt.WindowsFlags.initNativeFlags(*):d3dSet
sun.awt.WindowsFlags.initNativeFlags(*):ddEnabled
sun.awt.WindowsFlags.initNativeFlags(*):ddLockEnabled
sun.awt.WindowsFlags.initNativeFlags(*):ddLockSet
sun.awt.WindowsFlags.initNativeFlags(*):ddSet
sun.awt.WindowsFlags.initNativeFlags(*):ddVramForced
sun.awt.WindowsFlags.initNativeFlags(*):disableRegistry
sun.awt.WindowsFlags.initNativeFlags(*):javaVersion
sun.awt.WindowsFlags.initNativeFlags(*):offscreenSharingEnabled
sun.awt.WindowsFlags.initNativeFlags(*):setHighDPIAware
sun.awt.X11GraphicsConfig.getBounds(*):java.awt.Rectangle.<init>(IIII)
sun.awt.X11GraphicsConfig.initIDs(*):aData
sun.awt.X11GraphicsConfig.initIDs(*):bitsPerPixel
sun.awt.X11GraphicsConfig.initIDs(*):screen
sun.awt.X11GraphicsConfig.makeColorModel(*):java.awt.SystemColor.systemColors
sun.awt.X11GraphicsConfig.makeColorModel(*):java.awt.color.ColorSpace.getInstance(I)
sun.awt.X11GraphicsConfig.makeColorModel(*):java.awt.image.ComponentColorModel.<init>(Ljava/awt/color/ColorSpace;[IZZII)
sun.awt.X11GraphicsConfig.makeColorModel(*):java.awt.image.DirectColorModel.<init>(IIIII)
sun.awt.X11GraphicsConfig.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[B[B[B)
sun.awt.X11GraphicsConfig.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[B[B[B[B)
sun.awt.X11GraphicsConfig.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[IIILjava/math/BigInteger;)
sun.awt.X11GraphicsConfig.makeColorModel(*):java.math.BigInteger.<init>([B)
sun.awt.X11GraphicsConfig.pGetBounds(*):java.awt.Rectangle.<init>(IIII)
sun.awt.X11GraphicsDevice.getDoubleBufferVisuals(*):addDoubleBufferVisual(I)
sun.awt.X11GraphicsDevice.initIDs(*):screen
sun.awt.X11GraphicsEnvironment.getXineramaCenterPoint(*):java.awt.Point.<init>(II)
sun.awt.X11GraphicsEnvironment.initDisplay(*):sun.awt.SunToolkit.awtLock()
sun.awt.X11GraphicsEnvironment.initDisplay(*):sun.awt.SunToolkit.awtLockNotify()
sun.awt.X11GraphicsEnvironment.initDisplay(*):sun.awt.SunToolkit.awtLockNotifyAll()
sun.awt.X11GraphicsEnvironment.initDisplay(*):sun.awt.SunToolkit.awtLockWait(J)
sun.awt.X11GraphicsEnvironment.initDisplay(*):sun.awt.SunToolkit.awtUnlock()
sun.awt.X11GraphicsEnvironment.initDisplay(*):sun.awt.font.NativeFontWrapper.usePlatformFontMetrics()
sun.awt.X11InputMethod.initIDs(*):pData
sun.awt.X11InputMethod.isCompositionEnabledNative(*):java.lang.UnsupportedOperationException.<init>(Ljava/lang/String;)
sun.awt.X11SurfaceData.initSurface(*):java.awt.SystemColor.systemColors

sun.awt.color.CMM.cmmColorConvert(*):ID
sun.awt.color.CMM.cmmColorConvert(*):sun.awt.color.CMMImageLayout.DataOffsets
sun.awt.color.CMM.cmmColorConvert(*):sun.awt.color.CMMImageLayout.NumChannels
sun.awt.color.CMM.cmmColorConvert(*):sun.awt.color.CMMImageLayout.NumCols
sun.awt.color.CMM.cmmColorConvert(*):sun.awt.color.CMMImageLayout.NumRows
sun.awt.color.CMM.cmmColorConvert(*):sun.awt.color.CMMImageLayout.OffsetColumn
sun.awt.color.CMM.cmmColorConvert(*):sun.awt.color.CMMImageLayout.OffsetRow
sun.awt.color.CMM.cmmColorConvert(*):sun.awt.color.CMMImageLayout.Type
sun.awt.color.CMM.cmmColorConvert(*):sun.awt.color.CMMImageLayout.chanData
sun.awt.color.CMM.cmmColorConvert(*):sun.awt.color.CMMImageLayout.sampleInfo
sun.awt.color.CMM.cmmCombineTransforms(*):ID
sun.awt.color.CMM.cmmCombineTransforms(*):sun.awt.color.ICC_Transform.ID
sun.awt.color.CMM.cmmCullICC_Profiles(*):ID
sun.awt.color.CMM.cmmFindICC_Profiles(*):ID
sun.awt.color.CMM.cmmFreeProfile(*):ID
sun.awt.color.CMM.cmmFreeTransform(*):ID
sun.awt.color.CMM.cmmGetNumComponents(*):ID
sun.awt.color.CMM.cmmGetProfileData(*):ID
sun.awt.color.CMM.cmmGetProfileSize(*):ID
sun.awt.color.CMM.cmmGetTagData(*):ID
sun.awt.color.CMM.cmmGetTagSize(*):ID
sun.awt.color.CMM.cmmGetTransform(*):ID
sun.awt.color.CMM.cmmGetTransform(*):java.awt.color.ICC_Profile.ID
sun.awt.color.CMM.cmmGetTransform(*):sun.awt.color.CMMImageLayout.DataOffsets
sun.awt.color.CMM.cmmGetTransform(*):sun.awt.color.CMMImageLayout.NumChannels
sun.awt.color.CMM.cmmGetTransform(*):sun.awt.color.CMMImageLayout.NumCols
sun.awt.color.CMM.cmmGetTransform(*):sun.awt.color.CMMImageLayout.NumRows
sun.awt.color.CMM.cmmGetTransform(*):sun.awt.color.CMMImageLayout.OffsetColumn
sun.awt.color.CMM.cmmGetTransform(*):sun.awt.color.CMMImageLayout.OffsetRow
sun.awt.color.CMM.cmmGetTransform(*):sun.awt.color.CMMImageLayout.Type
sun.awt.color.CMM.cmmGetTransform(*):sun.awt.color.CMMImageLayout.chanData
sun.awt.color.CMM.cmmGetTransform(*):sun.awt.color.CMMImageLayout.sampleInfo
sun.awt.color.CMM.cmmGetTransform(*):sun.awt.color.ICC_Transform.ID
sun.awt.color.CMM.cmmInit(*):ID
sun.awt.color.CMM.cmmLoadProfile(*):ID
sun.awt.color.CMM.cmmSetTagData(*):ID
sun.awt.color.CMM.cmmTerminate(*):ID

sun.awt.datatransfer.ClipboardTransferable.getClipboardData(*):sun.awt.datatransfer.DataTransferer.concatData(Ljava/lang/Object;Ljava/lang/Object;)
sun.awt.datatransfer.ClipboardTransferable.getClipboardData(*):sun.awt.datatransfer.DataTransferer.convertData(Ljava/lang/Object;Ljava/awt/datatransfer/Transferable;JLjava/util/Map;Z)
sun.awt.datatransfer.ClipboardTransferable.getClipboardData(*):sun.awt.datatransfer.DataTransferer.getInstance()
sun.awt.datatransfer.ClipboardTransferable.getClipboardData(*):sun.awt.datatransfer.DataTransferer.processDataConversionRequests()
sun.awt.datatransfer.ClipboardTransferable.getClipboardFormats(*):sun.awt.datatransfer.DataTransferer.getInstance()
sun.awt.datatransfer.ClipboardTransferable.getClipboardFormats(*):sun.awt.datatransfer.DataTransferer.processDataConversionRequests()

sun.awt.font.GlyphList.initIDs(*):pData
sun.awt.font.GlyphList.initIDs(*):sun.awt.font.ShapingException.<init>(Ljava/lang/String;)
sun.awt.font.GlyphList.setupStringData(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.canDisplay(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.canDisplay(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.canDisplay(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.canDisplay(*):sun.awt.motif.CharToByteX11Dingbats.<init>()
sun.awt.font.NativeFontWrapper.canDisplay(*):sun.awt.motif.CharToByteX11Dingbats.convert([CII[BII)
sun.awt.font.NativeFontWrapper.canDisplay(*):sun.io.CharToByteConverter.setSubstitutionBytes([B)
sun.awt.font.NativeFontWrapper.charsToGlyphs(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.charsToGlyphs(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.charsToGlyphs(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.doesGlyphShaping(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.doesGlyphShaping(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.doesGlyphShaping(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.drawStringOutline(*):java.awt.geom.GeneralPath.closePath()
sun.awt.font.NativeFontWrapper.drawStringOutline(*):java.awt.geom.GeneralPath.curveTo(FFFFFF)
sun.awt.font.NativeFontWrapper.drawStringOutline(*):java.awt.geom.GeneralPath.lineTo(FF)
sun.awt.font.NativeFontWrapper.drawStringOutline(*):java.awt.geom.GeneralPath.moveTo(FF)
sun.awt.font.NativeFontWrapper.drawStringOutline(*):java.awt.geom.GeneralPath.quadTo(FFFF)
sun.awt.font.NativeFontWrapper.drawStringOutline(*):sun.awt.font.ShapingException.<init>(Ljava/lang/String;)
sun.awt.font.NativeFontWrapper.fontCanRotate(*):java.awt.Font.canRotate
sun.awt.font.NativeFontWrapper.fontCanRotate(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.fontCanRotate(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.fontCanRotate(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.fontCanRotateGlyphVector(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.fontCanRotateGlyphVector(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.fontCanRotateGlyphVector(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.fontCanRotateText(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.fontCanRotateText(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.fontCanRotateText(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.getCharMetrics(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getCharMetrics(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getCharMetrics(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.getFamilyName(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getFamilyName(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharBig5.<init>()
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharBig5.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharBig5.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharDoubleByte.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharEUC_KR.<init>()
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharEUC_KR.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharEUC_KR.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharGBK.<init>()
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharGBK.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharGBK.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharJohab.<init>()
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharJohab.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharJohab.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharMS950.<init>()
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharMS950.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharMS950.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharSJIS.<init>()
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharSJIS.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFamilyNameByIndex(*):sun.io.ByteToCharSJIS.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getFontMetrics(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getFontMetrics(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharBig5.<init>()
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharBig5.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharBig5.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharDoubleByte.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharEUC_KR.<init>()
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharEUC_KR.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharEUC_KR.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharGBK.<init>()
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharGBK.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharGBK.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharJohab.<init>()
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharJohab.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharJohab.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharMS950.<init>()
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharMS950.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharMS950.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharSJIS.<init>()
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharSJIS.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFontMetrics(*):sun.io.ByteToCharSJIS.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFontPath(*):sun.awt.X11GraphicsEnvironment.isDisplayLocal()
sun.awt.font.NativeFontWrapper.getFullName(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getFullName(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getFullName(*):sun.io.ByteToCharDoubleByte.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullName(*):sun.io.ByteToCharEUC_KR.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharBig5.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharBig5.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharBig5.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharDoubleByte.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharEUC_KR.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharEUC_KR.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharEUC_KR.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharGBK.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharGBK.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharGBK.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharJohab.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharJohab.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharJohab.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharMS950.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharMS950.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharMS950.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharSJIS.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharSJIS.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByFileName(*):sun.io.ByteToCharSJIS.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharBig5.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharBig5.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharBig5.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharEUC_KR.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharEUC_KR.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharEUC_KR.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharGBK.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharGBK.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharGBK.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharJohab.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharJohab.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharJohab.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharMS950.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharMS950.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharMS950.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharSJIS.<init>()
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharSJIS.convert([BII[CII)
sun.awt.font.NativeFontWrapper.getFullNameByIndex(*):sun.io.ByteToCharSJIS.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.getGlyphInfo(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getGlyphInfo(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getGlyphInfo(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.getGlyphLogicalBounds(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getGlyphLogicalBounds(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getGlyphLogicalBounds(*):java.awt.geom.GeneralPath.<init>(I[BI[FI)
sun.awt.font.NativeFontWrapper.getGlyphMetrics(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getGlyphMetrics(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getGlyphMetrics(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.getGlyphMetrics(*):java.awt.font.GlyphMetrics.advance
sun.awt.font.NativeFontWrapper.getGlyphMetrics(*):java.awt.font.GlyphMetrics.bounds
sun.awt.font.NativeFontWrapper.getGlyphMetrics(*):java.awt.geom.Rectangle2D$Float.height
sun.awt.font.NativeFontWrapper.getGlyphMetrics(*):java.awt.geom.Rectangle2D$Float.width
sun.awt.font.NativeFontWrapper.getGlyphMetrics(*):java.awt.geom.Rectangle2D$Float.x
sun.awt.font.NativeFontWrapper.getGlyphMetrics(*):java.awt.geom.Rectangle2D$Float.y
sun.awt.font.NativeFontWrapper.getGlyphOutline(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getGlyphOutline(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getGlyphOutline(*):java.awt.geom.GeneralPath.<init>(I[BI[FI)
sun.awt.font.NativeFontWrapper.getGlyphOutline(*):sun.awt.font.ShapingException.<init>(Ljava/lang/String;)
sun.awt.font.NativeFontWrapper.getGlyphOutline(*):sun.awt.font.StandardGlyphVector.charIndices
sun.awt.font.NativeFontWrapper.getGlyphOutline(*):sun.awt.font.StandardGlyphVector.glyphs
sun.awt.font.NativeFontWrapper.getGlyphOutline(*):sun.awt.font.StandardGlyphVector.positions
sun.awt.font.NativeFontWrapper.getGlyphOutline(*):sun.awt.font.StandardGlyphVector.transforms
sun.awt.font.NativeFontWrapper.getGlyphOutline(*):sun.awt.font.StandardGlyphVector.txIndices
sun.awt.font.NativeFontWrapper.getGlyphPixelBounds(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getGlyphPixelBounds(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getGlyphPixelBounds(*):java.awt.Rectangle.<init>(IIII)
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):java.awt.geom.GeneralPath.<init>(I[BI[FI)
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):java.awt.geom.GeneralPath.closePath()
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):java.awt.geom.GeneralPath.curveTo(FFFFFF)
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):java.awt.geom.GeneralPath.lineTo(FF)
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):java.awt.geom.GeneralPath.moveTo(FF)
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):java.awt.geom.GeneralPath.quadTo(FFFF)
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):sun.awt.font.ShapingException.<init>(Ljava/lang/String;)
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):sun.awt.font.StandardGlyphVector.charIndices
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):sun.awt.font.StandardGlyphVector.glyphs
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):sun.awt.font.StandardGlyphVector.positions
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):sun.awt.font.StandardGlyphVector.transforms
sun.awt.font.NativeFontWrapper.getGlyphVectorOutline(*):sun.awt.font.StandardGlyphVector.txIndices
sun.awt.font.NativeFontWrapper.getGlyphVisualBounds(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getGlyphVisualBounds(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getGlyphVisualBounds(*):java.awt.geom.Rectangle2D$Float.<init>(FFFF)
sun.awt.font.NativeFontWrapper.getItalicAngle(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getItalicAngle(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getItalicAngle(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.getMissingGlyphCode(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getMissingGlyphCode(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getMissingGlyphCode(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.getNumGlyphs(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getNumGlyphs(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getNumGlyphs(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.getPixelBounds(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getPixelBounds(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getPixelBounds(*):java.awt.Rectangle.<init>(IIII)
sun.awt.font.NativeFontWrapper.getPostscriptName(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getPostscriptName(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getVisualBounds(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.getVisualBounds(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.getVisualBounds(*):java.awt.geom.Rectangle2D$Float.<init>(FFFF)
sun.awt.font.NativeFontWrapper.initializeFont(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.initializeFont(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharBig5.<init>()
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharBig5.convert([BII[CII)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharBig5.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharDoubleByte.convert([BII[CII)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharEUC_KR.<init>()
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharEUC_KR.convert([BII[CII)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharEUC_KR.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharGBK.<init>()
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharGBK.convert([BII[CII)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharGBK.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharJohab.<init>()
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharJohab.convert([BII[CII)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharJohab.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharMS950.<init>()
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharMS950.convert([BII[CII)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharMS950.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharSJIS.<init>()
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharSJIS.convert([BII[CII)
sun.awt.font.NativeFontWrapper.initializeFont(*):sun.io.ByteToCharSJIS.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.isStyleSupported(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.isStyleSupported(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.isStyleSupported(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.layoutGlyphVector(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.layoutGlyphVector(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.layoutGlyphVector(*):sun.awt.font.StandardGlyphVector.charIndices
sun.awt.font.NativeFontWrapper.layoutGlyphVector(*):sun.awt.font.StandardGlyphVector.glyphs
sun.awt.font.NativeFontWrapper.layoutGlyphVector(*):sun.awt.font.StandardGlyphVector.positions
sun.awt.font.NativeFontWrapper.layoutGlyphVector(*):sun.awt.font.StandardGlyphVector.transforms
sun.awt.font.NativeFontWrapper.layoutGlyphVector(*):sun.awt.font.StandardGlyphVector.txIndices
sun.awt.font.NativeFontWrapper.populateAndLayoutGlyphVector(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.populateAndLayoutGlyphVector(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.populateAndLayoutGlyphVector(*):sun.awt.font.StandardGlyphVector.charIndices
sun.awt.font.NativeFontWrapper.populateAndLayoutGlyphVector(*):sun.awt.font.StandardGlyphVector.glyphs
sun.awt.font.NativeFontWrapper.populateAndLayoutGlyphVector(*):sun.awt.font.StandardGlyphVector.positions
sun.awt.font.NativeFontWrapper.populateAndLayoutGlyphVector(*):sun.awt.font.StandardGlyphVector.transforms
sun.awt.font.NativeFontWrapper.populateAndLayoutGlyphVector(*):sun.awt.font.StandardGlyphVector.txIndices
sun.awt.font.NativeFontWrapper.populateAndLayoutGlyphVector(*):sun.awt.motif.CharToByteX11Dingbats.<init>()
sun.awt.font.NativeFontWrapper.populateAndLayoutGlyphVector(*):sun.awt.motif.CharToByteX11Dingbats.convert([CII[BII)
sun.awt.font.NativeFontWrapper.populateAndLayoutGlyphVector(*):sun.io.CharToByteConverter.setSubstitutionBytes([B)
sun.awt.font.NativeFontWrapper.populateGlyphVector(*):java.awt.Font.pNativeFont
sun.awt.font.NativeFontWrapper.populateGlyphVector(*):java.awt.Font.style
sun.awt.font.NativeFontWrapper.populateGlyphVector(*):sun.awt.font.StandardGlyphVector.charIndices
sun.awt.font.NativeFontWrapper.populateGlyphVector(*):sun.awt.font.StandardGlyphVector.glyphs
sun.awt.font.NativeFontWrapper.populateGlyphVector(*):sun.awt.font.StandardGlyphVector.positions
sun.awt.font.NativeFontWrapper.populateGlyphVector(*):sun.awt.font.StandardGlyphVector.transforms
sun.awt.font.NativeFontWrapper.populateGlyphVector(*):sun.awt.font.StandardGlyphVector.txIndices
sun.awt.font.NativeFontWrapper.populateGlyphVector(*):sun.awt.motif.CharToByteX11Dingbats.<init>()
sun.awt.font.NativeFontWrapper.populateGlyphVector(*):sun.awt.motif.CharToByteX11Dingbats.convert([CII[BII)
sun.awt.font.NativeFontWrapper.populateGlyphVector(*):sun.io.CharToByteConverter.setSubstitutionBytes([B)
sun.awt.font.NativeFontWrapper.registerFonts(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.font.NativeFontWrapper.registerFonts(*):java.lang.String.<init>([B)
sun.awt.font.NativeFontWrapper.registerFonts(*):java.lang.String.getBytes()
sun.awt.font.NativeFontWrapper.registerFonts(*):java.lang.System.getProperty(Ljava/lang/String;)
sun.awt.font.NativeFontWrapper.registerFonts(*):java.util.Vector.elementAt(I)
sun.awt.font.NativeFontWrapper.registerFonts(*):java.util.Vector.size()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.awt.CharToByteSymbol.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.awt.CharToByteSymbol.convert([CII[BII)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.awt.motif.CharToByteX11Dingbats.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.awt.motif.CharToByteX11Dingbats.convert([CII[BII)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharASCII.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharBig5.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharBig5.convert([BII[CII)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharBig5.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharConverter.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharCp1252.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharDoubleByte.convert([BII[CII)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharEUC_KR.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharEUC_KR.convert([BII[CII)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharEUC_KR.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharGBK.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharGBK.convert([BII[CII)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharGBK.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharJohab.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharJohab.convert([BII[CII)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharJohab.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharMS950.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharMS950.convert([BII[CII)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharMS950.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharSJIS.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharSJIS.convert([BII[CII)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharSJIS.setSubstitutionChars([C)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.ByteToCharUTF8.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteASCII.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteConverter.nextCharIndex()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteConverter.setSubstitutionBytes([B)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteCp1252.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteDoubleByte.convert([CII[BII)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteISO8859_13.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteISO8859_15_FDIS.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteISO8859_2.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteISO8859_4.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteISO8859_5.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteISO8859_6.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteISO8859_7.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteISO8859_8.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteISO8859_9.<init>()
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteSingleByte.convert([CII[BII)
sun.awt.font.NativeFontWrapper.registerFonts(*):sun.io.CharToByteUTF8.<init>()
sun.awt.font.NativeFontWrapper.setNativeFontPath(*):sun.awt.X11GraphicsEnvironment.isDisplayLocal()

sun.awt.image.BufImgSurfaceData.initIDs(*):java.awt.image.BufferedImage.sData
sun.awt.image.BufImgSurfaceData.initIDs(*):java.awt.image.ColorModel.pData
sun.awt.image.BufImgSurfaceData.initIDs(*):java.awt.image.IndexColorModel.allgrayopaque
sun.awt.image.BufImgSurfaceData.initIDs(*):java.awt.image.IndexColorModel.map_size
sun.awt.image.BufImgSurfaceData.initIDs(*):java.awt.image.IndexColorModel.rgb
sun.awt.image.ByteComponentRaster.initIDs(*):bandOffset
sun.awt.image.ByteComponentRaster.initIDs(*):data
sun.awt.image.ByteComponentRaster.initIDs(*):dataOffsets
sun.awt.image.ByteComponentRaster.initIDs(*):pixelStride
sun.awt.image.ByteComponentRaster.initIDs(*):scanlineStride
sun.awt.image.ByteComponentRaster.initIDs(*):type
sun.awt.image.BytePackedRaster.initIDs(*):data
sun.awt.image.BytePackedRaster.initIDs(*):dataBitOffset
sun.awt.image.BytePackedRaster.initIDs(*):pixelBitStride
sun.awt.image.BytePackedRaster.initIDs(*):scanlineStride
sun.awt.image.BytePackedRaster.initIDs(*):type
sun.awt.image.GifImageDecoder.initIDs(*):outCode
sun.awt.image.GifImageDecoder.initIDs(*):prefix
sun.awt.image.GifImageDecoder.initIDs(*):readBytes([BII)
sun.awt.image.GifImageDecoder.initIDs(*):sendPixels(IIII[BLjava/awt/image/ColorModel;)
sun.awt.image.GifImageDecoder.initIDs(*):suffix
sun.awt.image.ImageRepresentation.imageDraw(*):java.lang.Object.notify()
sun.awt.image.ImageRepresentation.imageStretch(*):java.lang.Object.notify()
sun.awt.image.ImageRepresentation.initIDs(*):numSrcLUT
sun.awt.image.ImageRepresentation.initIDs(*):srcLUTtransIndex
sun.awt.image.IntegerComponentRaster.initIDs(*):bandOffset
sun.awt.image.IntegerComponentRaster.initIDs(*):data
sun.awt.image.IntegerComponentRaster.initIDs(*):dataOffsets
sun.awt.image.IntegerComponentRaster.initIDs(*):pixelStride
sun.awt.image.IntegerComponentRaster.initIDs(*):scanlineStride
sun.awt.image.IntegerComponentRaster.initIDs(*):setDataElements(IIIILjava/lang/Object;)
sun.awt.image.IntegerComponentRaster.initIDs(*):type
sun.awt.image.JPEGImageDecoder.initIDs(*):java.io.InputStream.available()
sun.awt.image.JPEGImageDecoder.initIDs(*):java.io.InputStream.read([BII)
sun.awt.image.JPEGImageDecoder.initIDs(*):sendHeaderInfo(IIZZ)
sun.awt.image.JPEGImageDecoder.initIDs(*):sendHeaderInfo(IIZZZ)
sun.awt.image.JPEGImageDecoder.initIDs(*):sendPixels([BI)
sun.awt.image.JPEGImageDecoder.initIDs(*):sendPixels([II)
sun.awt.image.JPEGImageDecoder.readImage(*):sun.awt.image.ImageFormatException.<init>(Ljava/lang/String;)
sun.awt.image.RemoteOffScreenImage.initIDs(*):java.awt.image.BufferedImage.raster
sun.awt.image.ShortComponentRaster.initIDs(*):bandOffset
sun.awt.image.ShortComponentRaster.initIDs(*):data
sun.awt.image.ShortComponentRaster.initIDs(*):dataOffsets
sun.awt.image.ShortComponentRaster.initIDs(*):pixelStride
sun.awt.image.ShortComponentRaster.initIDs(*):scanlineStride
sun.awt.image.ShortComponentRaster.initIDs(*):type
sun.awt.image.SurfaceManager.initIDs(*):java.awt.image.BufferedImage.surfaceManager

sun.awt.image.codec.JPEGImageDecoderImpl.initDecoder(*):aBufImg
sun.awt.image.codec.JPEGImageDecoderImpl.initDecoder(*):aRas
sun.awt.image.codec.JPEGImageDecoderImpl.initDecoder(*):allocateDataBuffer(III)
sun.awt.image.codec.JPEGImageDecoderImpl.initDecoder(*):flip
sun.awt.image.codec.JPEGImageDecoderImpl.initDecoder(*):java.io.InputStream.available()
sun.awt.image.codec.JPEGImageDecoderImpl.initDecoder(*):java.io.InputStream.mark(I)
sun.awt.image.codec.JPEGImageDecoderImpl.initDecoder(*):java.io.InputStream.markSupported()
sun.awt.image.codec.JPEGImageDecoderImpl.initDecoder(*):java.io.InputStream.read([BII)
sun.awt.image.codec.JPEGImageDecoderImpl.initDecoder(*):java.io.InputStream.reset()
sun.awt.image.codec.JPEGImageDecoderImpl.initDecoder(*):java.io.InputStream.skip(J)
sun.awt.image.codec.JPEGImageDecoderImpl.initDecoder(*):unpack
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getACHuffmanComponentMapping(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getACHuffmanTable(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getDCHuffmanComponentMapping(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getDCHuffmanTable(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getEncodedColorID()
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getHorizontalSubsampling(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getMarkerData(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getNumComponents()
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getQTable(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getQTableComponentMapping(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getVerticalSubsampling(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setACHuffmanComponentMapping(II)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setACHuffmanTable(ILcom/sun/image/codec/jpeg/JPEGHuffmanTable;)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setDCHuffmanComponentMapping(II)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setDCHuffmanTable(ILcom/sun/image/codec/jpeg/JPEGHuffmanTable;)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setHorizontalSubsampling(II)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setImageInfoValid(Z)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setMarkerData(I[[B)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setQTable(ILcom/sun/image/codec/jpeg/JPEGQTable;)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setQTableComponentMapping(II)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setRestartInterval(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setTableInfoValid(Z)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setVerticalSubsampling(II)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGHuffmanTable.<init>([S[S)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGHuffmanTable.getLengths()
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGHuffmanTable.getSymbols()
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGQTable.<init>([I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.JPEGQTable.getTable()
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.TruncatedFileException.<init>(Ljava/awt/image/BufferedImage;)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):com.sun.image.codec.jpeg.TruncatedFileException.<init>(Ljava/awt/image/Raster;)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):getDecodedColorModel(IZ)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):java.util.Vector.<init>(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):java.util.Vector.addElement(Ljava/lang/Object;)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.<init>(II)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.buildArray(Ljava/util/Vector;)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setACHuffmanComponentMapping(II)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setACHuffmanTable(ILcom/sun/image/codec/jpeg/JPEGHuffmanTable;)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setDCHuffmanComponentMapping(II)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setDCHuffmanTable(ILcom/sun/image/codec/jpeg/JPEGHuffmanTable;)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setHeight(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setHorizontalSubsampling(II)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setMarkerData(I[[B)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setQTable(ILcom/sun/image/codec/jpeg/JPEGQTable;)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setQTableComponentMapping(II)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setRestartInterval(I)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setVerticalSubsampling(II)
sun.awt.image.codec.JPEGImageDecoderImpl.readJPEGStream(*):sun.awt.image.codec.JPEGParam.setWidth(I)
sun.awt.image.codec.JPEGImageEncoderImpl.initEncoder(*):java.io.OutputStream.flush()
sun.awt.image.codec.JPEGImageEncoderImpl.initEncoder(*):java.io.OutputStream.write([BII)
sun.awt.image.codec.JPEGImageEncoderImpl.initEncoder(*):pack
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getACHuffmanComponentMapping(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getACHuffmanTable(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getDCHuffmanComponentMapping(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getDCHuffmanTable(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getEncodedColorID()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getHeight()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getHorizontalSubsampling(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getMarkerData(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getNumComponents()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getQTable(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getQTableComponentMapping(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getVerticalSubsampling(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.getWidth()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.isImageInfoValid()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGDecodeParam.isTableInfoValid()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setACHuffmanComponentMapping(II)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setACHuffmanTable(ILcom/sun/image/codec/jpeg/JPEGHuffmanTable;)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setDCHuffmanComponentMapping(II)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setDCHuffmanTable(ILcom/sun/image/codec/jpeg/JPEGHuffmanTable;)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setHorizontalSubsampling(II)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setImageInfoValid(Z)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setMarkerData(I[[B)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setQTable(ILcom/sun/image/codec/jpeg/JPEGQTable;)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setQTableComponentMapping(II)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setRestartInterval(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setTableInfoValid(Z)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGEncodeParam.setVerticalSubsampling(II)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGHuffmanTable.<init>([S[S)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGHuffmanTable.getLengths()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGHuffmanTable.getSymbols()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGQTable.<init>([I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.JPEGQTable.getTable()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.TruncatedFileException.<init>(Ljava/awt/image/BufferedImage;)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):com.sun.image.codec.jpeg.TruncatedFileException.<init>(Ljava/awt/image/Raster;)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):getNearestColorId(Ljava/awt/image/ColorModel;)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.<init>(II)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.buildArray(Ljava/util/Vector;)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getACHuffmanComponentMapping(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getACHuffmanTable(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getDCHuffmanComponentMapping(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getDCHuffmanTable(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getEncodedColorID()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getHeight()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getHorizontalSubsampling(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getMarkerData(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getNumComponents()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getQTable(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getQTableComponentMapping(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getRestartInterval()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getVerticalSubsampling(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.getWidth()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.isImageInfoValid()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.isTableInfoValid()
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.setHeight(I)
sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(*):sun.awt.image.codec.JPEGParam.setWidth(I)

sun.awt.motif.AWTLockAccess.awtNotifyAll(*):java.lang.Object.notifyAll()
sun.awt.motif.AWTLockAccess.awtUnlock(*):java.lang.Object.notifyAll()
sun.awt.motif.AWTLockAccess.awtWait(*):java.lang.Object.wait(J)
sun.awt.motif.MButtonPeer.create(*):action()
sun.awt.motif.MButtonPeer.create(*):action(JI)
sun.awt.motif.MButtonPeer.create(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MButtonPeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MButtonPeer.create(*):sun.awt.motif.MComponentPeer.getZOrderPosition_NoClientCode()
sun.awt.motif.MButtonPeer.setLabel(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MCanvasPeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MCanvasPeer.create(*):java.awt.SystemColor.systemColors
sun.awt.motif.MCanvasPeer.create(*):sun.awt.motif.MComponentPeer.getZOrderPosition_NoClientCode()
sun.awt.motif.MCanvasPeer.initIDs(*):java.awt.Component.setGCFromPeer()
sun.awt.motif.MCheckboxPeer.create(*):action(Z)
sun.awt.motif.MCheckboxPeer.create(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MCheckboxPeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MCheckboxPeer.create(*):sun.awt.motif.MComponentPeer.getZOrderPosition_NoClientCode()
sun.awt.motif.MCheckboxPeer.setLabel(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MChoicePeer.addItem(*):action(I)
sun.awt.motif.MChoicePeer.addItem(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MChoicePeer.appendItems(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MChoicePeer.create(*):action(I)
sun.awt.motif.MChoicePeer.create(*):java.awt.Choice.getItem(I)
sun.awt.motif.MChoicePeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MChoicePeer.create(*):java.awt.Dimension.height
sun.awt.motif.MChoicePeer.create(*):java.awt.Dimension.width
sun.awt.motif.MChoicePeer.create(*):sun.awt.motif.MComponentPeer.getPreferredSize()
sun.awt.motif.MChoicePeer.create(*):sun.awt.motif.MComponentPeer.getZOrderPosition_NoClientCode()
sun.awt.motif.MChoicePeer.pReshape(*):java.awt.Dimension.height
sun.awt.motif.MChoicePeer.pReshape(*):java.awt.Dimension.width
sun.awt.motif.MChoicePeer.pReshape(*):sun.awt.motif.MComponentPeer.getPreferredSize()
sun.awt.motif.MChoicePeer.pSelect(*):action(I)
sun.awt.motif.MChoicePeer.pSelect(*):java.awt.Choice.getItem(I)
sun.awt.motif.MChoicePeer.setBackground(*):java.awt.SystemColor.getRGB()
sun.awt.motif.MChoicePeer.setBackground(*):java.awt.SystemColor.systemColors
sun.awt.motif.MChoicePeer.setFont(*):java.awt.Dimension.height
sun.awt.motif.MChoicePeer.setFont(*):java.awt.Dimension.width
sun.awt.motif.MChoicePeer.setFont(*):sun.awt.motif.MComponentPeer.getPreferredSize()
sun.awt.motif.MChoicePeer.setForeground(*):java.awt.SystemColor.getRGB()
sun.awt.motif.MChoicePeer.setForeground(*):java.awt.SystemColor.systemColors
sun.awt.motif.MComponentPeer._requestFocus(*):java.awt.SequencedEvent.<init>(Ljava/awt/AWTEvent;)
sun.awt.motif.MComponentPeer._requestFocus(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZLjava/awt/Component;)
sun.awt.motif.MComponentPeer._requestFocus(*):postEvent(Ljava/awt/AWTEvent;)
sun.awt.motif.MComponentPeer.addNativeDropTarget(*):sun.awt.motif.MDropTargetContextPeer.createMDropTargetContextPeer()
sun.awt.motif.MComponentPeer.getNativeColor(*):java.awt.SystemColor.getRGB()
sun.awt.motif.MComponentPeer.getNativeColor(*):java.awt.SystemColor.systemColors
sun.awt.motif.MComponentPeer.initIDs(*):drawState
sun.awt.motif.MComponentPeer.initIDs(*):graphicsConfig
sun.awt.motif.MComponentPeer.initIDs(*):isFocusable()
sun.awt.motif.MComponentPeer.initIDs(*):jniGlobalRef
sun.awt.motif.MComponentPeer.initIDs(*):pData
sun.awt.motif.MComponentPeer.initIDs(*):target
sun.awt.motif.MComponentPeer.pGetLocationOnScreen(*):java.awt.Point.<init>(II)
sun.awt.motif.MComponentPeer.pInitialize(*):handleExpose(IIII)
sun.awt.motif.MComponentPeer.pInitialize(*):handleRepaint(IIII)
sun.awt.motif.MComponentPeer.pInitialize(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MComponentPeer.pInitialize(*):java.awt.SequencedEvent.<init>(Ljava/awt/AWTEvent;)
sun.awt.motif.MComponentPeer.pInitialize(*):java.awt.Window.getGraphicsConfiguration()
sun.awt.motif.MComponentPeer.pInitialize(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZ)
sun.awt.motif.MComponentPeer.pInitialize(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZLjava/awt/Component;)
sun.awt.motif.MComponentPeer.pInitialize(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIIC)
sun.awt.motif.MComponentPeer.pInitialize(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIICIZ)
sun.awt.motif.MComponentPeer.pInitialize(*):java.awt.event.MouseEvent.<init>(Ljava/awt/Component;IJIIIIZ)
sun.awt.motif.MComponentPeer.pInitialize(*):java.awt.event.MouseEvent.<init>(Ljava/awt/Component;IJIIIIZI)
sun.awt.motif.MComponentPeer.pInitialize(*):java.awt.event.MouseWheelEvent.<init>(Ljava/awt/Component;IJIIIIZIII)
sun.awt.motif.MComponentPeer.pInitialize(*):postEvent(Ljava/awt/AWTEvent;)
sun.awt.motif.MComponentPeer.pInitialize(*):sun.awt.GlobalCursorManager.updateCursorLater(Ljava/awt/Component;)
sun.awt.motif.MComponentPeer.pInitialize(*):sun.awt.im.InputMethodManager.getInstance()
sun.awt.motif.MComponentPeer.pInitialize(*):sun.awt.im.InputMethodManager.notifyChangeRequestByHotKey(Ljava/awt/Component;)
sun.awt.motif.MComponentPeer.pInitialize(*):sun.awt.motif.MGlobalCursorManager.nativeUpdateCursor(Ljava/awt/Component;)
sun.awt.motif.MComponentPeer.pInitialize(*):sun.awt.motif.X11InputMethod.dispatchCommittedText(Ljava/lang/String;)
sun.awt.motif.MComponentPeer.pInitialize(*):sun.awt.motif.X11InputMethod.dispatchCommittedText(Ljava/lang/String;J)
sun.awt.motif.MComponentPeer.pReshape(*):postEvent(Ljava/awt/AWTEvent;)
sun.awt.motif.MComponentPeer.pSetBackground(*):java.awt.SystemColor.getRGB()
sun.awt.motif.MComponentPeer.pSetBackground(*):java.awt.SystemColor.systemColors
sun.awt.motif.MComponentPeer.pSetFont(*):sun.awt.CharToByteSymbol.toString()
sun.awt.motif.MComponentPeer.pSetFont(*):sun.awt.motif.CharToByteX11Dingbats.toString()
sun.awt.motif.MComponentPeer.pSetFont(*):sun.io.CharToByteConverter.toString()
sun.awt.motif.MComponentPeer.pSetForeground(*):java.awt.SystemColor.getRGB()
sun.awt.motif.MComponentPeer.pSetForeground(*):java.awt.SystemColor.systemColors
sun.awt.motif.MComponentPeer.pSetInnerForeground(*):java.awt.SystemColor.getRGB()
sun.awt.motif.MComponentPeer.pSetInnerForeground(*):java.awt.SystemColor.systemColors
sun.awt.motif.MComponentPeer.pSetScrollbarBackground(*):java.awt.SystemColor.getRGB()
sun.awt.motif.MComponentPeer.pSetScrollbarBackground(*):java.awt.SystemColor.systemColors
sun.awt.motif.MComponentPeer.requestFocus(*):postEvent(Ljava/awt/AWTEvent;)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):convertData(ILjava/util/Map;)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):dragDropFinished(ZI)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):java.awt.dnd.InvalidDnDOperationException.<init>(Ljava/lang/String;)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.datatransfer.DataTransferer.convertData(Ljava/lang/Object;Ljava/awt/datatransfer/Transferable;JLjava/util/Map;Z)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.datatransfer.DataTransferer.getInstance()
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.dnd.SunDragSourceContextPeer.dragDropFinished(ZIII)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.dnd.SunDragSourceContextPeer.dragEnter(III)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.dnd.SunDragSourceContextPeer.dragEnter(IIII)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.dnd.SunDragSourceContextPeer.dragExit()
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.dnd.SunDragSourceContextPeer.dragExit(II)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.dnd.SunDragSourceContextPeer.dragMotion(III)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.dnd.SunDragSourceContextPeer.dragMotion(IIII)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.dnd.SunDragSourceContextPeer.dragMouseMoved(IIII)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.dnd.SunDragSourceContextPeer.operationChanged(III)
sun.awt.motif.MDragSourceContextPeer.startDrag(*):sun.awt.dnd.SunDragSourceContextPeer.operationChanged(IIII)
sun.awt.motif.MDrawingSurfaceInfo.initIDs(*):h
sun.awt.motif.MDrawingSurfaceInfo.initIDs(*):peer
sun.awt.motif.MDrawingSurfaceInfo.initIDs(*):state
sun.awt.motif.MDrawingSurfaceInfo.initIDs(*):w
sun.awt.motif.MDropTargetContextPeer.addTransfer(*):java.lang.Object.notifyAll()
sun.awt.motif.MDropTargetContextPeer.dropDone(*):java.lang.Object.notifyAll()
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):java.lang.Object.notifyAll()
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):java.lang.Object.wait(J)
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):newData(ILjava/lang/String;[B)
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):newData(JLjava/lang/String;[B)
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):sun.awt.dnd.SunDropTargetContextPeer.handleDropMessage(Ljava/awt/Component;IIII[IJ)
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):sun.awt.dnd.SunDropTargetContextPeer.handleDropMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):sun.awt.dnd.SunDropTargetContextPeer.handleEnterMessage(Ljava/awt/Component;IIII[IJ)
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):sun.awt.dnd.SunDropTargetContextPeer.handleEnterMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):sun.awt.dnd.SunDropTargetContextPeer.handleExitMessage(Ljava/awt/Component;J)
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):sun.awt.dnd.SunDropTargetContextPeer.handleMotionMessage(Ljava/awt/Component;IIII[IJ)
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):sun.awt.dnd.SunDropTargetContextPeer.handleMotionMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):transferFailed(I)
sun.awt.motif.MDropTargetContextPeer.startTransfer(*):transferFailed(J)
sun.awt.motif.MEmbeddedFrame.setThisPeer(*):java.awt.Component.peer
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):java.awt.SystemColor.systemColors
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MComponentPeer.getZOrderPosition_NoClientCode()
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MWindowPeer.handleActivate()
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MWindowPeer.handleDeactivate()
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MWindowPeer.handleDeiconify()
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MWindowPeer.handleDestroy()
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MWindowPeer.handleIconify()
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MWindowPeer.handleMoved(II)
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MWindowPeer.handleQuit()
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MWindowPeer.handleResize(II)
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MWindowPeer.handleStateChange(II)
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MWindowPeer.handleWindowFocusIn()
sun.awt.motif.MEmbeddedFramePeer.NEFcreate(*):sun.awt.motif.MWindowPeer.handleWindowFocusOut(Ljava/awt/Window;)
sun.awt.motif.MEmbeddedFramePeer.initIDs(*):handle
sun.awt.motif.MEmbeddedFramePeer.synthesizeFocusIn(*):sun.awt.motif.MWindowPeer.handleMoved(II)
sun.awt.motif.MEmbeddedFramePeer.synthesizeFocusIn(*):sun.awt.motif.MWindowPeer.handleWindowFocusIn()
sun.awt.motif.MFileDialogPeer.create(*):handleCancel()
sun.awt.motif.MFileDialogPeer.create(*):handleQuit()
sun.awt.motif.MFileDialogPeer.create(*):handleSelected(Ljava/lang/String;)
sun.awt.motif.MFileDialogPeer.create(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MFileDialogPeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MFileDialogPeer.create(*):java.awt.Window.getGraphicsConfiguration()
sun.awt.motif.MFileDialogPeer.create(*):java.lang.Object.notifyAll()
sun.awt.motif.MFileDialogPeer.create(*):java.lang.Object.wait(J)
sun.awt.motif.MFileDialogPeer.create(*):java.lang.Thread.currentThread()
sun.awt.motif.MFileDialogPeer.create(*):pasteFromClipboard()
sun.awt.motif.MFileDialogPeer.create(*):proceedFiltering(Ljava/lang/String;Z)
sun.awt.motif.MFileDialogPeer.create(*):sun.awt.motif.X11Selection.getSelectionsArray()
sun.awt.motif.MFileDialogPeer.create(*):sun.awt.motif.X11Selection.lostSelectionOwnership()
sun.awt.motif.MFileDialogPeer.insertReplaceFileDialogText(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MFileDialogPeer.setFileEntry(*):proceedFiltering(Ljava/lang/String;Z)
sun.awt.motif.MFontPeer.getFontCharset(*):sun.awt.CharToByteSymbol.<init>()
sun.awt.motif.MFontPeer.getFontCharset(*):sun.awt.motif.CharToByteX11Dingbats.<init>()
sun.awt.motif.MFontPeer.initIDs(*):xfsname
sun.awt.motif.MGlobalCursorManager.cacheInit(*):java.awt.Point.x
sun.awt.motif.MGlobalCursorManager.cacheInit(*):java.awt.Point.y
sun.awt.motif.MLabelPeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MLabelPeer.create(*):sun.awt.motif.MComponentPeer.getZOrderPosition_NoClientCode()
sun.awt.motif.MLabelPeer.setText(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MLabelPeer.setText(*):sun.awt.motif.MComponentPeer.postEvent(Ljava/awt/AWTEvent;)
sun.awt.motif.MListPeer.addItem(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MListPeer.create(*):action(I)
sun.awt.motif.MListPeer.create(*):action(IJI)
sun.awt.motif.MListPeer.create(*):handleListChanged(I)
sun.awt.motif.MListPeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MListPeer.create(*):java.awt.SequencedEvent.<init>(Ljava/awt/AWTEvent;)
sun.awt.motif.MListPeer.create(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZ)
sun.awt.motif.MListPeer.create(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZLjava/awt/Component;)
sun.awt.motif.MListPeer.create(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIIC)
sun.awt.motif.MListPeer.create(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIICIZ)
sun.awt.motif.MListPeer.create(*):java.awt.event.MouseEvent.<init>(Ljava/awt/Component;IJIIIIZ)
sun.awt.motif.MListPeer.create(*):java.awt.event.MouseEvent.<init>(Ljava/awt/Component;IJIIIIZI)
sun.awt.motif.MListPeer.create(*):java.awt.event.MouseWheelEvent.<init>(Ljava/awt/Component;IJIIIIZIII)
sun.awt.motif.MListPeer.create(*):sun.awt.GlobalCursorManager.updateCursorLater(Ljava/awt/Component;)
sun.awt.motif.MListPeer.create(*):sun.awt.im.InputMethodManager.getInstance()
sun.awt.motif.MListPeer.create(*):sun.awt.im.InputMethodManager.notifyChangeRequestByHotKey(Ljava/awt/Component;)
sun.awt.motif.MListPeer.create(*):sun.awt.motif.MComponentPeer.handleExpose(IIII)
sun.awt.motif.MListPeer.create(*):sun.awt.motif.MComponentPeer.handleRepaint(IIII)
sun.awt.motif.MListPeer.create(*):sun.awt.motif.MComponentPeer.postEvent(Ljava/awt/AWTEvent;)
sun.awt.motif.MListPeer.create(*):sun.awt.motif.MGlobalCursorManager.nativeUpdateCursor(Ljava/awt/Component;)
sun.awt.motif.MListPeer.create(*):sun.awt.motif.X11InputMethod.dispatchCommittedText(Ljava/lang/String;)
sun.awt.motif.MListPeer.create(*):sun.awt.motif.X11InputMethod.dispatchCommittedText(Ljava/lang/String;J)
sun.awt.motif.MListPeer.setBackground(*):java.awt.SystemColor.getRGB()
sun.awt.motif.MListPeer.setBackground(*):java.awt.SystemColor.systemColors
sun.awt.motif.MListPeer.setMultipleSelections(*):action(I)
sun.awt.motif.MListPeer.setMultipleSelections(*):action(IJI)
sun.awt.motif.MListPeer.setMultipleSelections(*):handleListChanged(I)
sun.awt.motif.MMenuBarPeer.initIDs(*):graphicsConfig
sun.awt.motif.MMenuBarPeer.initIDs(*):pData
sun.awt.motif.MMenuItemPeer.createMenuItem(*):action(JI)
sun.awt.motif.MMenuItemPeer.createMenuItem(*):java.awt.MenuComponent.getFont_NoClientCode()
sun.awt.motif.MMenuItemPeer.createMenuItem(*):java.awt.MenuShortcut.toString()
sun.awt.motif.MMenuItemPeer.createMenuItem(*):sun.awt.motif.MCheckboxMenuItemPeer.action(JIZ)
sun.awt.motif.MMenuItemPeer.initIDs(*):isCheckbox
sun.awt.motif.MMenuItemPeer.initIDs(*):jniGlobalRef
sun.awt.motif.MMenuItemPeer.initIDs(*):pData
sun.awt.motif.MMenuItemPeer.initIDs(*):target
sun.awt.motif.MMenuItemPeer.pSetLabel(*):java.awt.MenuComponent.getFont_NoClientCode()
sun.awt.motif.MMenuItemPeer.pSetShortcut(*):java.awt.MenuComponent.getFont_NoClientCode()
sun.awt.motif.MMenuPeer.createMenu(*):java.awt.MenuComponent.getFont_NoClientCode()
sun.awt.motif.MMenuPeer.createSubMenu(*):java.awt.MenuComponent.getFont_NoClientCode()
sun.awt.motif.MPopupMenuPeer.createMenu(*):java.awt.MenuComponent.getFont_NoClientCode()
sun.awt.motif.MPopupMenuPeer.initIDs(*):destroyNativeWidgetAfterGettingTreeLock()
sun.awt.motif.MScrollPanePeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MScrollPanePeer.create(*):scrolledHorizontal(II)
sun.awt.motif.MScrollPanePeer.create(*):scrolledVertical(II)
sun.awt.motif.MScrollPanePeer.initIDs(*):dragInProgress
sun.awt.motif.MScrollPanePeer.initIDs(*):postScrollEvent(IIIZ)
sun.awt.motif.MScrollPanePeer.pInsets(*):java.awt.Insets.<init>(IIII)
sun.awt.motif.MScrollbarPeer.create(*):dragAbsolute(I)
sun.awt.motif.MScrollbarPeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MScrollbarPeer.create(*):lineDown(I)
sun.awt.motif.MScrollbarPeer.create(*):lineUp(I)
sun.awt.motif.MScrollbarPeer.create(*):pageDown(I)
sun.awt.motif.MScrollbarPeer.create(*):pageUp(I)
sun.awt.motif.MScrollbarPeer.initIDs(*):drag(I)
sun.awt.motif.MScrollbarPeer.initIDs(*):dragEnd(I)
sun.awt.motif.MScrollbarPeer.initIDs(*):lineDown(I)
sun.awt.motif.MScrollbarPeer.initIDs(*):lineUp(I)
sun.awt.motif.MScrollbarPeer.initIDs(*):pageDown(I)
sun.awt.motif.MScrollbarPeer.initIDs(*):pageUp(I)
sun.awt.motif.MScrollbarPeer.initIDs(*):warp(I)
sun.awt.motif.MTextAreaPeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MTextAreaPeer.create(*):java.awt.SequencedEvent.<init>(Ljava/awt/AWTEvent;)
sun.awt.motif.MTextAreaPeer.create(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZ)
sun.awt.motif.MTextAreaPeer.create(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZLjava/awt/Component;)
sun.awt.motif.MTextAreaPeer.create(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIIC)
sun.awt.motif.MTextAreaPeer.create(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIICIZ)
sun.awt.motif.MTextAreaPeer.create(*):java.awt.event.MouseEvent.<init>(Ljava/awt/Component;IJIIIIZ)
sun.awt.motif.MTextAreaPeer.create(*):java.awt.event.MouseEvent.<init>(Ljava/awt/Component;IJIIIIZI)
sun.awt.motif.MTextAreaPeer.create(*):java.awt.event.MouseWheelEvent.<init>(Ljava/awt/Component;IJIIIIZIII)
sun.awt.motif.MTextAreaPeer.create(*):java.lang.Object.notifyAll()
sun.awt.motif.MTextAreaPeer.create(*):java.lang.Object.wait(J)
sun.awt.motif.MTextAreaPeer.create(*):java.lang.Thread.currentThread()
sun.awt.motif.MTextAreaPeer.create(*):pasteFromClipboard()
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.GlobalCursorManager.updateCursorLater(Ljava/awt/Component;)
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.im.InputMethodManager.getInstance()
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.im.InputMethodManager.notifyChangeRequestByHotKey(Ljava/awt/Component;)
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.motif.MComponentPeer.getZOrderPosition_NoClientCode()
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.motif.MComponentPeer.handleExpose(IIII)
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.motif.MComponentPeer.handleRepaint(IIII)
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.motif.MComponentPeer.postEvent(Ljava/awt/AWTEvent;)
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.motif.MGlobalCursorManager.nativeUpdateCursor(Ljava/awt/Component;)
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.motif.X11InputMethod.dispatchCommittedText(Ljava/lang/String;)
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.motif.X11InputMethod.dispatchCommittedText(Ljava/lang/String;J)
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.motif.X11Selection.getSelectionsArray()
sun.awt.motif.MTextAreaPeer.create(*):sun.awt.motif.X11Selection.lostSelectionOwnership()
sun.awt.motif.MTextAreaPeer.create(*):valueChanged()
sun.awt.motif.MTextAreaPeer.getText(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MTextAreaPeer.insert(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MTextAreaPeer.replaceRange(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MTextAreaPeer.setText(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MTextAreaPeer.setText(*):valueChanged()
sun.awt.motif.MTextAreaPeer.setTextBackground(*):java.awt.SystemColor.getRGB()
sun.awt.motif.MTextAreaPeer.setTextBackground(*):java.awt.SystemColor.systemColors
sun.awt.motif.MTextFieldPeer.create(*):action()
sun.awt.motif.MTextFieldPeer.create(*):action(JI)
sun.awt.motif.MTextFieldPeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MTextFieldPeer.create(*):java.lang.Object.notifyAll()
sun.awt.motif.MTextFieldPeer.create(*):java.lang.Object.wait(J)
sun.awt.motif.MTextFieldPeer.create(*):java.lang.Thread.currentThread()
sun.awt.motif.MTextFieldPeer.create(*):pasteFromClipboard()
sun.awt.motif.MTextFieldPeer.create(*):sun.awt.motif.MComponentPeer.getZOrderPosition_NoClientCode()
sun.awt.motif.MTextFieldPeer.create(*):sun.awt.motif.X11Selection.getSelectionsArray()
sun.awt.motif.MTextFieldPeer.create(*):sun.awt.motif.X11Selection.lostSelectionOwnership()
sun.awt.motif.MTextFieldPeer.create(*):valueChanged()
sun.awt.motif.MTextFieldPeer.getText(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MTextFieldPeer.insertReplaceText(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MTextFieldPeer.setText(*):java.awt.Component.getFont_NoClientCode()
sun.awt.motif.MTextFieldPeer.setText(*):valueChanged()
sun.awt.motif.MToolkit.getLockingKeyStateNative(*):java.lang.UnsupportedOperationException.<init>(Ljava/lang/String;)
sun.awt.motif.MToolkit.init(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.motif.MToolkit.init(*):java.lang.String.<init>([B)
sun.awt.motif.MToolkit.init(*):java.lang.String.getBytes()
sun.awt.motif.MToolkit.init(*):java.lang.System.load(Ljava/lang/String;)
sun.awt.motif.MToolkit.init(*):java.lang.Thread.sleep(J)
sun.awt.motif.MToolkit.init(*):sun.awt.dnd.SunDragSourceContextPeer.dragEnter(III)
sun.awt.motif.MToolkit.init(*):sun.awt.dnd.SunDragSourceContextPeer.dragExit()
sun.awt.motif.MToolkit.init(*):sun.awt.dnd.SunDragSourceContextPeer.dragMotion(III)
sun.awt.motif.MToolkit.init(*):sun.awt.dnd.SunDragSourceContextPeer.operationChanged(III)
sun.awt.motif.MToolkit.init(*):sun.awt.dnd.SunDropTargetContextPeer.handleDropMessage(Ljava/awt/Component;IIII[IJ)
sun.awt.motif.MToolkit.init(*):sun.awt.dnd.SunDropTargetContextPeer.handleEnterMessage(Ljava/awt/Component;IIII[IJ)
sun.awt.motif.MToolkit.init(*):sun.awt.dnd.SunDropTargetContextPeer.handleExitMessage(Ljava/awt/Component;J)
sun.awt.motif.MToolkit.init(*):sun.awt.dnd.SunDropTargetContextPeer.handleMotionMessage(Ljava/awt/Component;IIII[IJ)
sun.awt.motif.MToolkit.init(*):sun.awt.motif.MDragSourceContextPeer.convertData(ILjava/util/Map;)
sun.awt.motif.MToolkit.init(*):sun.awt.motif.MDragSourceContextPeer.dragDropFinished(ZI)
sun.awt.motif.MToolkit.init(*):sun.awt.motif.MDropTargetContextPeer.createMDropTargetContextPeer()
sun.awt.motif.MToolkit.init(*):sun.awt.motif.MDropTargetContextPeer.newData(ILjava/lang/String;[B)
sun.awt.motif.MToolkit.init(*):sun.awt.motif.MDropTargetContextPeer.transferFailed(I)
sun.awt.motif.MToolkit.init(*):sun.awt.motif.MFontPeer.getDefaultMotifFontSet()
sun.awt.motif.MToolkit.init(*):sun.awt.motif.MWindowPeer.handleDeiconify()
sun.awt.motif.MToolkit.init(*):sun.awt.motif.MWindowPeer.handleDestroy()
sun.awt.motif.MToolkit.init(*):sun.awt.motif.MWindowPeer.handleIconify()
sun.awt.motif.MToolkit.init(*):sun.awt.motif.MWindowPeer.handleStateChange(II)
sun.awt.motif.MToolkit.init(*):sun.awt.motif.X11CustomCursor.getBestCursorSize(II)
sun.awt.motif.MToolkit.loadXSettings(*):parseXSettings([B)
sun.awt.motif.MToolkit.makeColorModel(*):java.awt.color.ColorSpace.getInstance(I)
sun.awt.motif.MToolkit.makeColorModel(*):java.awt.image.ComponentColorModel.<init>(Ljava/awt/color/ColorSpace;[IZZII)
sun.awt.motif.MToolkit.makeColorModel(*):java.awt.image.DirectColorModel.<init>(IIIII)
sun.awt.motif.MToolkit.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[B[B[B)
sun.awt.motif.MToolkit.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[B[B[B[B)
sun.awt.motif.MToolkit.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[IIILjava/math/BigInteger;)
sun.awt.motif.MToolkit.makeColorModel(*):java.math.BigInteger.<init>([B)
sun.awt.motif.MToolkit.run(*):java.awt.Choice.getItem(I)
sun.awt.motif.MToolkit.run(*):java.awt.Dialog.<init>(Ljava/awt/Frame;)
sun.awt.motif.MToolkit.run(*):java.awt.SequencedEvent.<init>(Ljava/awt/AWTEvent;)
sun.awt.motif.MToolkit.run(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZ)
sun.awt.motif.MToolkit.run(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZLjava/awt/Component;)
sun.awt.motif.MToolkit.run(*):java.awt.event.InputEvent.ALT_GRAPH_MASK
sun.awt.motif.MToolkit.run(*):java.awt.event.InputEvent.ALT_MASK
sun.awt.motif.MToolkit.run(*):java.awt.event.InputEvent.BUTTON1_MASK
sun.awt.motif.MToolkit.run(*):java.awt.event.InputEvent.BUTTON2_MASK
sun.awt.motif.MToolkit.run(*):java.awt.event.InputEvent.BUTTON3_MASK
sun.awt.motif.MToolkit.run(*):java.awt.event.InputEvent.CTRL_MASK
sun.awt.motif.MToolkit.run(*):java.awt.event.InputEvent.META_MASK
sun.awt.motif.MToolkit.run(*):java.awt.event.InputEvent.SHIFT_MASK
sun.awt.motif.MToolkit.run(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIIC)
sun.awt.motif.MToolkit.run(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIICIZ)
sun.awt.motif.MToolkit.run(*):java.awt.event.MouseEvent.<init>(Ljava/awt/Component;IJIIIIZ)
sun.awt.motif.MToolkit.run(*):java.awt.event.MouseEvent.<init>(Ljava/awt/Component;IJIIIIZI)
sun.awt.motif.MToolkit.run(*):java.awt.event.MouseWheelEvent.<init>(Ljava/awt/Component;IJIIIIZIII)
sun.awt.motif.MToolkit.run(*):java.lang.Object.notifyAll()
sun.awt.motif.MToolkit.run(*):java.lang.Thread.currentThread()
sun.awt.motif.MToolkit.run(*):java.lang.Thread.yield()
sun.awt.motif.MToolkit.run(*):sun.awt.AWTAutoShutdown.notifyToolkitThreadBusy()
sun.awt.motif.MToolkit.run(*):sun.awt.AWTAutoShutdown.notifyToolkitThreadFree()
sun.awt.motif.MToolkit.run(*):sun.awt.GlobalCursorManager.updateCursorLater(Ljava/awt/Component;)
sun.awt.motif.MToolkit.run(*):sun.awt.im.InputMethodManager.getInstance()
sun.awt.motif.MToolkit.run(*):sun.awt.im.InputMethodManager.notifyChangeRequestByHotKey(Ljava/awt/Component;)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MButtonPeer.action()
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MButtonPeer.action(JI)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MChoicePeer.action(I)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MComponentPeer.handleExpose(IIII)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MComponentPeer.handleRepaint(IIII)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MComponentPeer.postEvent(Ljava/awt/AWTEvent;)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MDialogPeer.handleActivate()
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MDialogPeer.handleDeactivate()
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MDialogPeer.handleMoved(II)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MFileDialogPeer.handleCancel()
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MFileDialogPeer.handleSelected(Ljava/lang/String;)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MFileDialogPeer.proceedFiltering(Ljava/lang/String;Z)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MFramePeer.handleActivate()
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MFramePeer.handleDeactivate()
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MFramePeer.handleDeiconify()
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MFramePeer.handleIconify()
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MFramePeer.handleMoved(II)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MGlobalCursorManager.nativeUpdateCursor(Ljava/awt/Component;)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MMenuItemPeer.action(JI)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MTextFieldPeer.valueChanged()
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MWindowPeer.handleMoved(II)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MWindowPeer.handleQuit()
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MWindowPeer.handleResize(II)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MWindowPeer.handleStateChange(II)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MWindowPeer.handleWindowFocusIn()
sun.awt.motif.MToolkit.run(*):sun.awt.motif.MWindowPeer.handleWindowFocusOut(Ljava/awt/Window;)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.X11InputMethod.dispatchCommittedText(Ljava/lang/String;)
sun.awt.motif.MToolkit.run(*):sun.awt.motif.X11InputMethod.dispatchCommittedText(Ljava/lang/String;J)
sun.awt.motif.MWindowAttributes.initIDs(*):decorations
sun.awt.motif.MWindowAttributes.initIDs(*):initialFocus
sun.awt.motif.MWindowAttributes.initIDs(*):initialState
sun.awt.motif.MWindowAttributes.initIDs(*):isResizable
sun.awt.motif.MWindowAttributes.initIDs(*):nativeDecor
sun.awt.motif.MWindowAttributes.initIDs(*):visibilityState
sun.awt.motif.MWindowPeer.create(*):handleActivate()
sun.awt.motif.MWindowPeer.create(*):handleDeactivate()
sun.awt.motif.MWindowPeer.create(*):handleDeiconify()
sun.awt.motif.MWindowPeer.create(*):handleDestroy()
sun.awt.motif.MWindowPeer.create(*):handleIconify()
sun.awt.motif.MWindowPeer.create(*):handleMoved(II)
sun.awt.motif.MWindowPeer.create(*):handleQuit()
sun.awt.motif.MWindowPeer.create(*):handleResize(II)
sun.awt.motif.MWindowPeer.create(*):handleStateChange(II)
sun.awt.motif.MWindowPeer.create(*):java.awt.Component.getGraphicsConfiguration()
sun.awt.motif.MWindowPeer.create(*):java.awt.SystemColor.systemColors
sun.awt.motif.MWindowPeer.create(*):java.awt.Window.getGraphicsConfiguration()
sun.awt.motif.MWindowPeer.create(*):sun.awt.motif.MComponentPeer.getZOrderPosition_NoClientCode()
sun.awt.motif.MWindowPeer.initIDs(*):draggedToNewScreen(I)
sun.awt.motif.MWindowPeer.initIDs(*):handleDeiconify()
sun.awt.motif.MWindowPeer.initIDs(*):handleDestroy()
sun.awt.motif.MWindowPeer.initIDs(*):handleIconify()
sun.awt.motif.MWindowPeer.initIDs(*):handleStateChange(II)
sun.awt.motif.MWindowPeer.initIDs(*):handleWindowFocusIn()
sun.awt.motif.MWindowPeer.initIDs(*):handleWindowFocusOut(Ljava/awt/Window;)
sun.awt.motif.MWindowPeer.initIDs(*):iconHeight
sun.awt.motif.MWindowPeer.initIDs(*):iconWidth
sun.awt.motif.MWindowPeer.initIDs(*):insets
sun.awt.motif.MWindowPeer.initIDs(*):sysH
sun.awt.motif.MWindowPeer.initIDs(*):sysW
sun.awt.motif.MWindowPeer.initIDs(*):sysX
sun.awt.motif.MWindowPeer.initIDs(*):sysY
sun.awt.motif.MWindowPeer.initIDs(*):winAttr
sun.awt.motif.MWindowPeer.pCreate(*):handleWindowFocusIn()
sun.awt.motif.MWindowPeer.pCreate(*):handleWindowFocusOut(Ljava/awt/Window;)
sun.awt.motif.MWindowPeer.pCreate(*):java.awt.Dialog.<init>(Ljava/awt/Frame;)
sun.awt.motif.MWindowPeer.pCreate(*):java.awt.Window.getGraphicsConfiguration()
sun.awt.motif.MWindowPeer.pCreate(*):sun.awt.im.InputMethodWindow.setInputContext(Lsun/awt/im/InputContext;)
sun.awt.motif.MWindowPeer.pHide(*):sun.awt.motif.MComponentPeer.postEvent(Ljava/awt/AWTEvent;)
sun.awt.motif.MWindowPeer.pSetIMMOption(*):notifyIMMOptionChange()
sun.awt.motif.MWindowPeer.setState(*):handleDeiconify()
sun.awt.motif.MWindowPeer.setState(*):handleDestroy()
sun.awt.motif.MWindowPeer.setState(*):handleIconify()
sun.awt.motif.MWindowPeer.setState(*):handleStateChange(II)
sun.awt.motif.MWindowPeer.wrapInSequenced(*):java.awt.SequencedEvent.<init>(Ljava/awt/AWTEvent;)
sun.awt.motif.X11CustomCursor.cacheInit(*):java.awt.Dimension.height
sun.awt.motif.X11CustomCursor.cacheInit(*):java.awt.Dimension.width
sun.awt.motif.X11FontMetrics.init(*):sun.io.CharToByteConverter.toString()
sun.awt.motif.X11FontMetrics.initIDs(*):ascent
sun.awt.motif.X11FontMetrics.initIDs(*):descent
sun.awt.motif.X11FontMetrics.initIDs(*):font
sun.awt.motif.X11FontMetrics.initIDs(*):height
sun.awt.motif.X11FontMetrics.initIDs(*):java.awt.FontMetrics.font
sun.awt.motif.X11FontMetrics.initIDs(*):leading
sun.awt.motif.X11FontMetrics.initIDs(*):maxAdvance
sun.awt.motif.X11FontMetrics.initIDs(*):maxAscent
sun.awt.motif.X11FontMetrics.initIDs(*):maxDescent
sun.awt.motif.X11FontMetrics.initIDs(*):maxHeight
sun.awt.motif.X11FontMetrics.initIDs(*):widths
sun.awt.motif.X11Graphics.X11LockViewResources(*):java.awt.image.IndexColorModel.map_size
sun.awt.motif.X11Graphics.X11LockViewResources(*):java.awt.image.IndexColorModel.rgb
sun.awt.motif.X11Graphics.cacheInit(*):font
sun.awt.motif.X11Graphics.cacheInit(*):pData
sun.awt.motif.X11Graphics.cacheInit(*):peer
sun.awt.motif.X11Graphics.cacheInit(*):sun.java2d.SunGraphics2D.font
sun.awt.motif.X11Graphics.devClearRect(*):java.awt.SystemColor.getRGB()
sun.awt.motif.X11Graphics.devClearRect(*):java.awt.SystemColor.systemColors
sun.awt.motif.X11Graphics.devClearRect(*):sun.java2d.SunGraphics2D.getBackground()
sun.awt.motif.X11Graphics.getClipBounds(*):java.awt.Rectangle.<init>(IIII)
sun.awt.motif.X11Graphics.pSetFont(*):sun.awt.CharToByteSymbol.toString()
sun.awt.motif.X11Graphics.pSetFont(*):sun.awt.motif.CharToByteX11Dingbats.toString()
sun.awt.motif.X11Graphics.pSetFont(*):sun.io.CharToByteConverter.toString()
sun.awt.motif.X11Graphics.pSetForeground(*):java.awt.SystemColor.getRGB()
sun.awt.motif.X11Graphics.pSetForeground(*):java.awt.SystemColor.systemColors
sun.awt.motif.X11Graphics.pSetXORMode(*):java.awt.SystemColor.getRGB()
sun.awt.motif.X11Graphics.pSetXORMode(*):java.awt.SystemColor.systemColors
sun.awt.motif.X11InputMethod.createXICNative(*):dispatchComposedText(Ljava/lang/String;[IIII)
sun.awt.motif.X11InputMethod.createXICNative(*):dispatchComposedText(Ljava/lang/String;[IIIIJ)
sun.awt.motif.X11InputMethod.createXICNative(*):sun.awt.motif.MComponentPeer.pData
sun.awt.motif.X11InputMethod.initIDs(*):pData
sun.awt.motif.X11InputMethod.isCompositionEnabledNative(*):java.lang.UnsupportedOperationException.<init>(Ljava/lang/String;)
sun.awt.motif.X11InputMethod.reconfigureXICNative(*):dispatchComposedText(Ljava/lang/String;[IIII)
sun.awt.motif.X11InputMethod.reconfigureXICNative(*):dispatchComposedText(Ljava/lang/String;[IIIIJ)
sun.awt.motif.X11InputMethod.reconfigureXICNative(*):sun.awt.motif.MComponentPeer.pData
sun.awt.motif.X11InputMethod.setXICFocus(*):sun.awt.motif.MComponentPeer.pData
sun.awt.motif.X11OffScreenImage.updateBitmask(*):sun.java2d.Disposer.addRecord(Lsun/java2d/DisposerTarget;JJ)
sun.awt.motif.X11RemoteOffScreenImage.initIDs(*):java.awt.image.BufferedImage.raster
sun.awt.motif.X11RemoteOffScreenImage.initIDs(*):java.awt.image.BufferedImage.sData
sun.awt.motif.X11Selection.init(*):convertData(I)
sun.awt.motif.X11Selection.init(*):getFormatsForFlavors()
sun.awt.motif.X11Selection.init(*):getSelectionsArray()
sun.awt.motif.X11Selection.initIDs(*):atom
sun.awt.motif.X11Selection.initIDs(*):contents
sun.awt.motif.X11Selection.initIDs(*):format
sun.awt.motif.X11Selection.initIDs(*):holder
sun.awt.motif.X11Selection.initIDs(*):nativeData
sun.awt.motif.X11Selection.initIDs(*):selections
sun.awt.motif.X11Selection.initIDs(*):targetArray
sun.awt.motif.X11Selection.pGetSelectionOwnership(*):getSelectionsArray()
sun.awt.motif.X11Selection.pGetSelectionOwnership(*):java.lang.Object.notifyAll()
sun.awt.motif.X11Selection.pGetSelectionOwnership(*):java.lang.Object.wait(J)
sun.awt.motif.X11Selection.pGetSelectionOwnership(*):java.lang.Thread.currentThread()
sun.awt.motif.X11Selection.pGetSelectionOwnership(*):lostSelectionOwnership()
sun.awt.motif.X11Selection.pGetSelectionOwnership(*):sun.awt.datatransfer.DataTransferer.convertData(Ljava/lang/Object;Ljava/awt/datatransfer/Transferable;JLjava/util/Map;Z)
sun.awt.motif.X11Selection.pGetSelectionOwnership(*):sun.awt.datatransfer.DataTransferer.getInstance()
sun.awt.motif.X11Selection.pGetTransferData(*):java.lang.Object.notifyAll()
sun.awt.motif.X11Selection.pGetTransferData(*):java.lang.Object.wait(J)
sun.awt.motif.X11Selection.pGetTransferData(*):java.lang.Thread.currentThread()
sun.awt.motif.X11Selection.pGetTransferTargets(*):java.lang.Object.notifyAll()
sun.awt.motif.X11Selection.pGetTransferTargets(*):java.lang.Object.wait(J)
sun.awt.motif.X11Selection.pGetTransferTargets(*):java.lang.Thread.currentThread()

sun.awt.print.AwtPrintControl.initIDs(*):dialogOwnerPeer
sun.awt.print.AwtPrintControl.initIDs(*):findWin32Media(IIIZ)
sun.awt.print.AwtPrintControl.initIDs(*):getWin32MediaAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$DefaultSelectionType.ALL
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$DefaultSelectionType.RANGE
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$DefaultSelectionType.SELECTION
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$DestinationType.FILE
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$DestinationType.PRINTER
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$DialogType.COMMON
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$DialogType.NATIVE
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$DialogType.NONE
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_COLLATED_COPIES
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$SidesType.ONE_SIDED
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$SidesType.TWO_SIDED_LONG_EDGE
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.JobAttributes$SidesType.TWO_SIDED_SHORT_EDGE
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.PageAttributes$ColorType.COLOR
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.PageAttributes$ColorType.MONOCHROME
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.PageAttributes$OrientationRequestedType.LANDSCAPE
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.PageAttributes$OrientationRequestedType.PORTRAIT
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.PageAttributes$OriginType.PHYSICAL
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.PageAttributes$OriginType.PRINTABLE
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.PageAttributes$PrintQualityType.DRAFT
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.PageAttributes$PrintQualityType.HIGH
sun.awt.print.AwtPrintControl.initIDs(*):java.awt.PageAttributes$PrintQualityType.NORMAL
sun.awt.print.AwtPrintControl.initIDs(*):setWin32MediaAttrib(III)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.doctitle
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getColorAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getCopiesAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getDestAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getDialogAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getFileNameAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getFromPageAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getMDHAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getMaxPageAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getMinPageAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getOrientAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getOriginAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getPrintToFileEnabled()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getPrinterAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getQualityAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getResAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getSelectAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getSidesAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.getToPageAttrib()
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.setColorAttrib(Ljava/awt/PageAttributes$ColorType;)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.setCopiesAttrib(I)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.setDestAttrib(Ljava/awt/JobAttributes$DestinationType;)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.setFromPageAttrib(I)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.setMDHAttrib(Ljava/awt/JobAttributes$MultipleDocumentHandlingType;)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.setOrientAttrib(Ljava/awt/PageAttributes$OrientationRequestedType;)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.setPrinterAttrib(Ljava/lang/String;)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.setQualityAttrib(Ljava/awt/PageAttributes$PrintQualityType;)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.setSelectAttrib(Ljava/awt/JobAttributes$DefaultSelectionType;)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.setSidesAttrib(Ljava/awt/JobAttributes$SidesType;)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrintControl.setToPageAttrib(I)
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrinterCapabilities.capabilities
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrinterCapabilities.printerName
sun.awt.print.AwtPrintControl.initIDs(*):sun.awt.print.PrinterCapabilities.sizes

sun.awt.shell.Win32ShellFolder.initIDs(*):attributes
sun.awt.shell.Win32ShellFolder.initIDs(*):displayName
sun.awt.shell.Win32ShellFolder.initIDs(*):folderType
sun.awt.shell.Win32ShellFolder.initIDs(*):pIDL
sun.awt.shell.Win32ShellFolder.initIDs(*):pIShellFolder
sun.awt.shell.Win32ShellFolder.initIDs(*):relativePIDL
sun.awt.shell.Win32ShellFolder2.doGetColumnInfo(*):sun.awt.shell.ShellFolderColumnInfo.<init>(Ljava/lang/String;IIZ)
sun.awt.shell.Win32ShellFolder2.initIDs(*):displayName
sun.awt.shell.Win32ShellFolder2.initIDs(*):folderType
sun.awt.shell.Win32ShellFolder2.initIDs(*):pIShellFolder
sun.awt.shell.Win32ShellFolder2.initIDs(*):pIShellIcon
sun.awt.shell.Win32ShellFolder2.initIDs(*):relativePIDL
sun.awt.shell.Win32ShellFolder2.initIDs(*):setIShellFolder(J)
sun.awt.shell.Win32ShellFolder2.initIDs(*):setRelativePIDL(J)

sun.awt.tiny.TinyEventThread.run(*):java.lang.Object.notify()
sun.awt.tiny.TinyEventThread.run(*):java.lang.Object.wait(J)
sun.awt.tiny.TinyGraphics.copyArea(*):java.lang.Object.notify()
sun.awt.tiny.TinyGraphics.drawArc(*):java.lang.Object.notify()
sun.awt.tiny.TinyGraphics.drawBytes(*):java.lang.Object.notify()
sun.awt.tiny.TinyGraphics.drawChars(*):java.lang.Object.notify()
sun.awt.tiny.TinyGraphics.drawLine(*):java.lang.Object.notify()
sun.awt.tiny.TinyGraphics.drawString(*):java.lang.Object.notify()
sun.awt.tiny.TinyGraphics.fillArc(*):java.lang.Object.notify()
sun.awt.tiny.TinyGraphics.fillPolygon(*):java.lang.Object.notify()
sun.awt.tiny.TinyGraphics.fillRect(*):java.lang.Object.notify()
sun.awt.tiny.TinyInputThread.run(*):java.lang.Object.notify()
sun.awt.tiny.TinyInputThread.run(*):java.lang.Object.wait(J)
sun.awt.tiny.TinyWindow.winBack(*):java.lang.Object.notify()
sun.awt.tiny.TinyWindow.winBackground(*):java.lang.Object.notify()
sun.awt.tiny.TinyWindow.winCreate(*):java.lang.Object.notify()
sun.awt.tiny.TinyWindow.winDispose(*):java.lang.Object.notify()
sun.awt.tiny.TinyWindow.winFocus(*):java.lang.Object.notify()
sun.awt.tiny.TinyWindow.winFront(*):java.lang.Object.notify()
sun.awt.tiny.TinyWindow.winHide(*):java.lang.Object.notify()
sun.awt.tiny.TinyWindow.winReshape(*):java.lang.Object.notify()
sun.awt.tiny.TinyWindow.winShow(*):java.lang.Object.notify()

sun.awt.windows.ThemeReader.getColor(*):java.awt.Color.<init>(III)
sun.awt.windows.ThemeReader.getPartSize(*):java.awt.Dimension.<init>(II)
sun.awt.windows.WActiveEvent.dispatchImpl(*):sun.awt.windows.WWindowPeer.getFocusPeer()
sun.awt.windows.WActiveEvent.dispatchImpl(*):sun.awt.windows.WWindowPeer.setDefaultFocus()
sun.awt.windows.WBufferStrategy(*):java.awt.Component.getBackBuffer()
sun.awt.windows.WButtonPeer.create(*):java.awt.Color.<init>(III)
sun.awt.windows.WButtonPeer.create(*):java.awt.Component.resize(II)
sun.awt.windows.WButtonPeer.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WButtonPeer.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WButtonPeer.initIDs(*):java.awt.Button.label
sun.awt.windows.WCanvasPeer.create(*):java.awt.Component.resize(II)
sun.awt.windows.WCanvasPeer.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WCanvasPeer.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WCanvasPeer.resetTargetGC(*):java.awt.IllegalComponentStateException.<init>(Ljava/lang/String;)
sun.awt.windows.WCheckboxPeer.create(*):java.awt.Component.resize(II)
sun.awt.windows.WCheckboxPeer.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WCheckboxPeer.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WChoicePeer.addItems(*):countItems()
sun.awt.windows.WChoicePeer.addItems(*):getSelectedIndex()
sun.awt.windows.WChoicePeer.create(*):java.awt.Color.<init>(III)
sun.awt.windows.WChoicePeer.create(*):java.awt.Component.resize(II)
sun.awt.windows.WChoicePeer.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WChoicePeer.create(*):sun.awt.windows.WComponentPeer.preferredSize()
sun.awt.windows.WChoicePeer.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WChoicePeer.remove(*):countItems()
sun.awt.windows.WChoicePeer.remove(*):getSelectedIndex()
sun.awt.windows.WChoicePeer.removeAll(*):countItems()
sun.awt.windows.WChoicePeer.removeAll(*):getSelectedIndex()
sun.awt.windows.WChoicePeer.reshape(*):countItems()
sun.awt.windows.WChoicePeer.reshape(*):getSelectedIndex()
sun.awt.windows.WClipboard.init(*):lostSelectionOwnershipImpl()
sun.awt.windows.WClipboard.openClipboard(*):java.lang.IllegalStateException.<init>(Ljava/lang/String;)
sun.awt.windows.WClipboard.publishClipboardData(*):sun.awt.datatransfer.DataTransferer.convertData(Ljava/lang/Object;Ljava/awt/datatransfer/Transferable;JLjava/util/Map;Z)
sun.awt.windows.WClipboard.publishClipboardData(*):sun.awt.datatransfer.DataTransferer.getInstance()
sun.awt.windows.WColor.getDefaultColor(*):java.awt.Color.<init>(III)
sun.awt.windows.WComponentPeer._setBackground(*):java.awt.Component.isShowing()
sun.awt.windows.WComponentPeer._setBackground(*):java.awt.MenuComponent.isShowing()
sun.awt.windows.WComponentPeer._setBackground(*):sun.awt.windows.WPanelPeer.insets()
sun.awt.windows.WComponentPeer._setForeground(*):java.awt.Component.isShowing()
sun.awt.windows.WComponentPeer._setForeground(*):java.awt.MenuComponent.isShowing()
sun.awt.windows.WComponentPeer._setForeground(*):sun.awt.windows.WPanelPeer.insets()
sun.awt.windows.WComponentPeer.addNativeDropTarget(*):sun.awt.windows.WDropTargetContextPeer.getWDropTargetContextPeer()
sun.awt.windows.WComponentPeer.disable(*):java.awt.Component.isShowing()
sun.awt.windows.WComponentPeer.disable(*):java.awt.MenuComponent.isShowing()
sun.awt.windows.WComponentPeer.disable(*):sun.awt.windows.WPanelPeer.insets()
sun.awt.windows.WComponentPeer.enable(*):java.awt.Component.isShowing()
sun.awt.windows.WComponentPeer.enable(*):java.awt.MenuComponent.isShowing()
sun.awt.windows.WComponentPeer.enable(*):sun.awt.windows.WPanelPeer.insets()
sun.awt.windows.WComponentPeer.getLocationOnScreen(*):java.awt.Point.<init>(II)
sun.awt.windows.WComponentPeer.nativeHandleEvent(*):java.awt.event.MouseWheelEvent.getWheelRotation()
sun.awt.windows.WComponentPeer.setFont(*):java.util.Properties.getProperty(Ljava/lang/String;)
sun.awt.windows.WDefaultFontCharset.initIDs(*):fontName
sun.awt.windows.WDesktopProperties.initIDs(*):pData
sun.awt.windows.WDesktopProperties.initIDs(*):setBooleanProperty(Ljava/lang/String;Z)
sun.awt.windows.WDesktopProperties.initIDs(*):setColorProperty(Ljava/lang/String;III)
sun.awt.windows.WDesktopProperties.initIDs(*):setFontProperty(Ljava/lang/String;Ljava/lang/String;II)
sun.awt.windows.WDesktopProperties.initIDs(*):setIntegerProperty(Ljava/lang/String;I)
sun.awt.windows.WDesktopProperties.initIDs(*):setSoundProperty(Ljava/lang/String;Ljava/lang/String;)
sun.awt.windows.WDesktopProperties.initIDs(*):setStringProperty(Ljava/lang/String;Ljava/lang/String;)
sun.awt.windows.WDialogPeer.create(*):java.awt.Component.resize(II)
sun.awt.windows.WDialogPeer.create(*):setDefaultColor()
sun.awt.windows.WDialogPeer.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WDialogPeer.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WDragSourceContextPeer.Initialize(*):convertData(ILjava/util/Map;)
sun.awt.windows.WDragSourceContextPeer.Initialize(*):dragDropFinished(ZIIIZ)
sun.awt.windows.WDragSourceContextPeer.Initialize(*):getDropXHint()
sun.awt.windows.WDragSourceContextPeer.Initialize(*):getDropYHint()
sun.awt.windows.WDragSourceContextPeer.Initialize(*):getDroppedInWindowCR()
sun.awt.windows.WDragSourceContextPeer.Initialize(*):java.awt.event.InputEvent.modifiers
sun.awt.windows.WDragSourceContextPeer.Initialize(*):sun.awt.dnd.SunDragSourceContextPeer.dragEnter(III)
sun.awt.windows.WDragSourceContextPeer.Initialize(*):sun.awt.dnd.SunDragSourceContextPeer.dragExit()
sun.awt.windows.WDragSourceContextPeer.Initialize(*):sun.awt.dnd.SunDragSourceContextPeer.dragMotion(III)
sun.awt.windows.WDragSourceContextPeer.Initialize(*):sun.awt.dnd.SunDragSourceContextPeer.operationChanged(III)
sun.awt.windows.WDragSourceContextPeer.createDragSource(*):java.awt.dnd.InvalidDnDOperationException.<init>(Ljava/lang/String;)
sun.awt.windows.WDragSourceContextPeer.doDragDrop(*):sun.awt.datatransfer.DataTransferer.concatData(Ljava/lang/Object;Ljava/lang/Object;)
sun.awt.windows.WDragSourceContextPeer.doDragDrop(*):sun.awt.datatransfer.DataTransferer.convertData(Ljava/lang/Object;Ljava/awt/datatransfer/Transferable;JLjava/util/Map;Z)
sun.awt.windows.WDragSourceContextPeer.doDragDrop(*):sun.awt.datatransfer.DataTransferer.getInstance()
sun.awt.windows.WDragSourceContextPeer.doDragDrop(*):sun.awt.dnd.SunDragSourceContextPeer.dragDropFinished(ZIII)
sun.awt.windows.WDragSourceContextPeer.doDragDrop(*):sun.awt.dnd.SunDragSourceContextPeer.dragEnter(IIII)
sun.awt.windows.WDragSourceContextPeer.doDragDrop(*):sun.awt.dnd.SunDragSourceContextPeer.dragExit(II)
sun.awt.windows.WDragSourceContextPeer.doDragDrop(*):sun.awt.dnd.SunDragSourceContextPeer.dragMotion(IIII)
sun.awt.windows.WDragSourceContextPeer.doDragDrop(*):sun.awt.dnd.SunDragSourceContextPeer.dragMouseMoved(IIII)
sun.awt.windows.WDragSourceContextPeer.doDragDrop(*):sun.awt.dnd.SunDragSourceContextPeer.operationChanged(IIII)
sun.awt.windows.WDrawingSurfaceInfo.initIDs(*):h
sun.awt.windows.WDrawingSurfaceInfo.initIDs(*):pData
sun.awt.windows.WDrawingSurfaceInfo.initIDs(*):peer
sun.awt.windows.WDrawingSurfaceInfo.initIDs(*):state
sun.awt.windows.WDrawingSurfaceInfo.initIDs(*):w
sun.awt.windows.WDropTargetContextPeer.Initialize(*):getFileStream(Ljava/lang/String;I)
sun.awt.windows.WDropTargetContextPeer.Initialize(*):getIStream(I)
sun.awt.windows.WDropTargetContextPeer.Initialize(*):getWDropTargetContextPeer()
sun.awt.windows.WDropTargetContextPeer.Initialize(*):java.io.File.<init>(Ljava/lang/String;)
sun.awt.windows.WDropTargetContextPeer.Initialize(*):sun.awt.dnd.SunDropTargetContextPeer.handleDropMessage(Ljava/awt/Component;IIII[IJ)
sun.awt.windows.WDropTargetContextPeer.Initialize(*):sun.awt.dnd.SunDropTargetContextPeer.handleDropMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.windows.WDropTargetContextPeer.Initialize(*):sun.awt.dnd.SunDropTargetContextPeer.handleEnterMessage(Ljava/awt/Component;IIII[IJ)
sun.awt.windows.WDropTargetContextPeer.Initialize(*):sun.awt.dnd.SunDropTargetContextPeer.handleEnterMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.windows.WDropTargetContextPeer.Initialize(*):sun.awt.dnd.SunDropTargetContextPeer.handleExitMessage(Ljava/awt/Component;J)
sun.awt.windows.WDropTargetContextPeer.Initialize(*):sun.awt.dnd.SunDropTargetContextPeer.handleMotionMessage(Ljava/awt/Component;IIII[IJ)
sun.awt.windows.WDropTargetContextPeer.Initialize(*):sun.awt.dnd.SunDropTargetContextPeer.handleMotionMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.windows.WDropTargetContextPeer.getData(*):getFileStream(Ljava/lang/String;I)
sun.awt.windows.WDropTargetContextPeer.getData(*):getIStream(I)
sun.awt.windows.WDropTargetContextPeer.getData(*):sun.awt.datatransfer.DataTransferer.concatData(Ljava/lang/Object;Ljava/lang/Object;)
sun.awt.windows.WDropTargetContextPeer.getData(*):sun.awt.datatransfer.DataTransferer.convertData(Ljava/lang/Object;Ljava/awt/datatransfer/Transferable;JLjava/util/Map;Z)
sun.awt.windows.WDropTargetContextPeer.getData(*):sun.awt.datatransfer.DataTransferer.getInstance()
sun.awt.windows.WDropTargetContextPeer.getData(*):sun.awt.dnd.SunDropTargetContextPeer.handleDropMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.windows.WDropTargetContextPeer.getData(*):sun.awt.dnd.SunDropTargetContextPeer.handleEnterMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.windows.WDropTargetContextPeer.getData(*):sun.awt.dnd.SunDropTargetContextPeer.handleExitMessage(Ljava/awt/Component;J)
sun.awt.windows.WDropTargetContextPeer.getData(*):sun.awt.dnd.SunDropTargetContextPeer.handleMotionMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.windows.WDropTargetContextPeerIStream.Available(*):java.io.IOException.<init>(Ljava/lang/String;)
sun.awt.windows.WDropTargetContextPeerIStream.Read(*):java.io.IOException.<init>(Ljava/lang/String;)
sun.awt.windows.WDropTargetContextPeerIStream.ReadBytes(*):java.io.IOException.<init>(Ljava/lang/String;)
sun.awt.windows.WEmbeddedFrame.create(*):java.awt.Component.resize(II)
sun.awt.windows.WEmbeddedFrame.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WEmbeddedFrame.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WEmbeddedFrame.initIDs(*):handle
sun.awt.windows.WEmbeddedFrame.printBand(*):sun.awt.windows.WPrinterJob.mPrintDC
sun.awt.windows.WEmbeddedFrame.setThisPeer(*):java.awt.Component.peer
sun.awt.windows.WEmbeddedFramePeer.create(*):sun.awt.EmbeddedFrame.<init>()
sun.awt.windows.WEmbeddedFramePeer.create(*):sun.awt.im.InputMethodWindow.setInputContext(Lsun/awt/im/InputContext;)
sun.awt.windows.WFileDialogPeer.initIDs(*):checkFilenameFilter(Ljava/lang/String;)
sun.awt.windows.WFileDialogPeer.initIDs(*):fileFilter
sun.awt.windows.WFileDialogPeer.initIDs(*):handleCancel()
sun.awt.windows.WFileDialogPeer.initIDs(*):handleSelected(Ljava/lang/String;)
sun.awt.windows.WFileDialogPeer.initIDs(*):hwnd
sun.awt.windows.WFileDialogPeer.initIDs(*):java.awt.FileDialog.dir
sun.awt.windows.WFileDialogPeer.initIDs(*):java.awt.FileDialog.file
sun.awt.windows.WFileDialogPeer.initIDs(*):java.awt.FileDialog.filter
sun.awt.windows.WFileDialogPeer.initIDs(*):java.awt.FileDialog.mode
sun.awt.windows.WFileDialogPeer.initIDs(*):parent
sun.awt.windows.WFileDialogPeer.initIDs(*):setHWnd(J)
sun.awt.windows.WFontMetrics.init(*):java.util.Properties.getProperty(Ljava/lang/String;)
sun.awt.windows.WFontMetrics.initIDs(*):ascent
sun.awt.windows.WFontMetrics.initIDs(*):descent
sun.awt.windows.WFontMetrics.initIDs(*):height
sun.awt.windows.WFontMetrics.initIDs(*):leading
sun.awt.windows.WFontMetrics.initIDs(*):maxAdvance
sun.awt.windows.WFontMetrics.initIDs(*):maxAscent
sun.awt.windows.WFontMetrics.initIDs(*):maxDescent
sun.awt.windows.WFontMetrics.initIDs(*):maxHeight
sun.awt.windows.WFontMetrics.initIDs(*):widths
sun.awt.windows.WFontPeer.getFontCharset(*):sun.awt.CharToByteSymbol.<init>()
sun.awt.windows.WFontPeer.getFontCharset(*):sun.awt.windows.CharToByteWingDings.<init>()
sun.awt.windows.WFontPeer.getFontCharset(*):sun.io.CharToByteCp1252.<init>()
sun.awt.windows.WFontPeer.initIDs(*):textComponentFontName
sun.awt.windows.WFramePeer.createAwtFrame(*):java.awt.Component.resize(II)
sun.awt.windows.WFramePeer.createAwtFrame(*):sun.awt.EmbeddedFrame.<init>()
sun.awt.windows.WFramePeer.createAwtFrame(*):sun.awt.im.InputMethodWindow.setInputContext(Lsun/awt/im/InputContext;)
sun.awt.windows.WFramePeer.setState(*):java.awt.Window.focusableWindowState
sun.awt.windows.WGraphics.W32LockViewResources(*):checkNoDDraw()
sun.awt.windows.WGraphics.devClearRect(*):sun.java2d.SunGraphics2D.getBackground()
sun.awt.windows.WGraphics.getClipBounds(*):java.awt.Rectangle.<init>()
sun.awt.windows.WGraphics.initIDs(*):getFont()
sun.awt.windows.WGraphics.initIDs(*):pData
sun.awt.windows.WGraphics.initIDs(*):sun.java2d.SunGraphics2D.foregroundColor
sun.awt.windows.WGraphics.pSetFont(*):java.util.Properties.getProperty(Ljava/lang/String;)
sun.awt.windows.WInputMethod.getNativeLocale(*):java.util.Locale.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)
sun.awt.windows.WInputMethod.handleNativeIMEEvent(*):java.awt.AWTEvent.data
sun.awt.windows.WInputMethod.handleNativeIMEEvent(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIIC)
sun.awt.windows.WInputMethod.handleNativeIMEEvent(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIICI)
sun.awt.windows.WInputMethod.handleNativeIMEEvent(*):sun.awt.windows.WActiveEvent.<init>(Ljava/lang/Object;Lsun/awt/windows/WObjectPeer;J)
sun.awt.windows.WInputMethod.handleNativeIMEEvent(*):sun.awt.windows.WComponentPeer.postEvent(Ljava/awt/AWTEvent;)
sun.awt.windows.WInputMethodDescriptor.getNativeAvailableLocales(*):java.util.Locale.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)
sun.awt.windows.WLabelPeer.create(*):java.awt.Component.resize(II)
sun.awt.windows.WLabelPeer.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WLabelPeer.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WListPeer.create(*):java.awt.Color.<init>(III)
sun.awt.windows.WListPeer.create(*):java.awt.Component.resize(II)
sun.awt.windows.WListPeer.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WListPeer.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WListPeer.updateMaxItemWidth(*):java.awt.List.getItemImpl(I)
sun.awt.windows.WMenuItemPeer.initIDs(*):getDefaultFont()
sun.awt.windows.WMenuItemPeer.initIDs(*):isCheckbox
sun.awt.windows.WMenuItemPeer.initIDs(*):shortcutLabel
sun.awt.windows.WObjectPeer.initIDs(*):createError
sun.awt.windows.WObjectPeer.initIDs(*):destroyed
sun.awt.windows.WObjectPeer.initIDs(*):getPeerForTarget(Ljava/lang/Object;)
sun.awt.windows.WObjectPeer.initIDs(*):pData
sun.awt.windows.WObjectPeer.initIDs(*):target
sun.awt.windows.WPanelPeer.initIDs(*):insets_
sun.awt.windows.WPrintControl.initIDs(*):createPrintJob()
sun.awt.windows.WPrintControl.initIDs(*):dialogOwnerPeer
sun.awt.windows.WPrintControl.initIDs(*):findWin32Media(IIIZ)
sun.awt.windows.WPrintControl.initIDs(*):getWin32MediaAttrib()
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$DefaultSelectionType.ALL
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$DefaultSelectionType.RANGE
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$DefaultSelectionType.SELECTION
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$DestinationType.FILE
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$DestinationType.PRINTER
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$DialogType.COMMON
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$DialogType.NATIVE
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$DialogType.NONE
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_COLLATED_COPIES
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$SidesType.ONE_SIDED
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$SidesType.TWO_SIDED_LONG_EDGE
sun.awt.windows.WPrintControl.initIDs(*):java.awt.JobAttributes$SidesType.TWO_SIDED_SHORT_EDGE
sun.awt.windows.WPrintControl.initIDs(*):java.awt.PageAttributes$ColorType.COLOR
sun.awt.windows.WPrintControl.initIDs(*):java.awt.PageAttributes$ColorType.MONOCHROME
sun.awt.windows.WPrintControl.initIDs(*):java.awt.PageAttributes$OrientationRequestedType.LANDSCAPE
sun.awt.windows.WPrintControl.initIDs(*):java.awt.PageAttributes$OrientationRequestedType.PORTRAIT
sun.awt.windows.WPrintControl.initIDs(*):java.awt.PageAttributes$OriginType.PHYSICAL
sun.awt.windows.WPrintControl.initIDs(*):java.awt.PageAttributes$OriginType.PRINTABLE
sun.awt.windows.WPrintControl.initIDs(*):java.awt.PageAttributes$PrintQualityType.DRAFT
sun.awt.windows.WPrintControl.initIDs(*):java.awt.PageAttributes$PrintQualityType.HIGH
sun.awt.windows.WPrintControl.initIDs(*):java.awt.PageAttributes$PrintQualityType.NORMAL
sun.awt.windows.WPrintControl.initIDs(*):setWin32MediaAttrib(III)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.doctitle
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getColorAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getCopiesAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getDestAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getDialogAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getFileNameAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getFromPageAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getMDHAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getMaxPageAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getMinPageAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getOrientAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getOriginAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getPrintToFileEnabled()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getPrinterAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getQualityAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getResAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getSelectAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getSidesAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.getToPageAttrib()
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.setColorAttrib(Ljava/awt/PageAttributes$ColorType;)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.setCopiesAttrib(I)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.setDestAttrib(Ljava/awt/JobAttributes$DestinationType;)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.setFromPageAttrib(I)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.setMDHAttrib(Ljava/awt/JobAttributes$MultipleDocumentHandlingType;)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.setOrientAttrib(Ljava/awt/PageAttributes$OrientationRequestedType;)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.setPrinterAttrib(Ljava/lang/String;)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.setQualityAttrib(Ljava/awt/PageAttributes$PrintQualityType;)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.setSelectAttrib(Ljava/awt/JobAttributes$DefaultSelectionType;)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.setSidesAttrib(Ljava/awt/JobAttributes$SidesType;)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrintControl.setToPageAttrib(I)
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrinterCapabilities.capabilities
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrinterCapabilities.printerName
sun.awt.windows.WPrintControl.initIDs(*):sun.awt.print.PrinterCapabilities.sizes
sun.awt.windows.WPrintDialog.initIDs(*):control
sun.awt.windows.WPrintDialog.initIDs(*):job
sun.awt.windows.WPrintDialogPeer.initIDs(*):parent
sun.awt.windows.WPrintDialogPeer.initIDs(*):setHWnd(J)
sun.awt.windows.WPrintJob.initIDs(*):graphics
sun.awt.windows.WPrintJob.initIDs(*):pageDimension
sun.awt.windows.WPrintJob.initIDs(*):pageResolution
sun.awt.windows.WPrintJob.initIDs(*):truePageResolution
sun.awt.windows.WPrinterJob._startDoc(*):driverDoesCollation
sun.awt.windows.WPrinterJob._startDoc(*):driverDoesMultipleCopies
sun.awt.windows.WPrinterJob._startDoc(*):java.awt.print.PrinterException.<init>(Ljava/lang/String;)
sun.awt.windows.WPrinterJob._startDoc(*):mAttChromaticity
sun.awt.windows.WPrinterJob._startDoc(*):mAttCollate
sun.awt.windows.WPrinterJob._startDoc(*):mAttCopies
sun.awt.windows.WPrinterJob._startDoc(*):mAttMediaSizeName
sun.awt.windows.WPrinterJob._startDoc(*):mAttMediaTray
sun.awt.windows.WPrinterJob._startDoc(*):mAttOrientation
sun.awt.windows.WPrinterJob._startDoc(*):mAttQuality
sun.awt.windows.WPrinterJob._startDoc(*):mAttSides
sun.awt.windows.WPrinterJob._startDoc(*):mAttXRes
sun.awt.windows.WPrinterJob._startDoc(*):mAttYRes
sun.awt.windows.WPrinterJob._startDoc(*):mPageHeight
sun.awt.windows.WPrinterJob._startDoc(*):mPageWidth
sun.awt.windows.WPrinterJob._startDoc(*):mPrintDC
sun.awt.windows.WPrinterJob._startDoc(*):mPrintHDevMode
sun.awt.windows.WPrinterJob._startDoc(*):mPrintHDevNames
sun.awt.windows.WPrinterJob._startDoc(*):mPrintHeight
sun.awt.windows.WPrinterJob._startDoc(*):mPrintPhysX
sun.awt.windows.WPrinterJob._startDoc(*):mPrintPhysY
sun.awt.windows.WPrinterJob._startDoc(*):mPrintWidth
sun.awt.windows.WPrinterJob._startDoc(*):mPrintXRes
sun.awt.windows.WPrinterJob._startDoc(*):mPrintYRes
sun.awt.windows.WPrinterJob._startDoc(*):sun.java2d.RasterPrinterJob.getCopies()
sun.awt.windows.WPrinterJob._startDoc(*):sun.java2d.RasterPrinterJob.getJobName()
sun.awt.windows.WPrinterJob._startDoc(*):sun.print.RasterPrinterJob.getCopies()
sun.awt.windows.WPrinterJob._startDoc(*):sun.print.RasterPrinterJob.getJobName()
sun.awt.windows.WPrinterJob._startDoc(*):userRequestedCollation
sun.awt.windows.WPrinterJob.abortDoc(*):mPrintDC
sun.awt.windows.WPrinterJob.deleteDC(*):mPrintDC
sun.awt.windows.WPrinterJob.deleteDC(*):mPrintHDevMode
sun.awt.windows.WPrinterJob.deleteDC(*):mPrintHDevNames
sun.awt.windows.WPrinterJob.deviceEndPage(*):mPrintDC
sun.awt.windows.WPrinterJob.deviceStartPage(*):java.awt.print.PageFormat.getPaper()
sun.awt.windows.WPrinterJob.deviceStartPage(*):java.awt.print.Paper.getHeight()
sun.awt.windows.WPrinterJob.deviceStartPage(*):java.awt.print.Paper.getImageableHeight()
sun.awt.windows.WPrinterJob.deviceStartPage(*):java.awt.print.Paper.getImageableWidth()
sun.awt.windows.WPrinterJob.deviceStartPage(*):java.awt.print.Paper.getImageableX()
sun.awt.windows.WPrinterJob.deviceStartPage(*):java.awt.print.Paper.getImageableY()
sun.awt.windows.WPrinterJob.deviceStartPage(*):java.awt.print.Paper.getWidth()
sun.awt.windows.WPrinterJob.deviceStartPage(*):mPrintDC
sun.awt.windows.WPrinterJob.deviceStartPage(*):mPrintHDevMode
sun.awt.windows.WPrinterJob.deviceStartPage(*):mPrintHDevNames
sun.awt.windows.WPrinterJob.deviceStartPage(*):mPrintPaperSize
sun.awt.windows.WPrinterJob.endDoc(*):mPrintDC
sun.awt.windows.WPrinterJob.getDefaultPage(*):driverDoesCollation
sun.awt.windows.WPrinterJob.getDefaultPage(*):driverDoesMultipleCopies
sun.awt.windows.WPrinterJob.getDefaultPage(*):java.awt.print.PageFormat.LANDSCAPE
sun.awt.windows.WPrinterJob.getDefaultPage(*):java.awt.print.PageFormat.PORTRAIT
sun.awt.windows.WPrinterJob.getDefaultPage(*):java.awt.print.PageFormat.getPaper()
sun.awt.windows.WPrinterJob.getDefaultPage(*):java.awt.print.PageFormat.setOrientation(I)
sun.awt.windows.WPrinterJob.getDefaultPage(*):java.awt.print.PageFormat.setPaper(Ljava/awt/print/Paper;)
sun.awt.windows.WPrinterJob.getDefaultPage(*):java.awt.print.Paper.setImageableArea(DDDD)
sun.awt.windows.WPrinterJob.getDefaultPage(*):java.awt.print.Paper.setSize(DD)
sun.awt.windows.WPrinterJob.getDefaultPage(*):mAttOrientation
sun.awt.windows.WPrinterJob.getDefaultPage(*):mPageHeight
sun.awt.windows.WPrinterJob.getDefaultPage(*):mPageWidth
sun.awt.windows.WPrinterJob.getDefaultPage(*):mPrintHeight
sun.awt.windows.WPrinterJob.getDefaultPage(*):mPrintPhysX
sun.awt.windows.WPrinterJob.getDefaultPage(*):mPrintPhysY
sun.awt.windows.WPrinterJob.getDefaultPage(*):mPrintWidth
sun.awt.windows.WPrinterJob.getDefaultPage(*):mPrintXRes
sun.awt.windows.WPrinterJob.getDefaultPage(*):mPrintYRes
sun.awt.windows.WPrinterJob.getDefaultPage(*):noDefaultPrinter
sun.awt.windows.WPrinterJob.getDefaultPage(*):sun.print.RasterPrinterJob.getCopies()
sun.awt.windows.WPrinterJob.getDefaultPage(*):userRequestedCollation
sun.awt.windows.WPrinterJob.getNativePrintService(*):mPrintHDevNames
sun.awt.windows.WPrinterJob.initIDs(*):dialogOwnerPeer
sun.awt.windows.WPrinterJob.initIDs(*):driverDoesCollation
sun.awt.windows.WPrinterJob.initIDs(*):driverDoesMultipleCopies
sun.awt.windows.WPrinterJob.initIDs(*):getColorAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getCopiesAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getDestAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getDevMode()
sun.awt.windows.WPrinterJob.initIDs(*):getDevNames()
sun.awt.windows.WPrinterJob.initIDs(*):getFromPageAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getMDHAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getMaxPageAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getMinPageAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getOrientAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getPrintDC()
sun.awt.windows.WPrinterJob.initIDs(*):getPrintToFileEnabled()
sun.awt.windows.WPrinterJob.initIDs(*):getPrinterAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getQualityAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getSelectAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getSidesAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getToPageAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):getWin32MediaAttrib()
sun.awt.windows.WPrinterJob.initIDs(*):pjob
sun.awt.windows.WPrinterJob.initIDs(*):setDevMode(J)
sun.awt.windows.WPrinterJob.initIDs(*):setDevNames(J)
sun.awt.windows.WPrinterJob.initIDs(*):setNativeAttributes(II)
sun.awt.windows.WPrinterJob.initIDs(*):setPrintDC(J)
sun.awt.windows.WPrinterJob.initIDs(*):setPrinterNameAttrib(Ljava/lang/String;)
sun.awt.windows.WPrinterJob.initIDs(*):setRangeCopiesAttribute(IIZI)
sun.awt.windows.WPrinterJob.initIDs(*):setResolutionDPI(II)
sun.awt.windows.WPrinterJob.initIDs(*):setWin32MediaAttrib(III)
sun.awt.windows.WPrinterJob.initIDs(*):sun.awt.windows.WPrintDialogPeer.setHWnd(J)
sun.awt.windows.WPrinterJob.initPrinter(*):driverDoesCollation
sun.awt.windows.WPrinterJob.initPrinter(*):driverDoesMultipleCopies
sun.awt.windows.WPrinterJob.initPrinter(*):mPageHeight
sun.awt.windows.WPrinterJob.initPrinter(*):mPageWidth
sun.awt.windows.WPrinterJob.initPrinter(*):mPrintDC
sun.awt.windows.WPrinterJob.initPrinter(*):mPrintHDevMode
sun.awt.windows.WPrinterJob.initPrinter(*):mPrintHDevNames
sun.awt.windows.WPrinterJob.initPrinter(*):mPrintHeight
sun.awt.windows.WPrinterJob.initPrinter(*):mPrintPhysX
sun.awt.windows.WPrinterJob.initPrinter(*):mPrintPhysY
sun.awt.windows.WPrinterJob.initPrinter(*):mPrintWidth
sun.awt.windows.WPrinterJob.initPrinter(*):mPrintXRes
sun.awt.windows.WPrinterJob.initPrinter(*):mPrintYRes
sun.awt.windows.WPrinterJob.initPrinter(*):sun.java2d.RasterPrinterJob.getCopies()
sun.awt.windows.WPrinterJob.initPrinter(*):sun.print.RasterPrinterJob.getCopies()
sun.awt.windows.WPrinterJob.initPrinter(*):sun.print.RasterPrinterJob.landscapeRotates270
sun.awt.windows.WPrinterJob.initPrinter(*):userRequestedCollation
sun.awt.windows.WPrinterJob.jobSetup(*):driverDoesCollation
sun.awt.windows.WPrinterJob.jobSetup(*):driverDoesMultipleCopies
sun.awt.windows.WPrinterJob.jobSetup(*):getOrientAttrib()
sun.awt.windows.WPrinterJob.jobSetup(*):getWin32MediaAttrib()
sun.awt.windows.WPrinterJob.jobSetup(*):mPageHeight
sun.awt.windows.WPrinterJob.jobSetup(*):mPageWidth
sun.awt.windows.WPrinterJob.jobSetup(*):mPrintDC
sun.awt.windows.WPrinterJob.jobSetup(*):mPrintHDevMode
sun.awt.windows.WPrinterJob.jobSetup(*):mPrintHDevNames
sun.awt.windows.WPrinterJob.jobSetup(*):mPrintHeight
sun.awt.windows.WPrinterJob.jobSetup(*):mPrintPhysX
sun.awt.windows.WPrinterJob.jobSetup(*):mPrintPhysY
sun.awt.windows.WPrinterJob.jobSetup(*):mPrintWidth
sun.awt.windows.WPrinterJob.jobSetup(*):mPrintXRes
sun.awt.windows.WPrinterJob.jobSetup(*):mPrintYRes
sun.awt.windows.WPrinterJob.jobSetup(*):sun.java2d.RasterPrinterJob.getCopies()
sun.awt.windows.WPrinterJob.jobSetup(*):sun.java2d.RasterPrinterJob.getNumberOfPages()
sun.awt.windows.WPrinterJob.jobSetup(*):sun.java2d.RasterPrinterJob.setCopies(I)
sun.awt.windows.WPrinterJob.jobSetup(*):sun.java2d.RasterPrinterJob.setPageRange(II)
sun.awt.windows.WPrinterJob.jobSetup(*):sun.print.OpenBook.getNumberOfPages()
sun.awt.windows.WPrinterJob.jobSetup(*):sun.print.RasterPrinterJob.getCopies()
sun.awt.windows.WPrinterJob.jobSetup(*):sun.print.RasterPrinterJob.getNumberOfPages()
sun.awt.windows.WPrinterJob.jobSetup(*):sun.print.RasterPrinterJob.setCopies(I)
sun.awt.windows.WPrinterJob.jobSetup(*):sun.print.RasterPrinterJob.setPageRange(II)
sun.awt.windows.WPrinterJob.jobSetup(*):userRequestedCollation
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.PageFormat.LANDSCAPE
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.PageFormat.PORTRAIT
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.PageFormat.getOrientation()
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.PageFormat.getPaper()
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.PageFormat.setOrientation(I)
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.PageFormat.setPaper(Ljava/awt/print/Paper;)
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.Paper.getHeight()
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.Paper.getImageableHeight()
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.Paper.getImageableWidth()
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.Paper.getImageableX()
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.Paper.getImageableY()
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.Paper.getWidth()
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.Paper.setImageableArea(DDDD)
sun.awt.windows.WPrinterJob.pageSetup(*):java.awt.print.Paper.setSize(DD)
sun.awt.windows.WPrinterJob.pageSetup(*):mPrintDC
sun.awt.windows.WPrinterJob.pageSetup(*):mPrintHDevMode
sun.awt.windows.WPrinterJob.pageSetup(*):mPrintHDevNames
sun.awt.windows.WPrinterJob.pageSetup(*):mPrintPaperSize
sun.awt.windows.WPrinterJob.printBand(*):mPrintDC
sun.awt.windows.WPrinterJob.setLogicalFont(*):java.util.Properties.getProperty(Ljava/lang/String;)
sun.awt.windows.WPrinterJob.setNativePrintService(*):driverDoesCollation
sun.awt.windows.WPrinterJob.setNativePrintService(*):driverDoesMultipleCopies
sun.awt.windows.WPrinterJob.setNativePrintService(*):mAttOrientation
sun.awt.windows.WPrinterJob.setNativePrintService(*):mPageHeight
sun.awt.windows.WPrinterJob.setNativePrintService(*):mPageWidth
sun.awt.windows.WPrinterJob.setNativePrintService(*):mPrintDC
sun.awt.windows.WPrinterJob.setNativePrintService(*):mPrintHDevMode
sun.awt.windows.WPrinterJob.setNativePrintService(*):mPrintHDevNames
sun.awt.windows.WPrinterJob.setNativePrintService(*):mPrintHeight
sun.awt.windows.WPrinterJob.setNativePrintService(*):mPrintPhysX
sun.awt.windows.WPrinterJob.setNativePrintService(*):mPrintPhysY
sun.awt.windows.WPrinterJob.setNativePrintService(*):mPrintWidth
sun.awt.windows.WPrinterJob.setNativePrintService(*):mPrintXRes
sun.awt.windows.WPrinterJob.setNativePrintService(*):mPrintYRes
sun.awt.windows.WPrinterJob.setNativePrintService(*):userRequestedCollation
sun.awt.windows.WPrinterJob.validatePaper(*):java.awt.print.Paper.getHeight()
sun.awt.windows.WPrinterJob.validatePaper(*):java.awt.print.Paper.getImageableHeight()
sun.awt.windows.WPrinterJob.validatePaper(*):java.awt.print.Paper.getImageableWidth()
sun.awt.windows.WPrinterJob.validatePaper(*):java.awt.print.Paper.getImageableX()
sun.awt.windows.WPrinterJob.validatePaper(*):java.awt.print.Paper.getImageableY()
sun.awt.windows.WPrinterJob.validatePaper(*):java.awt.print.Paper.getWidth()
sun.awt.windows.WPrinterJob.validatePaper(*):java.awt.print.Paper.setImageableArea(DDDD)
sun.awt.windows.WPrinterJob.validatePaper(*):java.awt.print.Paper.setSize(DD)
sun.awt.windows.WPrinterJob.validatePaper(*):mPrintDC
sun.awt.windows.WPrinterJob.validatePaper(*):mPrintHDevMode
sun.awt.windows.WPrinterJob.validatePaper(*):mPrintHDevNames
sun.awt.windows.WPrinterJob.validatePaper(*):mPrintPaperSize
sun.awt.windows.WScrollPanePeer.create(*):java.awt.Component.resize(II)
sun.awt.windows.WScrollPanePeer.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WScrollPanePeer.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WScrollPanePeer.initIDs(*):postScrollEvent(III)
sun.awt.windows.WScrollPanePeer.initIDs(*):postScrollEvent(IIIZ)
sun.awt.windows.WScrollbarPeer.create(*):java.awt.Color.<init>(III)
sun.awt.windows.WScrollbarPeer.create(*):java.awt.Component.resize(II)
sun.awt.windows.WScrollbarPeer.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WScrollbarPeer.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WTextAreaPeer.create(*):java.awt.Color.<init>(III)
sun.awt.windows.WTextAreaPeer.create(*):java.awt.Component.resize(II)
sun.awt.windows.WTextAreaPeer.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WTextAreaPeer.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WTextComponentPeer.initIDs(*):java.awt.TextComponent.canAccessClipboard
sun.awt.windows.WTextFieldPeer.create(*):java.awt.Color.<init>(III)
sun.awt.windows.WTextFieldPeer.create(*):java.awt.Component.resize(II)
sun.awt.windows.WTextFieldPeer.create(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WTextFieldPeer.create(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WToolkit.embeddedInit(*):java.lang.Runtime.gc()
sun.awt.windows.WToolkit.embeddedInit(*):java.lang.Runtime.getRuntime()
sun.awt.windows.WToolkit.embeddedInit(*):java.lang.Runtime.totalMemory()
sun.awt.windows.WToolkit.eventLoop(*):java.awt.AWTEvent.data
sun.awt.windows.WToolkit.eventLoop(*):java.awt.Choice.getItemImpl(I)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.Color.<init>(III)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.Component.getFont_NoClientCode()
sun.awt.windows.WToolkit.eventLoop(*):java.awt.Component.resize(II)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.Dialog.<init>(Ljava/awt/Frame;)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.Font.getName()
sun.awt.windows.WToolkit.eventLoop(*):java.awt.FontMetrics.getHeight()
sun.awt.windows.WToolkit.eventLoop(*):java.awt.List.getItemImpl(I)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.Menu.getItemImpl(I)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.MenuComponent.getFont_NoClientCode()
sun.awt.windows.WToolkit.eventLoop(*):java.awt.Point.x
sun.awt.windows.WToolkit.eventLoop(*):java.awt.Point.y
sun.awt.windows.WToolkit.eventLoop(*):java.awt.SequencedEvent.<init>(Ljava/awt/AWTEvent;)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.SystemColor.updateSystemColors()
sun.awt.windows.WToolkit.eventLoop(*):java.awt.Window.focusableWindowState
sun.awt.windows.WToolkit.eventLoop(*):java.awt.event.ComponentEvent.<init>(Ljava/awt/Component;I)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZ)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.event.FocusEvent.<init>(Ljava/awt/Component;IZLjava/awt/Component;)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIIC)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.event.KeyEvent.<init>(Ljava/awt/Component;IJIICI)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.event.MouseEvent.<init>(Ljava/awt/Component;IJIIIIIIZI)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.event.MouseEvent.<init>(Ljava/awt/Component;IJIIIIZ)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.event.MouseEvent.<init>(Ljava/awt/Component;IJIIIIZI)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.event.MouseWheelEvent.<init>(Ljava/awt/Component;IJIIIIZIII)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.event.WindowEvent.<init>(Ljava/awt/Window;I)
sun.awt.windows.WToolkit.eventLoop(*):java.awt.event.WindowEvent.<init>(Ljava/awt/Window;ILjava/awt/Window;II)
sun.awt.windows.WToolkit.eventLoop(*):java.lang.Class.getName()
sun.awt.windows.WToolkit.eventLoop(*):java.lang.RuntimeException.<init>(Ljava/lang/String;)
sun.awt.windows.WToolkit.eventLoop(*):java.lang.String.concat(Ljava/lang/String;)
sun.awt.windows.WToolkit.eventLoop(*):java.util.Properties.getProperty(Ljava/lang/String;)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.AWTAutoShutdown.notifyToolkitThreadBusy()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.AWTAutoShutdown.notifyToolkitThreadFree()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.dnd.SunDragSourceContextPeer.dragDropFinished(ZIII)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.dnd.SunDragSourceContextPeer.dragEnter(IIII)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.dnd.SunDragSourceContextPeer.dragExit(II)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.dnd.SunDragSourceContextPeer.dragMotion(IIII)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.dnd.SunDragSourceContextPeer.dragMouseMoved(IIII)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.dnd.SunDropTargetContextPeer.handleDropMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.dnd.SunDropTargetContextPeer.handleEnterMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.dnd.SunDropTargetContextPeer.handleExitMessage(Ljava/awt/Component;J)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.dnd.SunDropTargetContextPeer.handleMotionMessage(Ljava/awt/Component;IIII[JJ)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.font.FontDesignMetrics.getHeight()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WActiveEvent.<init>(Ljava/lang/Object;Lsun/awt/windows/WObjectPeer;J)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WButtonPeer.handleAction()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WButtonPeer.handleAction(JI)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WCanvasPeer.eraseBackgroundDisabled
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WCanvasPeer.eraseBackgroundOnResize
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WCheckboxMenuItemPeer.handleAction(Z)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WCheckboxMenuItemPeer.handleAction(ZI)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WCheckboxPeer.handleAction(Z)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WChoicePeer.handleAction(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WComponentPeer.dynamicallyLayoutContainer()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WComponentPeer.handleExpose(IIII)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WComponentPeer.handlePaint(IIII)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WComponentPeer.isConsumeWM_HELPEnabled
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WComponentPeer.isFocusFixTrue
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WComponentPeer.postEvent(Ljava/awt/AWTEvent;)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WComponentPeer.preferredSize()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WDialogPeer.notifyIMMOptionChange()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WDialogPeer.setDefaultColor()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WDropTargetContextPeer.getWDropTargetContextPeer()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WFramePeer.keepOnMinimize
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WFramePeer.notifyIMMOptionChange()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WGlobalCursorManager.nativeUpdateCursor(Ljava/awt/Component;)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WInputMethod.context
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WInputMethod.inquireCandidatePosition()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WInputMethod.sendInputMethodEvent(IJLjava/lang/String;[I[Ljava/lang/String;[I[BIII)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WInputMethod.sendInputMethodEvent(ILjava/lang/String;[I[Ljava/lang/String;[I[BIII)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WListPeer.handleAction(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WListPeer.handleAction(IJI)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WListPeer.handleListChanged(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WListPeer.preferredSize(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WMenuItemPeer.handleAction(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WMenuItemPeer.handleAction(JI)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WScrollbarPeer.drag(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WScrollbarPeer.dragAbsolute(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WScrollbarPeer.dragBegin(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WScrollbarPeer.dragEnd(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WScrollbarPeer.lineDown(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WScrollbarPeer.lineUp(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WScrollbarPeer.pageDown(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WScrollbarPeer.pageUp(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WScrollbarPeer.warp(I)
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WTextComponentPeer.valueChanged()
sun.awt.windows.WToolkit.eventLoop(*):sun.awt.windows.WWindowPeer.draggedToNewScreen()
sun.awt.windows.WToolkit.eventLoop(*):sun.font.FontDesignMetrics.getHeight()
sun.awt.windows.WToolkit.eventLoop(*):sun.font.StrikeCache$2.run()
sun.awt.windows.WToolkit.eventLoop(*):sun.java2d.d3d.D3DGraphicsDevice$1.run()
sun.awt.windows.WToolkit.eventLoop(*):sun.java2d.d3d.D3DRenderQueue$1.run()
sun.awt.windows.WToolkit.eventLoop(*):sun.java2d.d3d.D3DSurfaceData$1.run()
sun.awt.windows.WToolkit.eventLoop(*):sun.java2d.d3d.D3DSurfaceData.setSurfaceLost(Z)
sun.awt.windows.WToolkit.eventLoop(*):sun.java2d.pipe.hw.AccelDeviceEventNotifier.eventOccured(II)
sun.awt.windows.WToolkit.init(*):java.awt.GraphicsEnvironment.isHeadless()
sun.awt.windows.WToolkit.init(*):java.awt.Toolkit.getProperty(Ljava/lang/String;Ljava/lang/String;)
sun.awt.windows.WToolkit.init(*):java.lang.Runtime.gc()
sun.awt.windows.WToolkit.init(*):java.lang.Runtime.getRuntime()
sun.awt.windows.WToolkit.init(*):java.lang.Runtime.totalMemory()
sun.awt.windows.WToolkit.init(*):java.util.logging.Logger.getLogger(Ljava/lang/String;)
sun.awt.windows.WToolkit.init(*):java.util.logging.Logger.warning(Ljava/lang/String;)
sun.awt.windows.WToolkit.initIDs(*):displayChange()
sun.awt.windows.WToolkit.initIDs(*):displayChanged()
sun.awt.windows.WToolkit.initIDs(*):java.lang.String.<init>([B)
sun.awt.windows.WToolkit.initIDs(*):java.lang.String.getBytes()
sun.awt.windows.WToolkit.initIDs(*):sun.awt.image.SunVolatileImage.surfaceData
sun.awt.windows.WToolkit.initIDs(*):sun.awt.image.SunVolatileImage.surfaceManager
sun.awt.windows.WToolkit.initIDs(*):sun.awt.image.SunVolatileImage.volSurfaceManager
sun.awt.windows.WToolkit.initIDs(*):sun.awt.image.VolatileSurfaceManager.sdCurrent
sun.awt.windows.WToolkit.initIDs(*):sun.java2d.SurfaceData.pData
sun.awt.windows.WToolkit.initIDs(*):windowsSettingChange()
sun.awt.windows.WToolkit.makeColorModel(*):java.awt.color.ColorSpace.getInstance(I)
sun.awt.windows.WToolkit.makeColorModel(*):java.awt.image.ComponentColorModel.<init>(Ljava/awt/color/ColorSpace;[IZZII)
sun.awt.windows.WToolkit.makeColorModel(*):java.awt.image.DirectColorModel.<init>(IIII)
sun.awt.windows.WToolkit.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[IIILjava/math/BigInteger;)
sun.awt.windows.WToolkit.makeColorModel(*):java.awt.image.IndexColorModel.<init>(II[IIZII)
sun.awt.windows.WToolkit.makeColorModel(*):java.math.BigInteger.<init>([B)
sun.awt.windows.WToolkit.makeColorModel(*):sun.awt.Win32ColorModel24.<init>()
sun.awt.windows.WWindowPeer._toFront(*):java.awt.Window.focusableWindowState
sun.awt.windows.WWindowPeer.createAwtWindow(*):java.awt.Component.resize(II)
sun.awt.windows.WWindowPeer.createAwtWindow(*):sun.awt.windows.WComponentPeer.isFocusFixEnabled
sun.awt.windows.WWindowPeer.createAwtWindow(*):sun.awt.windows.WComponentPeer.setBackground(Ljava/awt/Color;)
sun.awt.windows.WWindowPeer.getScreenImOn(*):java.awt.IllegalComponentStateException.<init>(Ljava/lang/String;)
sun.awt.windows.WWindowPeer.initIDs(*):focusableWindow
sun.awt.windows.WWindowPeer.initIDs(*):sysH
sun.awt.windows.WWindowPeer.initIDs(*):sysW
sun.awt.windows.WWindowPeer.initIDs(*):sysX
sun.awt.windows.WWindowPeer.initIDs(*):sysY
sun.awt.windows.WWindowPeer.toBack(*):java.awt.Window.focusableWindowState
sun.awt.windows.WWindowPeer.updateInsets(*):java.awt.Dialog.<init>(Ljava/awt/Frame;)
sun.awt.windows.Win32GdiBlitLoops.initIDs(*):bmask
sun.awt.windows.Win32GdiBlitLoops.initIDs(*):gmask
sun.awt.windows.Win32GdiBlitLoops.initIDs(*):rmask
sun.awt.windows.Win32OffScreenImage.initIDs(*):java.awt.image.BufferedImage.sData
sun.awt.windows.Win32OffScreenSurfaceData.initIDs(*):d3dClippingEnabled
sun.awt.windows.Win32OffScreenSurfaceData.initIDs(*):ddSurfacePunted
sun.awt.windows.Win32OffScreenSurfaceData.initIDs(*):localD3dEnabled
sun.awt.windows.Win32OffScreenSurfaceData.initIDs(*):markSurfaceLost()
sun.awt.windows.Win32OffScreenSurfaceData.initOps(*):sun.java2d.Disposer.addRecord(Lsun/java2d/DisposerTarget;JJ)
sun.awt.windows.Win32OffScreenSurfaceData.initSurface(*):sun.java2d.InvalidPipeException.<init>(Ljava/lang/String;)
sun.awt.windows.Win32Renderer.doFillOval(*):sun.java2d.InvalidPipeException.<init>(Ljava/lang/String;)
sun.awt.windows.Win32Renderer.initIDs(*):java.awt.geom.GeneralPath.numTypes
sun.awt.windows.Win32Renderer.initIDs(*):java.awt.geom.GeneralPath.pointCoords
sun.awt.windows.Win32Renderer.initIDs(*):java.awt.geom.GeneralPath.pointTypes
sun.awt.windows.Win32Renderer.initIDs(*):java.awt.geom.GeneralPath.windingRule
sun.awt.windows.Win32SurfaceData.initIDs(*):java.lang.Thread.currentThread()
sun.awt.windows.Win32SurfaceData.initOps(*):java.lang.NullPointerException.<init>(Ljava/lang/String;)
sun.awt.windows.Win32SurfaceData.initOps(*):sun.java2d.Disposer.addRecord(Lsun/java2d/DisposerTarget;JJ)

sun.dc.pr.PathDasher.beginPath(*):sun.dc.path.PathError.<init>(Ljava/lang/String;)
sun.dc.pr.PathDasher.cClassInitialize(*):cData
sun.dc.pr.PathDasher.cClassInitialize(*):sun.dc.path.PathConsumer.appendCubic(FFFFFF)
sun.dc.pr.PathDasher.cClassInitialize(*):sun.dc.path.PathConsumer.appendLine(FF)
sun.dc.pr.PathDasher.cClassInitialize(*):sun.dc.path.PathConsumer.appendQuadratic(FFFF)
sun.dc.pr.PathDasher.cClassInitialize(*):sun.dc.path.PathConsumer.beginPath()
sun.dc.pr.PathDasher.cClassInitialize(*):sun.dc.path.PathConsumer.beginSubpath(FF)
sun.dc.pr.PathDasher.cClassInitialize(*):sun.dc.path.PathConsumer.closedSubpath()
sun.dc.pr.PathDasher.cClassInitialize(*):sun.dc.path.PathConsumer.endPath()
sun.dc.pr.PathDasher.cClassInitialize(*):sun.dc.path.PathConsumer.useProxy(Lsun/dc/path/FastPathProducer;)
sun.dc.pr.PathDasher.cInitialize(*):sun.dc.path.PathConsumer.getCPathConsumer()
sun.dc.pr.PathDasher.cInitialize(*):sun.dc.pr.PathStroker.getCPathConsumer()
sun.dc.pr.PathDasher.cInitialize(*):sun.java2d.Disposer.addRecord(Lsun/java2d/DisposerTarget;JJ)
sun.dc.pr.PathDasher.endPath(*):sun.dc.path.PathException.<init>(Ljava/lang/String;)
sun.dc.pr.PathDasher.setOutputConsumer(*):sun.dc.path.PathConsumer.getCPathConsumer()
sun.dc.pr.PathDasher.setOutputConsumer(*):sun.dc.pr.PRError.<init>(Ljava/lang/String;)
sun.dc.pr.PathFiller.beginPath(*):sun.dc.path.PathError.<init>(Ljava/lang/String;)
sun.dc.pr.PathFiller.cClassInitialize(*):EOFILL
sun.dc.pr.PathFiller.cClassInitialize(*):cData
sun.dc.pr.PathFiller.cClassInitialize(*):java.lang.Object.<init>()
sun.dc.pr.PathFiller.cClassInitialize(*):sun.dc.path.PathConsumer.appendCubic(FFFFFF)
sun.dc.pr.PathFiller.cClassInitialize(*):sun.dc.path.PathConsumer.appendLine(FF)
sun.dc.pr.PathFiller.cClassInitialize(*):sun.dc.path.PathConsumer.appendQuadratic(FFFF)
sun.dc.pr.PathFiller.cClassInitialize(*):sun.dc.path.PathConsumer.beginPath()
sun.dc.pr.PathFiller.cClassInitialize(*):sun.dc.path.PathConsumer.beginSubpath(FF)
sun.dc.pr.PathFiller.cClassInitialize(*):sun.dc.path.PathConsumer.closedSubpath()
sun.dc.pr.PathFiller.cClassInitialize(*):sun.dc.path.PathConsumer.endPath()
sun.dc.pr.PathFiller.cClassInitialize(*):sun.dc.path.PathConsumer.useProxy(Lsun/dc/path/FastPathProducer;)
sun.dc.pr.PathFiller.cClassInitialize(*):tileSize
sun.dc.pr.PathFiller.cClassInitialize(*):tileSizeF
sun.dc.pr.PathFiller.cClassInitialize(*):tileSizeL2S
sun.dc.pr.PathFiller.endPath(*):sun.dc.path.PathException.<init>(Ljava/lang/String;)
sun.dc.pr.PathFiller.setOutputArea(*):sun.dc.pr.PRError.<init>(Ljava/lang/String;)
sun.dc.pr.PathFiller.setOutputArea(*):sun.dc.pr.PRException.<init>(Ljava/lang/String;)
sun.dc.pr.PathStroker.beginPath(*):sun.dc.path.PathError.<init>(Ljava/lang/String;)
sun.dc.pr.PathStroker.cClassInitialize(*):BEVEL
sun.dc.pr.PathStroker.cClassInitialize(*):BUTT
sun.dc.pr.PathStroker.cClassInitialize(*):MITER
sun.dc.pr.PathStroker.cClassInitialize(*):ROUND
sun.dc.pr.PathStroker.cClassInitialize(*):SQUARE
sun.dc.pr.PathStroker.cClassInitialize(*):cData
sun.dc.pr.PathStroker.cClassInitialize(*):sun.dc.path.PathConsumer.appendCubic(FFFFFF)
sun.dc.pr.PathStroker.cClassInitialize(*):sun.dc.path.PathConsumer.appendLine(FF)
sun.dc.pr.PathStroker.cClassInitialize(*):sun.dc.path.PathConsumer.appendQuadratic(FFFF)
sun.dc.pr.PathStroker.cClassInitialize(*):sun.dc.path.PathConsumer.beginPath()
sun.dc.pr.PathStroker.cClassInitialize(*):sun.dc.path.PathConsumer.beginSubpath(FF)
sun.dc.pr.PathStroker.cClassInitialize(*):sun.dc.path.PathConsumer.closedSubpath()
sun.dc.pr.PathStroker.cClassInitialize(*):sun.dc.path.PathConsumer.endPath()
sun.dc.pr.PathStroker.cClassInitialize(*):sun.dc.path.PathConsumer.useProxy(Lsun/dc/path/FastPathProducer;)
sun.dc.pr.PathStroker.cInitialize(*):java.awt.BasicStroke$FillAdapter.getCPathConsumer()
sun.dc.pr.PathStroker.cInitialize(*):sun.dc.path.PathConsumer.getCPathConsumer()
sun.dc.pr.PathStroker.cInitialize(*):sun.dc.pr.PathFiller.getCPathConsumer()
sun.dc.pr.PathStroker.cInitialize(*):sun.java2d.Disposer.addRecord(Lsun/java2d/DisposerTarget;JJ)
sun.dc.pr.PathStroker.cInitialize(*):sun.java2d.pipe.ShapeSpanIterator.getCPathConsumer()
sun.dc.pr.PathStroker.endPath(*):sun.dc.path.PathException.<init>(Ljava/lang/String;)
sun.dc.pr.PathStroker.setOutputConsumer(*):sun.dc.path.PathConsumer.getCPathConsumer()
sun.dc.pr.PathStroker.setOutputConsumer(*):sun.dc.pr.PRError.<init>(Ljava/lang/String;)

sun.java2d.DefaultDisposerRecord.invokeNativeDispose(*):sun.java2d.d3d.D3DSurfaceData.dispose(J)
sun.java2d.Disposer.initIDs(*):addRecord(Ljava/lang/Object;JJ)
sun.java2d.Disposer.initIDs(*):addRecord(Lsun/java2d/DisposerTarget;JJ)
sun.java2d.SurfaceData.initIDs(*):dirty
sun.java2d.SurfaceData.initIDs(*):java.awt.image.IndexColorModel.allgrayopaque
sun.java2d.SurfaceData.initIDs(*):needsBackup
sun.java2d.SurfaceData.initIDs(*):numCopies
sun.java2d.SurfaceData.initIDs(*):pData
sun.java2d.SurfaceData.initIDs(*):sun.java2d.InvalidPipeException.<init>(Ljava/lang/String;)
sun.java2d.SurfaceData.initIDs(*):sun.java2d.NullSurfaceData.<init>()
sun.java2d.SurfaceData.initIDs(*):sun.java2d.pipe.Region.hix
sun.java2d.SurfaceData.initIDs(*):sun.java2d.pipe.Region.hiy
sun.java2d.SurfaceData.initIDs(*):sun.java2d.pipe.Region.lox
sun.java2d.SurfaceData.initIDs(*):sun.java2d.pipe.Region.loy
sun.java2d.SurfaceData.initIDs(*):valid

sun.java2d.loops.Blit.Blit(*):sun.java2d.InvalidPipeException.<init>(Ljava/lang/String;)
sun.java2d.loops.DefaultComponent.IntRgbToBinary(*):java.awt.image.IndexColorModel.map_size
sun.java2d.loops.DefaultComponent.IntRgbToBinary(*):java.awt.image.IndexColorModel.rgb
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.AlphaComposite.extraAlpha
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.AlphaComposite.rule
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.Color.getRGB()
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.Color.value
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.geom.AffineTransform.m00
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.geom.AffineTransform.m01
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.geom.AffineTransform.m02
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.geom.AffineTransform.m10
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.geom.AffineTransform.m11
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.geom.AffineTransform.m12
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.geom.Path2D$Float.floatCoords
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.geom.Path2D.numTypes
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.geom.Path2D.pointTypes
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):java.awt.geom.Path2D.windingRule
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):register([Lsun/java2d/loops/GraphicsPrimitive;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.awt.SunHints.INTVAL_STROKE_PURE
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.SunGraphics2D.clipRegion
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.SunGraphics2D.composite
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.SunGraphics2D.eargb
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.SunGraphics2D.lcdTextContrast
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.SunGraphics2D.pixel
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.SunGraphics2D.rgb
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.SunGraphics2D.strokeHint
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.Blit.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.BlitBg.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.CompositeType.AnyAlpha
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.CompositeType.Src
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.CompositeType.SrcNoEa
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.CompositeType.SrcOver
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.CompositeType.SrcOverNoEa
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.CompositeType.Xor
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.DrawGlyphList.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.DrawGlyphListAA.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.DrawGlyphListLCD.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.DrawLine.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.DrawPath.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.DrawPolygons.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.DrawRect.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.FillPath.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.FillRect.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.FillSpans.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.GraphicsPrimitive.pNativePrim
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.MaskBlit.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.MaskFill.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.ScaledBlit.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.Any3Byte
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.Any4Byte
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.AnyByte
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.AnyColor
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.AnyInt
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.AnyShort
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.ByteBinary1Bit
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.ByteBinary2Bit
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.ByteBinary4Bit
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.ByteGray
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.ByteIndexed
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.ByteIndexedBm
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.FourByteAbgr
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.FourByteAbgrPre
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.Index12Gray
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.Index8Gray
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.IntArgb
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.IntArgbBm
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.IntArgbPre
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.IntBgr
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.IntRgb
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.IntRgbx
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.OpaqueColor
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.ThreeByteBgr
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.Ushort4444Argb
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.Ushort555Rgb
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.Ushort555Rgbx
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.Ushort565Rgb
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.UshortGray
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.SurfaceType.UshortIndexed
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.TransformHelper.<init>(JLsun/java2d/loops/SurfaceType;Lsun/java2d/loops/CompositeType;Lsun/java2d/loops/SurfaceType;)
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.XORComposite.alphaMask
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.XORComposite.xorColor
sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(*):sun.java2d.loops.XORComposite.xorPixel
sun.java2d.loops.GraphicsPrimitiveProxy.instantiate(*):sun.java2d.loops.SetFillRectANY.<init>()
sun.java2d.loops.ImageData.initIDs(*):baData
sun.java2d.loops.ImageData.initIDs(*):java.awt.image.IndexColorModel.map_size
sun.java2d.loops.ImageData.initIDs(*):java.awt.image.IndexColorModel.rgb
sun.java2d.loops.ImageData.initIDs(*):naData
sun.java2d.loops.ImageData.initIDs(*):naLutData
sun.java2d.loops.ImageData.initIDs(*):originX
sun.java2d.loops.ImageData.initIDs(*):originY
sun.java2d.loops.ImageData.initIDs(*):saData
sun.java2d.loops.ImageData.initIDs(*):theBytePerChannel
sun.java2d.loops.ImageData.initIDs(*):theColorModel
sun.java2d.loops.ImageData.initIDs(*):theDXDeviceArea
sun.java2d.loops.ImageData.initIDs(*):theDXOutputArea
sun.java2d.loops.ImageData.initIDs(*):theDXViewArea
sun.java2d.loops.ImageData.initIDs(*):theDYDeviceArea
sun.java2d.loops.ImageData.initIDs(*):theDYOutputArea
sun.java2d.loops.ImageData.initIDs(*):theDYViewArea
sun.java2d.loops.ImageData.initIDs(*):theDataPointer
sun.java2d.loops.ImageData.initIDs(*):theDeviceInfo
sun.java2d.loops.ImageData.initIDs(*):theGrayInverseLutData
sun.java2d.loops.ImageData.initIDs(*):theLockFunction
sun.java2d.loops.ImageData.initIDs(*):theLockMethod
sun.java2d.loops.ImageData.initIDs(*):theLutData
sun.java2d.loops.ImageData.initIDs(*):theLutDataLength
sun.java2d.loops.ImageData.initIDs(*):theNumChannels
sun.java2d.loops.ImageData.initIDs(*):thePixelStride
sun.java2d.loops.ImageData.initIDs(*):thePixelsPerDataUnit
sun.java2d.loops.ImageData.initIDs(*):thePlatformInfo
sun.java2d.loops.ImageData.initIDs(*):theResRatio
sun.java2d.loops.ImageData.initIDs(*):theScaleFactorX
sun.java2d.loops.ImageData.initIDs(*):theScaleFactorY
sun.java2d.loops.ImageData.initIDs(*):theScanlineStride
sun.java2d.loops.ImageData.initIDs(*):theType
sun.java2d.loops.ImageData.initIDs(*):theXDeviceArea
sun.java2d.loops.ImageData.initIDs(*):theXOutputArea
sun.java2d.loops.ImageData.initIDs(*):theXViewArea
sun.java2d.loops.ImageData.initIDs(*):theYDeviceArea
sun.java2d.loops.ImageData.initIDs(*):theYOutputArea
sun.java2d.loops.ImageData.initIDs(*):theYViewArea
sun.java2d.loops.ImageData.isAllOpaqueGrayICM(*):java.awt.image.IndexColorModel.allgrayopaque
sun.java2d.loops.IndexedCompositing.ColorFillAlphaToIndexed(*):java.awt.image.IndexColorModel.map_size
sun.java2d.loops.IndexedCompositing.ColorFillAlphaToIndexed(*):java.awt.image.IndexColorModel.rgb

sun.java2d.pipe.Region.initIDs(*):bands
sun.java2d.pipe.Region.initIDs(*):endIndex
sun.java2d.pipe.Region.initIDs(*):hix
sun.java2d.pipe.Region.initIDs(*):hiy
sun.java2d.pipe.Region.initIDs(*):lox
sun.java2d.pipe.Region.initIDs(*):loy
sun.java2d.pipe.ShapeSpanIterator.initIDs(*):pData
sun.java2d.pipe.SpanClipRenderer.initIDs(*):sun.java2d.pipe.Region.bands
sun.java2d.pipe.SpanClipRenderer.initIDs(*):sun.java2d.pipe.Region.endIndex
sun.java2d.pipe.SpanClipRenderer.initIDs(*):sun.java2d.pipe.RegionIterator.curIndex
sun.java2d.pipe.SpanClipRenderer.initIDs(*):sun.java2d.pipe.RegionIterator.numXbands
sun.java2d.pipe.SpanClipRenderer.initIDs(*):sun.java2d.pipe.RegionIterator.region

sun.print.Win32PrintJob.endPrintRawData(*):hPrintJob
sun.print.Win32PrintJob.printRawData(*):hPrintJob
sun.print.Win32PrintJob.startPrintRawData(*):hPrintJob
